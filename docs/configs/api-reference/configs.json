{
  "market-data": {
    "getTopCryptoCurrenciesByTradingVolume": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top Crypto Currencies tokens by trading volume",
      "description": "Get the top Crypto Currencies by trading volume",
      "method": "GET",
      "path": "/market-data/global/volume",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the top Crypto Currencies by trading volume",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "symbol",
                  "type": "string",
                  "example": "ETH",
                  "description": "The token symbol",
                  "required": true
                },
                {
                  "name": "name",
                  "type": "string",
                  "example": "Ethereum",
                  "description": "The token name",
                  "required": true
                },
                {
                  "name": "logo",
                  "type": "string",
                  "example": "https://assets.coingecko.com/coins/images/279/large/ethereum.png?1595348880",
                  "description": "The token logo",
                  "required": true
                },
                {
                  "name": "circulating_supply",
                  "type": "string",
                  "example": "0.0",
                  "description": "The circulating supply",
                  "required": true
                },
                {
                  "name": "total_supply",
                  "type": "string",
                  "example": "0.0",
                  "description": "The total supply",
                  "required": true
                },
                {
                  "name": "max_supply",
                  "type": "string",
                  "example": "0.0",
                  "description": "The max supply",
                  "required": true
                },
                {
                  "name": "market_cap_usd",
                  "type": "string",
                  "example": "0.0",
                  "description": "The market cap in USD",
                  "required": true
                },
                {
                  "name": "market_cap_rank",
                  "type": "string",
                  "example": "0.0",
                  "description": "The market cap rank",
                  "required": true
                },
                {
                  "name": "market_cap_24hr_change",
                  "type": "string",
                  "example": "0.0285",
                  "description": "The market cap change in the last 24h",
                  "required": true
                },
                {
                  "name": "market_cap_24hr_percent_change",
                  "type": "string",
                  "example": "0.0285",
                  "description": "The market cap percent change in the last 24h",
                  "required": true
                },
                {
                  "name": "total_volume",
                  "type": "string",
                  "example": "0.0",
                  "description": "The total volume",
                  "required": true
                },
                {
                  "name": "usd_price",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price in USD",
                  "required": true
                },
                {
                  "name": "usd_price_24hr_high",
                  "type": "string",
                  "example": "0.0",
                  "description": "The 24h high price in USD",
                  "required": true
                },
                {
                  "name": "usd_price_24hr_low",
                  "type": "string",
                  "example": "0.0",
                  "description": "The 24h low price in USD",
                  "required": true
                },
                {
                  "name": "usd_price_24hr_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price change in the last 24h",
                  "required": true
                },
                {
                  "name": "usd_price_24hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price percent change in the last 24h",
                  "required": true
                },
                {
                  "name": "usd_price_ath",
                  "type": "string",
                  "example": "0.0",
                  "description": "The all time high price in USD",
                  "required": true
                },
                {
                  "name": "ath_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The all time high percent change",
                  "required": true
                },
                {
                  "name": "ath_date",
                  "type": "string",
                  "example": "0.0",
                  "description": "The all time high date",
                  "required": true
                },
                {
                  "name": "usd_price_1hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price change in the last 1h",
                  "required": true
                },
                {
                  "name": "usd_price_7d_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price change in the last 7d",
                  "required": true
                },
                {
                  "name": "usd_price_30d_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price change in the last 30d",
                  "required": true
                }
              ]
            }
          }
        }
      ]
    },
    "getTopCryptoCurrenciesByMarketCap": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top Crypto Currencies tokens by market cap",
      "description": "Get the top Crypto Currencies by market cap",
      "method": "GET",
      "path": "/market-data/global/market-cap",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the top Crypto Currencies by market cap",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "symbol",
                  "type": "string",
                  "example": "ETH",
                  "description": "The token symbol",
                  "required": true
                },
                {
                  "name": "name",
                  "type": "string",
                  "example": "Ethereum",
                  "description": "The token name",
                  "required": true
                },
                {
                  "name": "logo",
                  "type": "string",
                  "example": "https://assets.coingecko.com/coins/images/279/large/ethereum.png?1595348880",
                  "description": "The token logo",
                  "required": true
                },
                {
                  "name": "circulating_supply",
                  "type": "string",
                  "example": "0.0",
                  "description": "The circulating supply",
                  "required": true
                },
                {
                  "name": "total_supply",
                  "type": "string",
                  "example": "0.0",
                  "description": "The total supply",
                  "required": true
                },
                {
                  "name": "max_supply",
                  "type": "string",
                  "example": "0.0",
                  "description": "The max supply",
                  "required": true
                },
                {
                  "name": "market_cap_usd",
                  "type": "string",
                  "example": "0.0",
                  "description": "The market cap in USD",
                  "required": true
                },
                {
                  "name": "market_cap_rank",
                  "type": "string",
                  "example": "0.0",
                  "description": "The market cap rank",
                  "required": true
                },
                {
                  "name": "market_cap_24hr_change",
                  "type": "string",
                  "example": "0.0285",
                  "description": "The market cap change in the last 24h",
                  "required": true
                },
                {
                  "name": "market_cap_24hr_percent_change",
                  "type": "string",
                  "example": "0.0285",
                  "description": "The market cap percent change in the last 24h",
                  "required": true
                },
                {
                  "name": "total_volume",
                  "type": "string",
                  "example": "0.0",
                  "description": "The total volume",
                  "required": true
                },
                {
                  "name": "usd_price",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price in USD",
                  "required": true
                },
                {
                  "name": "usd_price_24hr_high",
                  "type": "string",
                  "example": "0.0",
                  "description": "The 24h high price in USD",
                  "required": true
                },
                {
                  "name": "usd_price_24hr_low",
                  "type": "string",
                  "example": "0.0",
                  "description": "The 24h low price in USD",
                  "required": true
                },
                {
                  "name": "usd_price_24hr_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price change in the last 24h",
                  "required": true
                },
                {
                  "name": "usd_price_24hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price percent change in the last 24h",
                  "required": true
                },
                {
                  "name": "usd_price_ath",
                  "type": "string",
                  "example": "0.0",
                  "description": "The all time high price in USD",
                  "required": true
                },
                {
                  "name": "ath_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The all time high percent change",
                  "required": true
                },
                {
                  "name": "ath_date",
                  "type": "string",
                  "example": "0.0",
                  "description": "The all time high date",
                  "required": true
                },
                {
                  "name": "usd_price_1hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price change in the last 1h",
                  "required": true
                },
                {
                  "name": "usd_price_7d_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price change in the last 7d",
                  "required": true
                },
                {
                  "name": "usd_price_30d_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The price change in the last 30d",
                  "required": true
                }
              ]
            }
          }
        }
      ]
    },
    "getTopERC20TokensByMarketCap": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top ERC20 tokens",
      "description": "Get the top ERC20 tokens by market cap",
      "method": "GET",
      "path": "/market-data/erc20s/top-tokens",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the top ERC20 tokens by market cap",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "rank",
                  "type": "string",
                  "example": "1",
                  "description": "The rank",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Wrapped Ether",
                  "description": "The token name",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "WETH",
                  "description": "The token symbol",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "https://cdn.moralis.io/eth/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.png",
                  "description": "The token logo",
                  "required": true
                },
                {
                  "name": "token_decimals",
                  "type": "string",
                  "example": "18",
                  "description": "The token decimals",
                  "required": true
                },
                {
                  "name": "contract_address",
                  "type": "string",
                  "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                  "description": "The contract address",
                  "required": true
                },
                {
                  "name": "price_usd",
                  "type": "string",
                  "example": "0.0285",
                  "description": "he price in USD",
                  "required": true
                },
                {
                  "name": "price_24h_percent_change",
                  "type": "string",
                  "example": "0.0285",
                  "description": "The price change in the last 24h",
                  "required": true
                },
                {
                  "name": "price_7d_percent_change",
                  "type": "string",
                  "example": "0.0285",
                  "description": "The price change in the last 7d",
                  "required": true
                },
                {
                  "name": "market_cap_usd",
                  "type": "string",
                  "example": "0.0285",
                  "description": "The market cap in USD",
                  "required": true
                }
              ]
            }
          }
        }
      ]
    },
    "getTopERC20TokensByPriceMovers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top ERC20 tokens",
      "description": "Get the top ERC20 tokens by price change",
      "method": "GET",
      "path": "/market-data/erc20s/top-movers",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns an a list of ERC20 tokens with their price change",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "gainers",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "rank",
                      "type": "string",
                      "description": "The rank",
                      "example": "1",
                      "required": true
                    },
                    {
                      "name": "token_name",
                      "type": "string",
                      "description": "The token name",
                      "example": "Wrapped Ether",
                      "required": true
                    },
                    {
                      "name": "token_symbol",
                      "type": "string",
                      "description": "The token symbol",
                      "example": "WETH",
                      "required": true
                    },
                    {
                      "name": "token_logo",
                      "type": "string",
                      "description": "The token image",
                      "example": "https://assets.coingecko.com/coins/images/2518/large/weth.png?1595348880",
                      "required": true
                    },
                    {
                      "name": "token_decimals",
                      "type": "string",
                      "description": "The token decimals",
                      "example": "18",
                      "required": true
                    },
                    {
                      "name": "contract_address",
                      "type": "string",
                      "description": "The contract address",
                      "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                      "required": true
                    },
                    {
                      "name": "price_usd",
                      "type": "string",
                      "description": "The price in USD",
                      "example": "0.0285",
                      "required": true
                    },
                    {
                      "name": "price_24h_percent_change",
                      "type": "string",
                      "description": "The price change in the last 24h",
                      "example": "0.0285",
                      "required": true
                    },
                    {
                      "name": "price_7d_percent_change",
                      "type": "string",
                      "description": "The price change in the last 7d",
                      "example": "0.0285",
                      "required": true
                    },
                    {
                      "name": "market_cap_usd",
                      "type": "string",
                      "description": "The market cap in USD",
                      "example": "0.0285",
                      "required": true
                    }
                  ]
                }
              },
              {
                "name": "losers",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "rank",
                      "type": "string",
                      "description": "The rank",
                      "example": "1",
                      "required": true
                    },
                    {
                      "name": "token_name",
                      "type": "string",
                      "description": "The token name",
                      "example": "Wrapped Ether",
                      "required": true
                    },
                    {
                      "name": "token_symbol",
                      "type": "string",
                      "description": "The token symbol",
                      "example": "WETH",
                      "required": true
                    },
                    {
                      "name": "token_logo",
                      "type": "string",
                      "description": "The token image",
                      "example": "https://assets.coingecko.com/coins/images/2518/large/weth.png?1595348880",
                      "required": true
                    },
                    {
                      "name": "token_decimals",
                      "type": "string",
                      "description": "The token decimals",
                      "example": "18",
                      "required": true
                    },
                    {
                      "name": "contract_address",
                      "type": "string",
                      "description": "The contract address",
                      "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                      "required": true
                    },
                    {
                      "name": "price_usd",
                      "type": "string",
                      "description": "The price in USD",
                      "example": "0.0285",
                      "required": true
                    },
                    {
                      "name": "price_24h_percent_change",
                      "type": "string",
                      "description": "The price change in the last 24h",
                      "example": "0.0285",
                      "required": true
                    },
                    {
                      "name": "price_7d_percent_change",
                      "type": "string",
                      "description": "The price change in the last 7d",
                      "example": "0.0285",
                      "required": true
                    },
                    {
                      "name": "market_cap_usd",
                      "type": "string",
                      "description": "The market cap in USD",
                      "example": "0.0285",
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getTopNFTCollectionsByMarketCap": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top NFT collections",
      "description": "Get the top NFT collections by market cap",
      "method": "GET",
      "path": "/market-data/nfts/top-collections",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the top NFT collections by market cap",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "rank",
                  "type": "number",
                  "example": 1,
                  "description": "The rank",
                  "required": true
                },
                {
                  "name": "collection_title",
                  "type": "string",
                  "example": "CryptoPunks",
                  "description": "The collection title",
                  "required": true
                },
                {
                  "name": "collection_image",
                  "type": "string",
                  "description": "The collection image",
                  "required": true
                },
                {
                  "name": "floor_price_usd",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price in USD",
                  "required": true
                },
                {
                  "name": "floor_price_24hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price 24hr percent change",
                  "required": true
                },
                {
                  "name": "market_cap_usd",
                  "type": "string",
                  "example": "0.0",
                  "description": "The market cap in USD",
                  "required": true
                },
                {
                  "name": "market_cap_24hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The market cap 24hr percent change",
                  "required": true
                },
                {
                  "name": "volume_usd",
                  "type": "string",
                  "example": "0.0",
                  "description": "The volume in USD",
                  "required": true
                },
                {
                  "name": "volume_24hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The volume 24hr percent change",
                  "required": true
                },
                {
                  "name": "collection_address",
                  "type": "string",
                  "example": "0x123",
                  "description": "The collection address",
                  "required": true
                },
                {
                  "name": "floor_price",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price",
                  "required": true
                },
                {
                  "name": "floor_price_usd_24hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price 24hr percent change",
                  "required": true
                }
              ]
            }
          }
        }
      ]
    },
    "getHottestNFTCollectionsByTradingVolume": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top NFT collections",
      "description": "Get the top NFT collections by trading volume",
      "method": "GET",
      "path": "/market-data/nfts/hottest-collections",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the top NFT collections by trading volume",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "rank",
                  "type": "number",
                  "example": 1,
                  "description": "The rank",
                  "required": true
                },
                {
                  "name": "collection_title",
                  "type": "string",
                  "example": "CryptoPunks",
                  "description": "The collection title",
                  "required": true
                },
                {
                  "name": "collection_image",
                  "type": "string",
                  "description": "The collection image",
                  "required": true
                },
                {
                  "name": "floor_price_usd",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price in USD",
                  "required": true
                },
                {
                  "name": "floor_price_24hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price 24hr percent change",
                  "required": true
                },
                {
                  "name": "volume_usd",
                  "type": "string",
                  "example": "0.0",
                  "description": "The volume in USD",
                  "required": true
                },
                {
                  "name": "volume_24hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The volume 24hr percent change",
                  "required": true
                },
                {
                  "name": "The average price in USD",
                  "type": "string",
                  "example": "0.0",
                  "description": "The volume 24hr percent change",
                  "required": true
                },
                {
                  "name": "collection_address",
                  "type": "string",
                  "example": "0x123",
                  "description": "The collection address",
                  "required": true
                },
                {
                  "name": "average_price",
                  "type": "string",
                  "example": "0.0",
                  "description": "The average price",
                  "required": true
                },
                {
                  "name": "floor_price",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price",
                  "required": true
                },
                {
                  "name": "floor_price_usd_24hr_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price 24hr percent change",
                  "required": true
                },
                {
                  "name": "floor_price_7d_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price 7d percent change",
                  "required": true
                },
                {
                  "name": "floor_price_usd_7d_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price 7d percent change",
                  "required": true
                },
                {
                  "name": "floor_price_30d_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price 30d percent change",
                  "required": true
                },
                {
                  "name": "floor_price_usd_30d_percent_change",
                  "type": "string",
                  "example": "0.0",
                  "description": "The floor price 30d percent change",
                  "required": true
                }
              ]
            }
          }
        }
      ]
    }
  },
  "wallet": {
    "getWalletActiveChains": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "getWalletActiveChains",
      "description": "Get the active chains for a wallet address.",
      "method": "GET",
      "path": "/wallets/:address/chains",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "type": "string",
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905"
        }
      ],
      "queryParams": [
        {
          "name": "chains",
          "description": "The chains to query.",
          "required": false,
          "type": "array",
          "field": {
            "type": "string",
            "example": "eth",
            "enum": [
              "eth",
              "0x1",
              "polygon",
              "0x89",
              "bsc",
              "0x38",
              "avalanche",
              "0xa86a",
              "fantom",
              "0xfa",
              "cronos",
              "0x19",
              "arbitrum",
              "0xa4b1",
              "chiliz",
              "0x15b38",
              "gnosis",
              "0x64",
              "base",
              "0x2105",
              "optimism",
              "0xa",
              "linea",
              "0xe708",
              "moonbeam",
              "0x504",
              "moonriver",
              "0x505",
              "flow",
              "0x2eb",
              "ronin",
              "0x7e4",
              "lisk",
              "0x46f",
              "pulse",
              "0x171"
            ]
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the active chains for the wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "The address of the wallet",
                "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
              },
              {
                "name": "active_chains",
                "type": "object",
                "fields": [
                  {
                    "name": "chain",
                    "type": "string",
                    "description": "The chain name",
                    "example": "eth"
                  },
                  {
                    "name": "chain_id",
                    "type": "string",
                    "description": "The chain id",
                    "example": "0x1"
                  },
                  {
                    "name": "first_transaction",
                    "type": "object",
                    "fields": [
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": "123456789",
                        "required": true
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp",
                        "example": "2022-08-23T20:58:31.000Z",
                        "required": true
                      },
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09",
                        "required": true
                      }
                    ]
                  },
                  {
                    "name": "last_transaction",
                    "type": "object",
                    "fields": [
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": "123456789",
                        "required": true
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp",
                        "example": "2022-08-23T20:58:31.000Z",
                        "required": true
                      },
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09",
                        "required": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the wallet stats",
      "description": "Get the stats for a wallet address.",
      "method": "GET",
      "path": "/wallets/:address/stats",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "type": "string",
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the stats for the wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "nfts",
                "type": "string",
                "description": "The number of NFTs owned by a wallet",
                "example": "100"
              },
              {
                "name": "collections",
                "type": "string",
                "description": "The number of unique NFT collections owned by a wallet",
                "example": "10"
              },
              {
                "name": "transactions",
                "type": "object",
                "description": "Transaction stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of transactions sent by a wallet",
                    "example": "1000"
                  }
                ]
              },
              {
                "name": "nft_transfers",
                "type": "object",
                "description": "NFT transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of NFT transfers of a wallet",
                    "example": "1000"
                  }
                ]
              },
              {
                "name": "token_transfers",
                "type": "object",
                "description": "Token transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of ERC20 token transfers of a wallet",
                    "example": "1000"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletNetWorth": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get wallet net worth",
      "description": "Get the net worth of a wallet in USD. We recommend to filter out spam tokens and unverified contracts to get a more accurate result.",
      "method": "GET",
      "path": "/wallets/:address/net-worth",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address",
          "required": true,
          "example": "0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chains",
          "description": "The chains to query.",
          "required": false,
          "type": "array",
          "field": {
            "type": "string",
            "example": "eth",
            "enum": [
              "eth",
              "0x1",
              "polygon",
              "0x89",
              "bsc",
              "0x38",
              "avalanche",
              "0xa86a",
              "fantom",
              "0xfa",
              "cronos",
              "0x19",
              "arbitrum",
              "0xa4b1",
              "chiliz",
              "0x15b38",
              "gnosis",
              "0x64",
              "base",
              "0x2105",
              "optimism",
              "0xa",
              "linea",
              "0xe708",
              "moonbeam",
              "0x504",
              "moonriver",
              "0x505",
              "flow",
              "0x2eb",
              "ronin",
              "0x7e4",
              "lisk",
              "0x46f",
              "pulse",
              "0x171"
            ]
          }
        },
        {
          "name": "exclude_spam",
          "description": "Exclude spam tokens from the result",
          "required": false,
          "example": true,
          "type": "boolean"
        },
        {
          "name": "exclude_unverified_contracts",
          "description": "Exclude unverified contracts from the result",
          "required": false,
          "example": true,
          "type": "boolean"
        },
        {
          "name": "max_token_inactivity",
          "description": "Exclude tokens inactive for more than the given amount of days",
          "example": 1,
          "required": false,
          "type": "number"
        },
        {
          "name": "min_pair_side_liquidity_usd",
          "description": "Exclude tokens with liquidity less than the specified amount in USD. This parameter refers to the liquidity on a single side of the pair.",
          "required": false,
          "example": 1000,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the net worth and chain balance data.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total_networth_usd",
                "type": "string",
                "description": "The total net worth in USD",
                "example": "3879851.41"
              },
              {
                "name": "chains",
                "type": "array",
                "description": "An array of chain balance objects",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "chain",
                      "type": "string",
                      "description": "The identifier for the blockchain (e.g., 'eth' for Ethereum)",
                      "example": "eth"
                    },
                    {
                      "name": "native_balance",
                      "type": "string",
                      "description": "The balance of the native currency on the chain in its smallest unit (e.g., wei for Ethereum)",
                      "example": "1085513807021271641379"
                    },
                    {
                      "name": "native_balance_formatted",
                      "type": "string",
                      "description": "The formatted balance of the native currency on the chain",
                      "example": "1085.513807021271641379"
                    },
                    {
                      "name": "native_balance_usd",
                      "type": "string",
                      "description": "The USD value of the native currency balance",
                      "example": "3158392.48"
                    },
                    {
                      "name": "token_balance_usd",
                      "type": "string",
                      "description": "The USD value of the token balance on the chain",
                      "example": "721458.93"
                    },
                    {
                      "name": "networth_usd",
                      "type": "string",
                      "description": "The total net worth in USD associated with this chain",
                      "example": "3879851.41"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getWalletHistory": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the complete history of a wallet",
      "description": "Retrieve the full transaction history of a specified wallet address, including sends, receives, token and NFT transfers, and contract interactions.",
      "method": "GET",
      "path": "/wallets/:address/history",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "gnosis",
            "0x64",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "flow",
            "0x2eb",
            "ronin",
            "0x7e4",
            "lisk",
            "0x46f",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the transactions up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "include_internal_transactions",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "nft_metadata",
          "description": "If the result should contain the nft metadata.",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the transaction data.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page number in the paginated result set",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of items per page in the paginated result set",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "A cursor for use in pagination",
                "example": ""
              },
              {
                "name": "result",
                "type": "array",
                "description": "An array of transaction objects",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "hash",
                      "type": "string",
                      "description": "The hash of the transaction",
                      "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
                    },
                    {
                      "name": "nonce",
                      "type": "string",
                      "description": "The nonce of the transaction",
                      "example": "1848059"
                    },
                    {
                      "name": "transaction_index",
                      "type": "string",
                      "description": "The position of the transaction in the block",
                      "example": "108"
                    },
                    {
                      "name": "from_address_entity",
                      "type": "string",
                      "description": "The from address entity",
                      "example": "Opensea"
                    },
                    {
                      "name": "from_address_entity_logo",
                      "type": "string",
                      "description": "The logo of the from address entity",
                      "example": "https://opensea.io/favicon.ico"
                    },
                    {
                      "name": "from_address",
                      "type": "string",
                      "description": "The address sending the transaction",
                      "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
                    },
                    {
                      "name": "from_address_label",
                      "type": "string",
                      "description": "Label for the from address",
                      "example": "Binance 1"
                    },
                    {
                      "name": "to_address_entity",
                      "type": "string",
                      "description": "The to address entity",
                      "example": "Beaver Build"
                    },
                    {
                      "name": "to_address_entity_logo",
                      "type": "string",
                      "description": "The logo of the to address entity",
                      "example": "https://beaverbuild.com/favicon.ico"
                    },
                    {
                      "name": "to_address",
                      "type": "string",
                      "description": "The address receiving the transaction",
                      "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                    },
                    {
                      "name": "to_address_label",
                      "type": "string",
                      "description": "Label for the to address",
                      "example": "Binance 2"
                    },
                    {
                      "name": "value",
                      "type": "string",
                      "description": "The value transferred in the transaction",
                      "example": "115580000000000000"
                    },
                    {
                      "name": "gas",
                      "type": "string",
                      "description": "The gas limit provided by the sender",
                      "example": "30000"
                    },
                    {
                      "name": "gas_price",
                      "type": "string",
                      "description": "The gas price set for the transaction",
                      "example": "52500000000"
                    },
                    {
                      "name": "receipt_cumulative_gas_used",
                      "type": "string",
                      "description": "The total gas used in the block up until this transaction",
                      "example": "4923073"
                    },
                    {
                      "name": "receipt_gas_used",
                      "type": "string",
                      "description": "The gas used by this transaction alone",
                      "example": "21000"
                    },
                    {
                      "name": "receipt_contract_address",
                      "type": "string",
                      "description": "The contract address created by the transaction, if any",
                      "example": null
                    },
                    {
                      "name": "receipt_root",
                      "type": "string",
                      "description": "The receipt root of the transaction",
                      "example": null
                    },
                    {
                      "name": "receipt_status",
                      "type": "string",
                      "description": "The status of the transaction (1 for success, 0 for failure)",
                      "example": "1"
                    },
                    {
                      "name": "block_timestamp",
                      "type": "string",
                      "description": "The timestamp for the block containing the transaction",
                      "example": "2021-05-07T11:08:35.000Z"
                    },
                    {
                      "name": "block_number",
                      "type": "string",
                      "description": "The block number containing the transaction",
                      "example": "12386788"
                    },
                    {
                      "name": "block_hash",
                      "type": "string",
                      "description": "The hash of the block containing the transaction",
                      "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                    },
                    {
                      "name": "internal_transactions",
                      "type": "array",
                      "description": "An array of internal transactions triggered by the transaction",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "transaction_hash",
                            "type": "string",
                            "description": "The hash of the internal transaction",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                          },
                          {
                            "name": "block_number",
                            "type": "string",
                            "description": "The block number in which the internal transaction was included",
                            "example": "12526958"
                          },
                          {
                            "name": "block_hash",
                            "type": "string",
                            "description": "The hash of the block containing the internal transaction",
                            "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                          },
                          {
                            "name": "type",
                            "type": "string",
                            "description": "The type of internal transaction (e.g., CALL, CREATE)",
                            "example": "CALL"
                          },
                          {
                            "name": "from",
                            "type": "string",
                            "description": "The address initiating the internal transaction",
                            "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                          },
                          {
                            "name": "to",
                            "type": "string",
                            "description": "The address the internal transaction was directed to",
                            "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "description": "The value transferred in the internal transaction",
                            "example": "650000000000000000"
                          },
                          {
                            "name": "gas",
                            "type": "string",
                            "description": "The gas provided for the internal transaction",
                            "example": "6721975"
                          },
                          {
                            "name": "gas_used",
                            "type": "string",
                            "description": "The gas used by the internal transaction",
                            "example": "6721975"
                          },
                          {
                            "name": "input",
                            "type": "string",
                            "description": "The input data for the internal transaction",
                            "example": "0x"
                          },
                          {
                            "name": "output",
                            "type": "string",
                            "description": "The output of the internal transaction",
                            "example": "0x"
                          }
                        ]
                      }
                    },
                    {
                      "name": "nft_transfers",
                      "type": "array",
                      "description": "An array of NFT transfers triggered by the transaction",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "token_address",
                            "type": "string",
                            "description": "The address of the NFT contract",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                          },
                          {
                            "name": "token_id",
                            "type": "string",
                            "description": "The unique identifier of the NFT",
                            "example": "15"
                          },
                          {
                            "name": "from_address_entity",
                            "type": "string",
                            "description": "The from address entity",
                            "example": "Opensea"
                          },
                          {
                            "name": "from_address_entity_logo",
                            "type": "string",
                            "description": "The logo of the from address entity",
                            "example": "https://opensea.io/favicon.ico"
                          },
                          {
                            "name": "from_address",
                            "type": "string",
                            "description": "The address from which the NFT was transferred",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                          },
                          {
                            "name": "from_address_label",
                            "type": "string",
                            "description": "Label for the from address of the NFT transfer",
                            "example": "Binance 1"
                          },
                          {
                            "name": "to_address_entity",
                            "type": "string",
                            "description": "The to address entity",
                            "example": "Beaver Build"
                          },
                          {
                            "name": "to_address_entity_logo",
                            "type": "string",
                            "description": "The logo of the to address entity",
                            "example": "https://beaverbuild.com/favicon.ico"
                          },
                          {
                            "name": "to_address",
                            "type": "string",
                            "description": "The address to which the NFT was transferred",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                          },
                          {
                            "name": "to_address_label",
                            "type": "string",
                            "description": "Label for the to address of the NFT transfer",
                            "example": "Binance 2"
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "description": "The value of the NFT transferred",
                            "example": "1000000000000000"
                          },
                          {
                            "name": "amount",
                            "type": "string",
                            "description": "The amount of the NFT transferred",
                            "example": "1"
                          },
                          {
                            "name": "contract_type",
                            "type": "string",
                            "description": "The contract type of the NFT (e.g., ERC721)",
                            "example": "ERC721"
                          },
                          {
                            "name": "block_number",
                            "type": "string",
                            "description": "The block number in which the NFT transfer occurred",
                            "example": "88256"
                          },
                          {
                            "name": "block_timestamp",
                            "type": "string",
                            "description": "The timestamp for the block containing the NFT transfer",
                            "example": "2021-06-04T16:00:15"
                          },
                          {
                            "name": "block_hash",
                            "type": "string",
                            "description": "The hash of the block containing the NFT transfer",
                            "example": "string"
                          },
                          {
                            "name": "transaction_hash",
                            "type": "string",
                            "description": "The hash of the transaction containing the NFT transfer",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                          },
                          {
                            "name": "transaction_type",
                            "type": "string",
                            "description": "The type of transaction",
                            "example": "string"
                          },
                          {
                            "name": "transaction_index",
                            "type": "number",
                            "description": "The index of the transaction in the block",
                            "example": 1
                          },
                          {
                            "name": "log_index",
                            "type": "number",
                            "description": "The index of the log in the block",
                            "example": 1
                          },
                          {
                            "name": "operator",
                            "type": "string",
                            "description": "The operator executing the NFT transfer",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                          },
                          {
                            "name": "possible_spam",
                            "type": "boolean",
                            "description": "Flag indicating if the transfer might be spam",
                            "example": false
                          },
                          {
                            "name": "verified_collection",
                            "type": "boolean",
                            "description": "Flag indicating if the NFT is from a verified collection",
                            "example": false
                          }
                        ]
                      }
                    },
                    {
                      "name": "erc20_transfer",
                      "type": "array",
                      "description": "An array of ERC20 token transfers triggered by the transaction",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "token_name",
                            "type": "string",
                            "description": "The name of the ERC20 token",
                            "example": "Tether USD"
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "description": "The symbol of the ERC20 token",
                            "example": "USDT"
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "description": "The logo URL of the ERC20 token",
                            "example": "https://assets.coingecko.com/coins/images/325/large/Tether-logo.png?1598003707"
                          },
                          {
                            "name": "token_decimals",
                            "type": "string",
                            "description": "The decimals of the ERC20 token",
                            "example": "6"
                          },
                          {
                            "name": "transaction_hash",
                            "type": "string",
                            "description": "The hash of the transaction containing the ERC20 transfer",
                            "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                          },
                          {
                            "name": "address",
                            "type": "string",
                            "description": "The address of the ERC20 contract",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                          },
                          {
                            "name": "block_timestamp",
                            "type": "string",
                            "description": "The timestamp for the block containing the ERC20 transfer",
                            "example": "2021-04-02T10:07:54.000Z"
                          },
                          {
                            "name": "block_number",
                            "type": "string",
                            "description": "The block number in which the ERC20 transfer occurred",
                            "example": "12526958"
                          },
                          {
                            "name": "block_hash",
                            "type": "string",
                            "description": "The hash of the block containing the ERC20 transfer",
                            "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                          },
                          {
                            "name": "to_address_entity",
                            "type": "string",
                            "description": "The to address entity",
                            "example": "Beaver Build"
                          },
                          {
                            "name": "to_address_entity_logo",
                            "type": "string",
                            "description": "The logo of the to address entity",
                            "example": "https://beaverbuild.com/favicon.ico"
                          },
                          {
                            "name": "to_address",
                            "type": "string",
                            "description": "The address to which the ERC20 token was transferred",
                            "example": "0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044"
                          },
                          {
                            "name": "to_address_label",
                            "type": "string",
                            "description": "Label for the to address of the ERC20 transfer",
                            "example": "Binance 2"
                          },
                          {
                            "name": "from_address_entity",
                            "type": "string",
                            "description": "The from address entity",
                            "example": "Opensea"
                          },
                          {
                            "name": "from_address_entity_logo",
                            "type": "string",
                            "description": "The logo of the from address entity",
                            "example": "https://opensea.io/favicon.ico"
                          },
                          {
                            "name": "from_address",
                            "type": "string",
                            "description": "The address from which the ERC20 token was transferred",
                            "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                          },
                          {
                            "name": "from_address_label",
                            "type": "string",
                            "description": "Label for the from address of the ERC20 transfer",
                            "example": "Binance 1"
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "description": "The value of the ERC20 token transferred",
                            "example": "650000000000000000"
                          },
                          {
                            "name": "transaction_index",
                            "type": "number",
                            "description": "The index of the transaction in the block",
                            "example": 12
                          },
                          {
                            "name": "log_index",
                            "type": "number",
                            "description": "The index of the log in the block",
                            "example": 2
                          },
                          {
                            "name": "possible_spam",
                            "type": "boolean",
                            "description": "Flag indicating if the transfer might be spam",
                            "example": false
                          },
                          {
                            "name": "verified_contract",
                            "type": "boolean",
                            "description": "Flag indicating if the ERC20 contract is verified",
                            "example": false
                          }
                        ]
                      }
                    },
                    {
                      "name": "native_transfers",
                      "type": "array",
                      "description": "An array of native currency transfers triggered by the transaction",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "from_address_entity",
                            "type": "string",
                            "description": "The from address entity",
                            "example": "Opensea"
                          },
                          {
                            "name": "from_address_entity_logo",
                            "type": "string",
                            "description": "The logo of the from address entity",
                            "example": "https://opensea.io/favicon.ico"
                          },
                          {
                            "name": "from_address",
                            "type": "string",
                            "description": "The address from which the native currency was transferred",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                          },
                          {
                            "name": "from_address_label",
                            "type": "string",
                            "description": "Label for the from address of the native transfer",
                            "example": "Binance 1"
                          },
                          {
                            "name": "to_address_entity",
                            "type": "string",
                            "description": "The to address entity",
                            "example": "Beaver Build"
                          },
                          {
                            "name": "to_address_entity_logo",
                            "type": "string",
                            "description": "The logo of the to address entity",
                            "example": "https://beaverbuild.com/favicon.ico"
                          },
                          {
                            "name": "to_address",
                            "type": "string",
                            "description": "The address to which the native currency was transferred",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                          },
                          {
                            "name": "to_address_label",
                            "type": "string",
                            "description": "Label for the to address of the native transfer",
                            "example": "Binance 2"
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "description": "The value of the native currency transferred",
                            "example": "1000000000000000"
                          },
                          {
                            "name": "value_formatted",
                            "type": "string",
                            "description": "The formatted value of the native currency transferred",
                            "example": "0.1"
                          },
                          {
                            "name": "direction",
                            "type": "string",
                            "description": "The direction of the transfer (incoming or outgoing)",
                            "example": "outgoing"
                          },
                          {
                            "name": "internal_transaction",
                            "type": "boolean",
                            "description": "Flag indicating if the transfer was an internal transaction",
                            "example": false
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "description": "The symbol of the native currency",
                            "example": "ETH"
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "description": "The logo URL of the native currency",
                            "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getWalletProfitabilitySummary": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Wallet Profitability Summary",
      "description": "Retrieves a summary of wallet profitability based on specified parameters including optional token addresses.",
      "method": "GET",
      "path": "/wallets/:address/profitability/summary",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address for which profitability summary is to be retrieved.",
          "required": true,
          "type": "string",
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905"
        }
      ],
      "queryParams": [
        {
          "name": "days",
          "description": "Timeframe in days for the profitability summary. Options include 'all', '7', '30', '60', '90' default is 'all'.",
          "required": false,
          "type": "string"
        },
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "base",
            "0x2105"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response with the profitability summary.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total_count_of_trades",
                "type": "number",
                "description": "Total count of trades executed by the wallet.",
                "example": 1
              },
              {
                "name": "total_trade_volume",
                "type": "string",
                "description": "Total trade volume managed by the wallet."
              },
              {
                "name": "total_realized_profit_usd",
                "type": "string",
                "description": "Total realized profit in USD for the wallet."
              },
              {
                "name": "total_realized_profit_percentage",
                "type": "number",
                "description": "Total realized profit as a percentage.",
                "example": 1
              },
              {
                "name": "total_buys",
                "type": "number",
                "description": "Total number of buy transactions.",
                "example": 1
              },
              {
                "name": "total_sells",
                "type": "number",
                "description": "Total number of sell transactions.",
                "example": 1
              },
              {
                "name": "total_sold_volume_usd",
                "type": "string",
                "description": "Total USD volume of tokens sold by the wallet."
              },
              {
                "name": "total_bought_volume_usd",
                "type": "string",
                "description": "Total USD volume of tokens bought by the wallet."
              }
            ]
          }
        }
      ]
    },
    "getWalletProfitability": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Wallet Profitability",
      "description": "Retrieves profitability information for a specific wallet address. Can be filtered by one or more tokens.",
      "method": "GET",
      "path": "/wallets/:address/profitability",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address for which profitability is to be retrieved.",
          "required": true,
          "type": "string",
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905"
        }
      ],
      "queryParams": [
        {
          "name": "days",
          "description": "Timeframe in days for which profitability is calculated, Options include 'all', '7', '30', '60', '90' default is 'all'.",
          "required": false,
          "type": "string"
        },
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "base",
            "0x2105"
          ]
        },
        {
          "name": "token_addresses",
          "description": "The token addresses list to filter the result with",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response with profitability data.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "object",
                "description": "List of tokens traded with their respective profitability data.",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the traded token."
                  },
                  {
                    "name": "avg_buy_price_usd",
                    "type": "string",
                    "description": "Average buy price in USD."
                  },
                  {
                    "name": "avg_sell_price_usd",
                    "type": "string",
                    "description": "Average sell price in USD."
                  },
                  {
                    "name": "total_usd_invested",
                    "type": "string",
                    "description": "Total USD invested."
                  },
                  {
                    "name": "total_tokens_sold",
                    "type": "string",
                    "description": "Total tokens sold."
                  },
                  {
                    "name": "total_tokens_bought",
                    "type": "string",
                    "description": "Total tokens bought."
                  },
                  {
                    "name": "total_sold_usd",
                    "type": "string",
                    "description": "Total USD received from selling tokens."
                  },
                  {
                    "name": "avg_cost_of_quantity_sold",
                    "type": "string",
                    "description": "Average cost of sold quantity."
                  },
                  {
                    "name": "count_of_trades",
                    "type": "number",
                    "description": "Count of trades for the token.",
                    "example": 1
                  },
                  {
                    "name": "realized_profit_usd",
                    "type": "string",
                    "description": "Realized profit in USD for the token."
                  },
                  {
                    "name": "realized_profit_percentage",
                    "type": "number",
                    "description": "Realized profit percentage for the token.",
                    "example": 1
                  },
                  {
                    "name": "total_buys",
                    "type": "number",
                    "description": "Total number of buys.",
                    "example": 1
                  },
                  {
                    "name": "total_sells",
                    "type": "number",
                    "description": "Total number of sells.",
                    "example": 1
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the token."
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "Symbol of the token."
                  },
                  {
                    "name": "decimals",
                    "type": "string",
                    "description": "Decimals of the token."
                  },
                  {
                    "name": "logo",
                    "type": "string",
                    "description": "Logo URL of the token."
                  },
                  {
                    "name": "logo_hash",
                    "type": "string",
                    "description": "Logo hash of the token."
                  },
                  {
                    "name": "thumbnail",
                    "type": "string",
                    "description": "Thumbnail image URL of the token."
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates whether the token is possibly spam.",
                    "example": true
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletTokenApprovals": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 approvals by wallet",
      "description": "Retrieve active ERC20 token approvals for the specified wallet address",
      "method": "GET",
      "path": "/wallets/:address/approvals",
      "pathParams": [
        {
          "name": "address",
          "description": "he wallet address from which to retrieve active ERC20 token approvals",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns active ERC20 token approvals for the specified wallet address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": 2
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "block_number",
                      "type": "string",
                      "description": "The block number",
                      "example": "12526958"
                    },
                    {
                      "name": "block_timestamp",
                      "type": "string",
                      "description": "The block timestamp",
                      "example": "2021-04-02T10:07:54.000Z"
                    },
                    {
                      "name": "transaction_hash",
                      "type": "string",
                      "description": "The transaction hash",
                      "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                    },
                    {
                      "name": "value",
                      "type": "string",
                      "description": "The native price of the token",
                      "example": "8409770570506626"
                    },
                    {
                      "name": "value_formatted",
                      "type": "string",
                      "description": "The value that was sent in the transaction (ETH/BNB/etc.) in decimal format",
                      "example": "0.1",
                      "nullable": true
                    },
                    {
                      "name": "token",
                      "type": "object",
                      "fields": [
                        {
                          "name": "address",
                          "type": "string",
                          "description": "The address of the token",
                          "example": "0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c"
                        },
                        {
                          "name": "address_label",
                          "type": "string",
                          "description": "The label of the token"
                        },
                        {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the token",
                          "example": "Tether USD"
                        },
                        {
                          "name": "symbol",
                          "type": "string",
                          "description": "The symbol of the token",
                          "example": "USDT"
                        },
                        {
                          "name": "logo",
                          "type": "string",
                          "description": "The logo of the token",
                          "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                        },
                        {
                          "name": "possible_spam",
                          "type": "boolean",
                          "description": "Indicates if a contract is possibly a spam contract",
                          "example": false
                        },
                        {
                          "name": "verified_contract",
                          "type": "boolean",
                          "description": "Indicates if a contract is verified",
                          "example": false
                        },
                        {
                          "name": "current_balance",
                          "type": "string",
                          "description": "The current balance of the token",
                          "example": "1000000000000000"
                        },
                        {
                          "name": "current_balance_formatted",
                          "type": "string",
                          "description": "The current balance of the token in decimal format",
                          "example": "0.1"
                        },
                        {
                          "name": "usd_price",
                          "type": "string",
                          "description": "The current price of the token in USD",
                          "example": "1000000000000000"
                        },
                        {
                          "name": "usd_at_risk",
                          "type": "string",
                          "nullable": true,
                          "description": "The amount of USD approve potentially at risk",
                          "example": "1000000000000000"
                        }
                      ]
                    },
                    {
                      "name": "spender",
                      "type": "object",
                      "fields": [
                        {
                          "name": "address",
                          "type": "string",
                          "description": "The address of the spender",
                          "example": "0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c"
                        },
                        {
                          "name": "address_label",
                          "type": "string",
                          "description": "The label of the spender",
                          "example": "Binance 1"
                        },
                        {
                          "name": "entity",
                          "type": "string",
                          "description": "The entity of the spender",
                          "example": "Opensea"
                        },
                        {
                          "name": "entity_logo",
                          "type": "string",
                          "description": "The logo of the spender",
                          "example": "https://opensea.io/favicon.ico"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  },
  "entities": {
    "getEntity": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Entity By ID",
      "description": "Retrieve detailed information about a specific entity by its ID",
      "method": "GET",
      "path": "/entities/:entityId",
      "pathParams": [
        {
          "name": "entityId",
          "description": "The ID of the entity",
          "required": true,
          "example": "uniswap",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns detailed information about the entity",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "name",
                "type": "string",
                "description": "The name of the entity",
                "example": "Uniswap"
              },
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the entity",
                "example": "uniswap"
              },
              {
                "name": "logo",
                "type": "string",
                "description": "The URL to the entity's logo",
                "example": "https://entities-logos.s3.us-east-1.amazonaws.com/uniswap.png"
              },
              {
                "name": "bio",
                "type": "string",
                "description": "A short bio or description of the entity",
                "example": "Uniswap is the pioneering Ethereum-powered decentralized exchange (DEX) facilitating the exchange of ERC-20 tokens through liquidity pools."
              },
              {
                "name": "description",
                "type": "string",
                "description": "A detailed description of the entity",
                "example": null
              },
              {
                "name": "website",
                "type": "string",
                "description": "The official website of the entity",
                "example": "https://uniswap.org"
              },
              {
                "name": "twitter",
                "type": "string",
                "description": "The Twitter handle of the entity",
                "example": "https://twitter.com/Uniswap"
              },
              {
                "name": "type",
                "type": "string",
                "description": "The type of entity (e.g., decentralized exchange, centralized exchange)",
                "example": "Decentralized Exchange"
              },
              {
                "name": "addresses",
                "type": "array",
                "description": "An array of addresses associated with the entity",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "address",
                      "type": "string",
                      "description": "The blockchain address of the entity",
                      "example": "0x54f1acac26b10cdffc8a43904713aa0ad67a33f9"
                    },
                    {
                      "name": "chain",
                      "type": "string",
                      "description": "The chain ID where the address is located",
                      "example": "0x1"
                    },
                    {
                      "name": "is_multi_chain",
                      "type": "boolean",
                      "description": "Indicates if the entity operates across multiple chains",
                      "example": "false"
                    },
                    {
                      "name": "primary_label",
                      "type": "string",
                      "description": "The primary label associated with the address",
                      "example": "Uniswap: V3 Pool"
                    },
                    {
                      "name": "additional_labels",
                      "type": "array",
                      "description": "Any additional labels associated with the address",
                      "field": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getEntitiesByCategory": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Entities By Category",
      "description": "Get Entities By Category",
      "method": "GET",
      "path": "/entities/categories/:categoryId",
      "pathParams": [
        {
          "name": "categoryId",
          "description": "",
          "required": true,
          "example": "centralized_exchange",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the entities belonging to the category.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": 1
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The name of the entity",
                      "example": "Uniswap"
                    },
                    {
                      "name": "id",
                      "type": "string",
                      "description": "The id of the entity",
                      "example": "uniswap"
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "description": "The logo of the entity",
                      "example": "https://uniswap.io/favicon.ico"
                    },
                    {
                      "name": "bio",
                      "type": "string",
                      "description": "The bio of the entity",
                      "example": "Uniswap is a decentralized finance protocol that is used to exchange cryptocurrencies."
                    },
                    {
                      "name": "description",
                      "type": "string",
                      "description": "The description of the entity",
                      "example": "Uniswap is a decentralized finance protocol that is used to exchange cryptocurrencies."
                    },
                    {
                      "name": "website",
                      "type": "string",
                      "description": "The website of the entity",
                      "example": "https://uniswap.io"
                    },
                    {
                      "name": "twitter",
                      "type": "string",
                      "description": "The Twitter handle of the entity",
                      "example": "https://twitter.com/uniswap"
                    },
                    {
                      "name": "type",
                      "type": "string",
                      "description": "The type of the entity",
                      "example": "exchange"
                    },
                    {
                      "name": "total_addresses",
                      "type": "number",
                      "description": "The total number of addresses",
                      "example": 100
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getEntityCategories": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Entity Categories",
      "description": "Get Entity Categories",
      "method": "GET",
      "path": "/entities/categories",
      "pathParams": [],
      "queryParams": [
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the entity categories.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": 1
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The name of the entity",
                      "example": "Centralized Exchange"
                    },
                    {
                      "name": "id",
                      "type": "string",
                      "description": "The id of the entity",
                      "example": "centralized_exchange"
                    },
                    {
                      "name": "total_entities",
                      "type": "number",
                      "description": "The total number of entities",
                      "example": 100
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "searchEntities": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Search Entities",
      "description": "Search for entities, addresses and categories",
      "method": "GET",
      "path": "/entities/search",
      "pathParams": [],
      "queryParams": [
        {
          "name": "query",
          "description": "The search query",
          "required": true,
          "type": "string",
          "example": "uniswap"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the search results.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": 1
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "entities",
                      "type": "array",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "name",
                            "type": "string",
                            "description": "The name of the entity",
                            "example": "Uniswap"
                          },
                          {
                            "name": "id",
                            "type": "string",
                            "description": "The id of the entity",
                            "example": "uniswap"
                          },
                          {
                            "name": "logo",
                            "type": "string",
                            "description": "The logo of the entity",
                            "example": "https://uniswap.io/favicon.ico"
                          },
                          {
                            "name": "bio",
                            "type": "string",
                            "description": "The bio of the entity",
                            "example": "Uniswap is a decentralized finance protocol that is used to exchange cryptocurrencies."
                          },
                          {
                            "name": "description",
                            "type": "string",
                            "description": "The description of the entity",
                            "example": "Uniswap is a decentralized finance protocol that is used to exchange cryptocurrencies."
                          },
                          {
                            "name": "website",
                            "type": "string",
                            "description": "The website of the entity",
                            "example": "https://uniswap.io"
                          },
                          {
                            "name": "twitter",
                            "type": "string",
                            "description": "The Twitter handle of the entity",
                            "example": "https://twitter.com/uniswap"
                          },
                          {
                            "name": "type",
                            "type": "string",
                            "description": "The type of the entity",
                            "example": "exchange"
                          }
                        ]
                      }
                    },
                    {
                      "name": "addresses",
                      "type": "array",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "address",
                            "type": "string",
                            "description": "The blockchain address of the entity",
                            "example": "0x54f1acac26b10cdffc8a43904713aa0ad67a33f9"
                          },
                          {
                            "name": "chain",
                            "type": "string",
                            "description": "The chain ID where the address is located",
                            "example": "0x1"
                          },
                          {
                            "name": "is_multi_chain",
                            "type": "boolean",
                            "description": "Indicates if the entity operates across multiple chains",
                            "example": "false"
                          },
                          {
                            "name": "primary_label",
                            "type": "string",
                            "description": "The primary label associated with the address",
                            "example": "Uniswap: V3 Pool"
                          },
                          {
                            "name": "entity",
                            "type": "array",
                            "field": {
                              "type": "object",
                              "fields": [
                                {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the entity",
                                  "example": "Uniswap"
                                },
                                {
                                  "name": "id",
                                  "type": "string",
                                  "description": "The id of the entity",
                                  "example": "uniswap"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  },
  "nft": {
    "getWalletNFTs": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFTs by wallet",
      "description": "Get NFTs owned by a given address.\n* The response will include status [SYNCED/SYNCING] based on the contracts being indexed.\n* Use the token_address param to get results for a specific contract only\n* Note that results will include all indexed NFTs\n* Any request that includes the token_address param will start the indexing process for that NFT collection the very first time it is requested.",
      "method": "GET",
      "path": "/:address/nft",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0xff3879b8a363aed92a6eaba8f61f1a96a9ec3c1e",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string",
          "enum": [
            "decimal",
            "hex"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "exclude_spam",
          "description": "Should spam NFTs be excluded from the result?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "token_addresses",
          "description": "The non-fungible token (NFT) addresses to get balances for",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "The option to enable metadata normalization. Learn more about metadata normalization [here](/web3-data-api/evm/normalized-vs-non-normalized-metadata).",
          "required": false,
          "example": true,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "type": "boolean",
          "description": "Should preview media data be returned? Learn more about media items [here](/web3-data-api/evm/nft-image-previews).",
          "example": false
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "example": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT owners",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The syncing status of the address [SYNCING/SYNCED]",
                "example": "SYNCING"
              },
              {
                "name": "total",
                "type": "number",
                "description": "The total number of matches for this query",
                "example": "2000"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "minter_address",
                    "type": "string",
                    "description": "The wallet address that minted the NFT, or an explanation if not applicable",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Bored Ape #8817"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "The Bored Ape Yacht Club is a collection of 10,000 unique Bored Ape NFTs— unique digital collectibles living on the Ethereum blockchain. Your Bored Ape doubles as your Yacht Club membership card, and grants access to members-only benefits."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://ipfs.io/ipfs/QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/8817"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "trait_type": {
                              "type": "string",
                              "description": "The type of trait",
                              "example": "Fur"
                            },
                            "value": {
                              "type": "string",
                              "description": "The value of the trait",
                              "example": "Golden Brown"
                            },
                            "display_type": {
                              "type": "string",
                              "description": "How the trait should be displayed",
                              "example": "string"
                            },
                            "max_value": {
                              "type": "number",
                              "description": "The maximum value for numeric traits",
                              "example": 100
                            },
                            "trait_count": {
                              "type": "number",
                              "description": "The count of NFTs with this trait",
                              "example": 0
                            },
                            "order": {
                              "type": "number",
                              "description": "The order of the trait in the attribute list",
                              "example": null
                            },
                            "rarity_label": {
                              "type": "string",
                              "description": "The rarity label for this trait",
                              "example": "Top 12% trait"
                            },
                            "count": {
                              "type": "number",
                              "description": "The count of NFTs with this trait within the collection",
                              "example": 1243
                            },
                            "percentage": {
                              "type": "number",
                              "description": "The percentage of NFTs with this trait within the collection",
                              "example": 12.43
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of this item the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "BoredApeYachtClub"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "BAYC"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 782
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 8%"
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 7.82
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified. Currently supported for ethereum NFT contracts.",
                    "example": "false"
                  },
                  {
                    "name": "collection_logo",
                    "type": "string",
                    "description": "The URL of the collection's logo image",
                    "example": "https://i.seadn.io/gae/Ju9CkWtV-1Okvf45wo8UctR-M9He2PjILP0oOvxE89AyiPPGtrR3gysu1Zgy0hjd2xKIgjJJtWIc0ybj4Vd7wv8t3pxDGHoJBzDB?w=500&auto=format"
                  },
                  {
                    "name": "collection_banner_image",
                    "type": "string",
                    "description": "The URL of the collection's banner image",
                    "example": "https://i.seadn.io/gae/i5dYZRkVCUK97bfprQ3WXyrT9BnLSZtVKGJlKQ919uaUB0sxbngVCioaiyu9r6snqfi2aaTyIvv6DHm4m2R3y7hMajbsv14pSZK8mhs?w=1500&auto=format"
                  },
                  {
                    "name": "collection_category",
                    "type": "string",
                    "description": "The category of the collection",
                    "example": "collectibles"
                  },
                  {
                    "name": "project_url",
                    "type": "string",
                    "description": "The official project website URL",
                    "example": "https://boredapeyachtclub.com"
                  },
                  {
                    "name": "wiki_url",
                    "type": "string",
                    "description": "The wiki URL for the collection",
                    "example": "https://boredapeyachtclub.wiki"
                  },
                  {
                    "name": "discord_url",
                    "type": "string",
                    "description": "The Discord server URL for the collection",
                    "example": "https://discord.gg/bayc"
                  },
                  {
                    "name": "telegram_url",
                    "type": "string",
                    "description": "The Telegram group URL for the collection",
                    "example": "https://t.me/BoredApeYC"
                  },
                  {
                    "name": "twitter_username",
                    "type": "string",
                    "description": "The Twitter username for the collection",
                    "example": "BoredApeYC"
                  },
                  {
                    "name": "instagram_username",
                    "type": "string",
                    "description": "The Instagram username for the collection",
                    "example": "boredapeyachtclub"
                  },
                  {
                    "name": "list_price",
                    "type": "object",
                    "description": "Information about the current listing price of the NFT",
                    "fields": [
                      {
                        "name": "listed",
                        "type": "boolean",
                        "description": "Whether the NFT is currently listed for sale",
                        "example": true
                      },
                      {
                        "name": "price",
                        "type": "number",
                        "description": "The price of the NFT, if listed",
                        "example": 76.5
                      },
                      {
                        "name": "price_currency",
                        "type": "string",
                        "description": "The currency of the price, if listed",
                        "example": "ETH"
                      },
                      {
                        "name": "price_usd",
                        "type": "number",
                        "description": "The USD equivalent of the price, if listed",
                        "example": 178650.75
                      },
                      {
                        "name": "marketplace",
                        "type": "string",
                        "description": "The marketplace where the NFT is listed",
                        "example": "OpenSea"
                      }
                    ]
                  },
                  {
                    "name": "floor_price",
                    "type": "number",
                    "description": "The floor price of the collection in the native currency",
                    "example": 68.4
                  },
                  {
                    "name": "floor_price_usd",
                    "type": "number",
                    "description": "The floor price of the collection in USD",
                    "example": 159724.8
                  },
                  {
                    "name": "floor_price_currency",
                    "type": "string",
                    "description": "The currency of the floor price",
                    "example": "ETH"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details of the last sale of the NFT",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c",
                        "required": true
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2023-04-04T15:59:11.000Z",
                        "required": true
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The wallet address of the buyer",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905",
                        "required": true
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The wallet address of the seller",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f",
                        "required": true
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the NFT in the sale",
                        "example": "7300000000000000",
                        "required": true
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the NFT in the sale",
                        "example": "0.0073",
                        "required": true
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price at the time of sale",
                        "example": "13.61",
                        "required": true
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The current USD value of the NFT",
                        "example": "15.53",
                        "required": true
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID of the NFT",
                        "example": "170",
                        "required": true
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "Details of the payment token used in the sale",
                        "fields": [
                          {
                            "name": "token_name",
                            "type": "string",
                            "description": "The name of the payment token",
                            "example": "Ether",
                            "required": true
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "description": "The symbol of the payment token",
                            "example": "ETH",
                            "required": true
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "description": "The logo URL of the payment token",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          {
                            "name": "token_decimals",
                            "type": "string",
                            "description": "The number of decimals for the payment token",
                            "example": "18"
                          },
                          {
                            "name": "token_address",
                            "type": "string",
                            "description": "The address of the payment token contract",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                            "required": true
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getMultipleNFTs": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Multiple NFTs",
      "description": "Returns an array of NFTs specified in the request.\n* Note that results will include all indexed NFTs\n* Any request that includes the token_address param will start the indexing process for that NFT collection the very first time it is requested.\n* Only 25 NFTs can be fetched in one API call.",
      "method": "POST",
      "path": "/nft/getMultipleNFTs",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "tokens",
            "type": "array",
            "required": true,
            "description": "The tokens to be fetched (max 25 tokens)",
            "example": [
              {
                "token_address": "0xa4991609c508b6d4fb7156426db0bd49fe298bd8",
                "token_id": "12"
              },
              {
                "token_address": "0x3c64dc415ebb4690d1df2b6216148c8de6dd29f7",
                "token_id": "1"
              },
              {
                "token_address": "0x3c64dc415ebb4690d1df2b6216148c8de6dd29f7",
                "token_id": "200"
              }
            ],
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "token_address",
                  "type": "string",
                  "description": "The contract address",
                  "example": "0xa4991609c508b6d4fb7156426db0bd49fe298bd8"
                },
                {
                  "name": "token_id",
                  "type": "string",
                  "description": "The id of the token",
                  "example": 12
                }
              ]
            }
          },
          {
            "name": "normalizeMetadata",
            "type": "boolean",
            "required": false,
            "description": "The option to enable metadata normalization. Learn more about metadata normalization [here](/web3-data-api/evm/normalized-vs-non-normalized-metadata).",
            "example": false
          },
          {
            "name": "media_items",
            "type": "boolean",
            "description": "Should preview media data be returned? Learn more about media items [here](/web3-data-api/evm/nft-image-previews).",
            "example": true
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFTs",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "token_address",
                  "type": "string",
                  "description": "The address of the NFT contract",
                  "example": "0xa4991609c508b6d4fb7156426db0bd49fe298bd8",
                  "required": true
                },
                {
                  "name": "token_id",
                  "type": "string",
                  "description": "The token ID of the NFT",
                  "example": "12",
                  "required": true
                },
                {
                  "name": "contract_type",
                  "type": "string",
                  "description": "The type of NFT contract standard",
                  "example": "ERC721",
                  "required": true
                },
                {
                  "name": "owner_of",
                  "type": "string",
                  "description": "The wallet address of the owner of the NFT",
                  "example": "0x4de8d51b3f7439863868cc8418524db282c604f9",
                  "required": true
                },
                {
                  "name": "block_number",
                  "type": "string",
                  "description": "The block number when the amount or owner changed",
                  "example": "16076275",
                  "required": true
                },
                {
                  "name": "block_number_minted",
                  "type": "string",
                  "description": "The block number when the NFT was minted",
                  "example": "16076275",
                  "required": true
                },
                {
                  "name": "token_uri",
                  "type": "string",
                  "description": "The URI to the metadata of the token",
                  "example": "ipfs://QmfMD2ptdb2jMBgivvi64tyAtRPxH4m8XgpcgBrVAtS8Vd/1863.json"
                },
                {
                  "name": "metadata",
                  "type": "string",
                  "description": "The metadata of the token",
                  "example": "{\"description\":\"Dreamy is a central meeting place for all adventurers, where it all begins. Invoking the feelings of togetherness and familiarity, with a sense of tranquillity and calmness.\",\"image\":\"https://dreamy.mypinata.cloud/ipfs/QmVAsVNVBkmJpkNqsDXz65hf3x19KtZkGDBsJS9PjyDTKP/1863.png\",\"attributes\":[{\"trait_type\":\"Background\",\"value\":\"Autumn\"},{\"trait_type\":\"Skin\",\"value\":\"Human\"}]}"
                },
                {
                  "name": "normalized_metadata",
                  "type": "object",
                  "description": "A normalized metadata version of the NFT's metadata.",
                  "fields": [
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The name or title of the NFT",
                      "example": "Dreamy #1863"
                    },
                    {
                      "name": "description",
                      "type": "string",
                      "description": "A detailed description of the NFT",
                      "example": "Dreamy is a central meeting place for all adventurers, where it all begins. Invoking the feelings of togetherness and familiarity, with a sense of tranquillity and calmness. A place where there is no noise."
                    },
                    {
                      "name": "image",
                      "type": "string",
                      "description": "The URL of the NFT's image",
                      "example": "https://dreamy.mypinata.cloud/ipfs/QmVAsVNVBkmJpkNqsDXz65hf3x19KtZkGDBsJS9PjyDTKP/1863.png"
                    },
                    {
                      "name": "external_link",
                      "type": "string",
                      "description": "A link to additional information",
                      "example": "https://dreamy.day/token/1863"
                    },
                    {
                      "name": "animation_url",
                      "type": "string",
                      "description": "An animated version of the NFT's image",
                      "example": "https://dreamy.mypinata.cloud/ipfs/QmVAsVNVBkmJpkNqsDXz65hf3x19KtZkGDBsJS9PjyDTKP/animation/1863.mp4"
                    },
                    {
                      "name": "attributes",
                      "type": "array",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "trait_type",
                            "type": "string",
                            "description": "The trait title or descriptor",
                            "example": "Background"
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "description": "The value of the attribute",
                            "example": "Autumn"
                          },
                          {
                            "name": "display_type",
                            "type": "string",
                            "description": "The type the attribute value should be displayed as",
                            "example": "string"
                          },
                          {
                            "name": "max_value",
                            "type": "number",
                            "description": "For numeric values, the upper range",
                            "example": 100
                          },
                          {
                            "name": "trait_count",
                            "type": "number",
                            "description": "The number of possible values for this trait",
                            "example": 7
                          },
                          {
                            "name": "order",
                            "type": "number",
                            "description": "Order the trait should appear in the attribute list",
                            "example": 1
                          },
                          {
                            "name": "rarity_label",
                            "type": "string",
                            "description": "The rarity label for this trait",
                            "example": "Top 12% trait"
                          },
                          {
                            "name": "count",
                            "type": "number",
                            "description": "The count of NFTs with this trait within the collection",
                            "example": 648
                          },
                          {
                            "name": "percentage",
                            "type": "number",
                            "description": "The percentage of NFTs with this trait within the collection",
                            "example": 11.67
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "name": "amount",
                  "type": "string",
                  "description": "The number of this item the user owns (used by ERC1155)",
                  "example": "1"
                },
                {
                  "name": "name",
                  "type": "string",
                  "description": "The name of the NFT contract",
                  "example": "Dreamy",
                  "required": true
                },
                {
                  "name": "symbol",
                  "type": "string",
                  "description": "The symbol of the NFT contract",
                  "example": "DRMY",
                  "required": true
                },
                {
                  "name": "token_hash",
                  "type": "string",
                  "description": "The token hash",
                  "example": "560f2b25e17472857700fe257c9829eb",
                  "required": true
                },
                {
                  "name": "minter_address",
                  "type": "string",
                  "description": "The wallet address that minted the NFT",
                  "example": "0x88e83571fa2e76e05e3ab4ad38469290ef31b6f0"
                },
                {
                  "name": "rarity_rank",
                  "type": "number",
                  "description": "The rarity rank of the NFT within the collection",
                  "example": 345
                },
                {
                  "name": "rarity_percentage",
                  "type": "number",
                  "description": "The rarity percentage of the NFT",
                  "example": 6.21
                },
                {
                  "name": "rarity_label",
                  "type": "string",
                  "description": "The rarity label for the NFT",
                  "example": "Top 7%"
                },
                {
                  "name": "verified_collection",
                  "type": "boolean",
                  "description": "Indicates if the collection is verified",
                  "example": true
                },
                {
                  "name": "possible_spam",
                  "type": "boolean",
                  "description": "Indicates if the collection might be spam",
                  "example": false
                },
                {
                  "name": "collection_logo",
                  "type": "string",
                  "description": "The URL of the collection's logo image",
                  "example": "https://i.seadn.io/gcs/files/41430968e84727ec2cbc2e41325f314e.png?w=500&auto=format"
                },
                {
                  "name": "collection_banner_image",
                  "type": "string",
                  "description": "The URL of the collection's banner image",
                  "example": "https://i.seadn.io/gcs/files/93fbc8c057b3ada3881445550f4f4ad5.png?w=500&auto=format"
                },
                {
                  "name": "collection_category",
                  "type": "string",
                  "description": "The category of the collection",
                  "example": "pfps"
                },
                {
                  "name": "project_url",
                  "type": "string",
                  "description": "The official project website URL",
                  "example": "https://dreamy.day"
                },
                {
                  "name": "wiki_url",
                  "type": "string",
                  "description": "The wiki URL for the collection",
                  "example": "https://dreamy.wiki"
                },
                {
                  "name": "discord_url",
                  "type": "string",
                  "description": "The Discord server URL for the collection",
                  "example": "https://discord.gg/dreamy"
                },
                {
                  "name": "telegram_url",
                  "type": "string",
                  "description": "The Telegram group URL for the collection",
                  "example": "https://t.me/dreamynft"
                },
                {
                  "name": "twitter_username",
                  "type": "string",
                  "description": "The Twitter username for the collection",
                  "example": "dreamy"
                },
                {
                  "name": "instagram_username",
                  "type": "string",
                  "description": "The Instagram username for the collection",
                  "example": "dreamy.nft"
                },
                {
                  "name": "list_price",
                  "type": "object",
                  "description": "Information about the current listing price of the NFT",
                  "fields": [
                    {
                      "name": "listed",
                      "type": "boolean",
                      "description": "Whether the NFT is currently listed for sale",
                      "example": true
                    },
                    {
                      "name": "price",
                      "type": "string",
                      "description": "The price of the NFT, if listed",
                      "example": "0.0075"
                    },
                    {
                      "name": "price_currency",
                      "type": "string",
                      "description": "The currency of the price, if listed",
                      "example": "ETH"
                    },
                    {
                      "name": "price_usd",
                      "type": "number",
                      "description": "The USD equivalent of the price, if listed",
                      "example": 13.58
                    },
                    {
                      "name": "marketplace",
                      "type": "string",
                      "description": "The marketplace where the NFT is listed",
                      "example": "OpenSea"
                    }
                  ]
                },
                {
                  "name": "floor_price",
                  "type": "string",
                  "description": "The floor price of the collection in the native currency",
                  "example": "0.005399"
                },
                {
                  "name": "floor_price_usd",
                  "type": "string",
                  "description": "The floor price of the collection in USD",
                  "example": "9.772"
                },
                {
                  "name": "floor_price_currency",
                  "type": "string",
                  "description": "The currency of the floor price",
                  "example": "eth"
                },
                {
                  "name": "last_token_uri_sync",
                  "type": "string",
                  "description": "When the token_uri was last updated",
                  "example": "2025-02-12T09:29:03.902Z",
                  "required": true
                },
                {
                  "name": "last_metadata_sync",
                  "type": "string",
                  "description": "When the metadata was last updated",
                  "example": "2025-02-12T09:30:43.918Z",
                  "required": true
                }
              ]
            }
          }
        }
      ]
    },
    "getWalletNFTTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT transfers by wallet",
      "description": "Get transfers of NFTs given the wallet and other parameters.",
      "method": "GET",
      "path": "/:address/nft/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address of the sender or recipient of the transfers",
          "required": true,
          "example": "0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "contract_addresses",
          "description": "List of contract addresses of transfers",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "To get the reserves at this block number",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_date",
          "description": "The date from where to get the transfers (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get transfers up until this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT transfers",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The address that sent the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "from_address_label",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The address that received the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "to_address_label",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of tokens transferred",
                    "example": "1"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "88256"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash of the transaction"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_type",
                    "type": "string",
                    "description": "The transaction type"
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index"
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index"
                  },
                  {
                    "name": "operator",
                    "type": "string",
                    "description": "The operator present only for ERC1155 transfers",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details of the last sale of the NFT",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c",
                        "required": true
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2023-04-04T15:59:11.000Z",
                        "required": true
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The wallet address of the buyer",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905",
                        "required": true
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The wallet address of the seller",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f",
                        "required": true
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the NFT in the sale",
                        "example": "7300000000000000",
                        "required": true
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the NFT in the sale",
                        "example": "0.0073",
                        "required": true
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price at the time of sale",
                        "example": "13.61",
                        "required": true
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The current USD value of the NFT",
                        "example": "15.53",
                        "required": true
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID of the NFT",
                        "example": "170",
                        "required": true
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "Details of the payment token used in the sale",
                        "fields": [
                          {
                            "name": "token_name",
                            "type": "string",
                            "description": "The name of the payment token",
                            "example": "Ether",
                            "required": true
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "description": "The symbol of the payment token",
                            "example": "ETH",
                            "required": true
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "description": "The logo URL of the payment token",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          {
                            "name": "token_decimals",
                            "type": "string",
                            "description": "The number of decimals for the payment token",
                            "example": "18"
                          },
                          {
                            "name": "token_address",
                            "type": "string",
                            "description": "The address of the payment token contract",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                            "required": true
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "block_exists",
                "type": "boolean",
                "description": "Indicator if the block exists",
                "example": true
              },
              {
                "name": "index_complete",
                "type": "boolean",
                "description": "Indicator if the block is fully indexed",
                "example": true
              }
            ]
          }
        }
      ]
    },
    "getWalletNFTCollections": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT collections by wallet",
      "description": "Get NFT collections owned by a given wallet address.",
      "method": "GET",
      "path": "/:address/nft/collections",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address of the owner of NFTs in the collections",
          "required": true,
          "example": "0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "token_counts",
          "description": "Should token counts per collection be included in the response?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "exclude_spam",
          "description": "Should spam NFTs be excluded from the result?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the NFT collections owned by a wallet",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The syncing status of the address [SYNCING/SYNCED]",
                "example": "SYNCING"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "count",
                    "type": "number",
                    "description": "The number of tokens the wallet holds in this collection",
                    "example": 5
                  },
                  {
                    "name": "collection_logo",
                    "type": "string",
                    "description": "The logo of the collection",
                    "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                  },
                  {
                    "name": "collection_banner_image",
                    "type": "string",
                    "description": "The banner image of the collection",
                    "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getContractNFTs": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFTs by contract",
      "description": "Get NFTs for a given contract address, including metadata for all NFTs (where available).\n* Results are limited to 100 per page by default\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection.",
      "method": "GET",
      "path": "/nft/:address",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x306b1ea3ecdf94aB739F1910bbda052Ed4A9f949",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "totalRanges",
          "description": "The number of subranges to split the results into",
          "required": false,
          "type": "number"
        },
        {
          "name": "range",
          "description": "The desired subrange to query",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "Should normalized metadata be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "description": "Should preview media data be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFTs",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page",
                "example": ""
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": 0
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100
              },
              {
                "name": "result",
                "type": "array",
                "description": "The array of NFTs in the collection",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "token_address",
                      "type": "string",
                      "description": "The address of the NFT contract",
                      "example": "0x306b1ea3ecdf94ab739f1910bbda052ed4a9f949"
                    },
                    {
                      "name": "token_id",
                      "type": "string",
                      "description": "The token ID of the NFT",
                      "example": "0"
                    },
                    {
                      "name": "amount",
                      "type": "string",
                      "description": "The number of this item the user owns (used by ERC1155)",
                      "example": "1"
                    },
                    {
                      "name": "token_hash",
                      "type": "string",
                      "description": "The token hash",
                      "example": "aeeb752cb04b7e8df19f6cd1344f04de"
                    },
                    {
                      "name": "block_number",
                      "type": "string",
                      "description": "The block number when the amount or owner changed",
                      "example": "16531009"
                    },
                    {
                      "name": "block_number_minted",
                      "type": "string",
                      "description": "The block number when the NFT was minted",
                      "example": "14492080"
                    },
                    {
                      "name": "contract_type",
                      "type": "string",
                      "description": "The type of NFT contract standard",
                      "example": "ERC721"
                    },
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The name of the NFT contract",
                      "example": "Beanz"
                    },
                    {
                      "name": "symbol",
                      "type": "string",
                      "description": "The symbol of the NFT contract",
                      "example": "BEANZ"
                    },
                    {
                      "name": "token_uri",
                      "type": "string",
                      "description": "The URI to the metadata of the token",
                      "example": "ipfs://QmdYeDpkVZedk1mkGodjNmF35UNxwafhFLVvsHrWgJoz6A/beanz_metadata/0"
                    },
                    {
                      "name": "metadata",
                      "type": "string",
                      "description": "The metadata of the token",
                      "example": "..."
                    },
                    {
                      "name": "last_token_uri_sync",
                      "type": "string",
                      "description": "When the token_uri was last updated",
                      "example": "2025-02-18T09:58:55.950Z"
                    },
                    {
                      "name": "last_metadata_sync",
                      "type": "string",
                      "description": "When the metadata was last updated",
                      "example": "2025-02-18T09:58:56.162Z"
                    },
                    {
                      "name": "minter_address",
                      "type": "string",
                      "description": "The address that minted the NFT",
                      "example": "0xd45058bf25bbd8f586124c479d384c8c708ce23a"
                    },
                    {
                      "name": "owner_of",
                      "type": "string",
                      "description": "The wallet address of the owner of the NFT",
                      "example": "0x2ae6b0630ebb4d155c6e04fcb16840ffa77760aa"
                    },
                    {
                      "name": "rarity_rank",
                      "type": "number",
                      "description": "The rarity rank of the NFT within the collection",
                      "example": 10072
                    },
                    {
                      "name": "rarity_percentage",
                      "type": "number",
                      "description": "The rarity percentage of the NFT",
                      "example": 50.49
                    },
                    {
                      "name": "rarity_label",
                      "type": "string",
                      "description": "The rarity label for the NFT",
                      "example": "Top 51%"
                    },
                    {
                      "name": "possible_spam",
                      "type": "boolean",
                      "description": "Indicates if a contract is possibly a spam contract",
                      "example": false
                    },
                    {
                      "name": "verified_collection",
                      "type": "boolean",
                      "description": "Indicates if a contract is verified",
                      "example": true
                    },
                    {
                      "name": "last_sale",
                      "type": "object",
                      "description": "Details of the last sale of the NFT. Null if the NFT has never been sold.",
                      "example": null,
                      "fields": [
                        {
                          "name": "transaction_hash",
                          "type": "string",
                          "description": "The hash of the transaction",
                          "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                        },
                        {
                          "name": "block_timestamp",
                          "type": "string",
                          "description": "The timestamp of the block",
                          "example": "2024-04-04T15:59:11.000Z"
                        },
                        {
                          "name": "buyer_address",
                          "type": "string",
                          "description": "The wallet address of the buyer",
                          "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                        },
                        {
                          "name": "seller_address",
                          "type": "string",
                          "description": "The wallet address of the seller",
                          "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                        },
                        {
                          "name": "price",
                          "type": "string",
                          "description": "The price of the NFT in the sale",
                          "example": "7300000000000000"
                        },
                        {
                          "name": "price_formatted",
                          "type": "string",
                          "description": "The formatted price of the NFT in the sale",
                          "example": "0.0073"
                        },
                        {
                          "name": "usd_price_at_sale",
                          "type": "string",
                          "description": "The USD price at the time of sale",
                          "example": "13.61"
                        },
                        {
                          "name": "current_usd_value",
                          "type": "string",
                          "description": "The current USD value of the NFT",
                          "example": "15.53"
                        },
                        {
                          "name": "token_id",
                          "type": "string",
                          "description": "The token ID of the NFT",
                          "example": "0"
                        },
                        {
                          "name": "payment_token",
                          "type": "object",
                          "description": "Details of the payment token used in the sale",
                          "fields": [
                            {
                              "name": "token_name",
                              "type": "string",
                              "description": "The name of the payment token",
                              "example": "Ether"
                            },
                            {
                              "name": "token_symbol",
                              "type": "string",
                              "description": "The symbol of the payment token",
                              "example": "ETH"
                            },
                            {
                              "name": "token_logo",
                              "type": "string",
                              "description": "The logo URL of the payment token",
                              "example": "https://cdn.moralis.io/eth/0x.png"
                            },
                            {
                              "name": "token_decimals",
                              "type": "string",
                              "description": "The number of decimals for the payment token",
                              "example": "18"
                            },
                            {
                              "name": "token_address",
                              "type": "string",
                              "description": "The address of the payment token contract",
                              "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "list_price",
                      "type": "object",
                      "description": "Information about the current listing price of the NFT",
                      "fields": [
                        {
                          "name": "listed",
                          "type": "boolean",
                          "description": "Whether the NFT is currently listed for sale",
                          "example": false
                        },
                        {
                          "name": "price",
                          "type": "string",
                          "description": "The price of the NFT, if listed",
                          "example": null
                        },
                        {
                          "name": "price_currency",
                          "type": "string",
                          "description": "The currency of the price, if listed",
                          "example": null
                        },
                        {
                          "name": "price_usd",
                          "type": "number",
                          "description": "The USD equivalent of the price, if listed",
                          "example": null
                        },
                        {
                          "name": "marketplace",
                          "type": "string",
                          "description": "The marketplace where the NFT is listed",
                          "example": null
                        }
                      ]
                    },
                    {
                      "name": "normalized_metadata",
                      "type": "object",
                      "description": "A normalized metadata version of the NFT's metadata",
                      "fields": [
                        {
                          "name": "name",
                          "type": "string",
                          "description": "The name or title of the NFT",
                          "example": "Bean #0"
                        },
                        {
                          "name": "description",
                          "type": "string",
                          "description": "A detailed description of the NFT",
                          "example": null
                        },
                        {
                          "name": "animation_url",
                          "type": "string",
                          "description": "An animated version of the NFT's image",
                          "example": null
                        },
                        {
                          "name": "external_link",
                          "type": "string",
                          "description": "A link to additional information",
                          "example": null
                        },
                        {
                          "name": "image",
                          "type": "string",
                          "description": "The URL of the NFT's image",
                          "example": "ipfs://QmTRuWHr7bpqscUWFmhXndzf5AdQqkekhqwgbyJCqKMHrL/0.png"
                        },
                        {
                          "name": "attributes",
                          "type": "array",
                          "description": "The traits and characteristics of the NFT",
                          "field": {
                            "type": "object",
                            "fields": [
                              {
                                "name": "trait_type",
                                "type": "string",
                                "description": "The trait title or descriptor",
                                "example": "Background"
                              },
                              {
                                "name": "value",
                                "type": "string",
                                "description": "The value of the attribute",
                                "example": "Off White D"
                              },
                              {
                                "name": "display_type",
                                "type": "string",
                                "description": "The type the attribute value should be displayed as",
                                "example": null
                              },
                              {
                                "name": "max_value",
                                "type": "number",
                                "description": "For numeric values, the upper range",
                                "example": null
                              },
                              {
                                "name": "trait_count",
                                "type": "number",
                                "description": "The number of possible values for this trait",
                                "example": 0
                              },
                              {
                                "name": "order",
                                "type": "number",
                                "description": "Order the trait should appear in the attribute list",
                                "example": null
                              },
                              {
                                "name": "rarity_label",
                                "type": "string",
                                "description": "The rarity label for this trait",
                                "example": "Top 25% trait"
                              },
                              {
                                "name": "count",
                                "type": "number",
                                "description": "The count of NFTs with this trait within the collection",
                                "example": 4836
                              },
                              {
                                "name": "percentage",
                                "type": "number",
                                "description": "The percentage of NFTs with this trait within the collection",
                                "example": 24.24
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "name": "collection_logo",
                      "type": "string",
                      "description": "The URL of the collection's logo image",
                      "example": "https://i.seadn.io/gae/_R4fuC4QGYd14-KwX2bD1wf-AWjDF2VMabfqWFJhIgiN2FnAUpnD5PLdJORrhQ8gly7KcjhQZZpuzYVPF7CDSzsqmDh97z84j2On?w=500&auto=format"
                    },
                    {
                      "name": "collection_banner_image",
                      "type": "string",
                      "description": "The URL of the collection's banner image",
                      "example": "https://i.seadn.io/gae/WRcl2YH8E3_7884mcJ0DRN7STGqA8xZQKd-0MFmPftlxUR6i1xB9todMXRW2M6SIpXKAZ842UqKDm1UrkKG8nr7l9NjCkIw-GLQSFQ?w=500&auto=format"
                    },
                    {
                      "name": "collection_category",
                      "type": "string",
                      "description": "The category of the collection",
                      "example": "pfps"
                    },
                    {
                      "name": "project_url",
                      "type": "string",
                      "description": "The official project website URL",
                      "example": "https://www.azuki.com/beanz"
                    },
                    {
                      "name": "wiki_url",
                      "type": "string",
                      "description": "The wiki URL for the collection",
                      "example": ""
                    },
                    {
                      "name": "discord_url",
                      "type": "string",
                      "description": "The Discord server URL for the collection",
                      "example": ""
                    },
                    {
                      "name": "telegram_url",
                      "type": "string",
                      "description": "The Telegram group URL for the collection",
                      "example": ""
                    },
                    {
                      "name": "twitter_username",
                      "type": "string",
                      "description": "The Twitter username for the collection",
                      "example": "Azuki"
                    },
                    {
                      "name": "instagram_username",
                      "type": "string",
                      "description": "The Instagram username for the collection",
                      "example": ""
                    },
                    {
                      "name": "floor_price",
                      "type": "string",
                      "description": "The floor price of the collection in the native currency",
                      "example": "0.123999"
                    },
                    {
                      "name": "floor_price_usd",
                      "type": "string",
                      "description": "The floor price of the collection in USD",
                      "example": "195.253"
                    },
                    {
                      "name": "floor_price_currency",
                      "type": "string",
                      "description": "The currency of the floor price",
                      "example": "eth"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getNFTOwners": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT owners by contract",
      "description": "Get owners of NFTs for a given contract.\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection.",
      "method": "GET",
      "path": "/nft/:address/owners",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x306b1ea3ecdf94aB739F1910bbda052Ed4A9f949",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "Should normalized metadata be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "description": "Should preview media data be returned?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT owners",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The syncing status of the address [SYNCING/SYNCED]",
                "example": "SYNCING"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Moralis Mug"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/normalizedMetadataAttribute"
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of this item the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 21669
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 98%"
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 98
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTContractTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT transfers by contract",
      "description": "Get transfers of NFTs for a given contract and other parameters.",
      "method": "GET",
      "path": "/nft/:address/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x306b1ea3ecdf94aB739F1910bbda052Ed4A9f949",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from where to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from where to get the transfers.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The date from where to get the transfers (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get transfers up until this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC).",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT transfers",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The address that sent the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "from_address_label",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The address that received the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "to_address_label",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of tokens transferred",
                    "example": "1"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "88256"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash of the transaction"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_type",
                    "type": "string",
                    "description": "The transaction type"
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index"
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index"
                  },
                  {
                    "name": "operator",
                    "type": "string",
                    "description": "The operator present only for ERC1155 transfers",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details of the last sale of the NFT",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c",
                        "required": true
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2023-04-04T15:59:11.000Z",
                        "required": true
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The wallet address of the buyer",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905",
                        "required": true
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The wallet address of the seller",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f",
                        "required": true
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the NFT in the sale",
                        "example": "7300000000000000",
                        "required": true
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the NFT in the sale",
                        "example": "0.0073",
                        "required": true
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price at the time of sale",
                        "example": "13.61",
                        "required": true
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The current USD value of the NFT",
                        "example": "15.53",
                        "required": true
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID of the NFT",
                        "example": "170",
                        "required": true
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "Details of the payment token used in the sale",
                        "fields": [
                          {
                            "name": "token_name",
                            "type": "string",
                            "description": "The name of the payment token",
                            "example": "Ether",
                            "required": true
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "description": "The symbol of the payment token",
                            "example": "ETH",
                            "required": true
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "description": "The logo URL of the payment token",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          {
                            "name": "token_decimals",
                            "type": "string",
                            "description": "The number of decimals for the payment token",
                            "example": "18"
                          },
                          {
                            "name": "token_address",
                            "type": "string",
                            "description": "The address of the payment token contract",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                            "required": true
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "block_exists",
                "type": "boolean",
                "description": "Indicator if the block exists",
                "example": true
              },
              {
                "name": "index_complete",
                "type": "boolean",
                "description": "Indicator if the block is fully indexed",
                "example": true
              }
            ]
          }
        }
      ]
    },
    "getNFTTransfersFromToBlock": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT transfers from a block to a block",
      "description": "Get transfers of NFTs from a block number to a block number.",
      "method": "GET",
      "path": "/nft/transfers",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transfers.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transfers (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "The end date from which to get the transfers (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (for getting the next page)\n",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT transfers",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The address that sent the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "from_address_label",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The address that received the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "to_address_label",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of tokens transferred",
                    "example": "1"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "88256"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash of the transaction"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_type",
                    "type": "string",
                    "description": "The transaction type"
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index"
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index"
                  },
                  {
                    "name": "operator",
                    "type": "string",
                    "description": "The operator present only for ERC1155 transfers",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  }
                ]
              },
              {
                "name": "block_exists",
                "type": "boolean",
                "description": "Indicator if the block exists",
                "example": true
              },
              {
                "name": "index_complete",
                "type": "boolean",
                "description": "Indicator if the block is fully indexed",
                "example": true
              }
            ]
          }
        }
      ]
    },
    "getNFTTransfersByBlock": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT transfers by block",
      "description": "Get transfers of NFTs given a block number or block hash.",
      "method": "GET",
      "path": "/block/:block_number_or_hash/nft/transfers",
      "pathParams": [
        {
          "name": "block_number_or_hash",
          "description": "The block number or block hash",
          "required": true,
          "example": "15846571",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page). Learn more on cursor pagination [here](/web3-data-api/evm/reference/pagination).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the contents of a block",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total",
                "type": "number",
                "description": "The total number of matches for this query",
                "example": "2000"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The address that sent the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The address that received the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of tokens transferred",
                    "example": "1"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "88256"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash of the transaction"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_type",
                    "type": "string",
                    "description": "The transaction type"
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index"
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index"
                  },
                  {
                    "name": "operator",
                    "type": "string",
                    "description": "The operator present only for ERC1155 transfers",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified. Currently supported for ethereum NFT contracts.",
                    "example": "false"
                  }
                ]
              },
              {
                "name": "block_exists",
                "type": "boolean",
                "description": "Indicator if the block exists",
                "example": true
              },
              {
                "name": "index_complete",
                "type": "boolean",
                "description": "Indicator if the block is fully indexed",
                "example": true
              }
            ]
          }
        }
      ]
    },
    "getNFTContractMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT collection metadata",
      "description": "Get the collection / contract level metadata for a given contract (name, symbol, base token URI).\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\n",
      "method": "GET",
      "path": "/nft/:address/metadata",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the metadata for an NFT collection.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "token_address",
                "type": "string",
                "description": "The address of the token contract",
                "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
              },
              {
                "name": "name",
                "type": "string",
                "description": "The name of the token contract",
                "example": "KryptoKitties"
              },
              {
                "name": "synced_at",
                "type": "string",
                "description": "Timestamp of when the contract was last synced with the node",
                "example": "2017-07-22T19:40:00.000Z"
              },
              {
                "name": "symbol",
                "type": "string",
                "description": "The symbol of the NFT contract",
                "example": "RARI"
              },
              {
                "name": "contract_type",
                "type": "string",
                "description": "The type of NFT contract",
                "example": "ERC721"
              },
              {
                "name": "possible_spam",
                "type": "boolean",
                "description": "Indicates if a contract is possibly a spam contract",
                "example": "false"
              },
              {
                "name": "verified_collection",
                "type": "boolean",
                "description": "Indicates if a contract is verified",
                "example": "false"
              },
              {
                "name": "collection_logo",
                "type": "string",
                "description": "The logo of the collection",
                "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
              },
              {
                "name": "collection_banner_image",
                "type": "string",
                "description": "The banner image of the collection",
                "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
              },
              {
                "name": "collection_category",
                "type": "string",
                "description": "The category of the collection",
                "example": "Art"
              },
              {
                "name": "project_url",
                "type": "string",
                "description": "The project url of the collection",
                "example": "https://www.cryptokitties.co/"
              },
              {
                "name": "wiki_url",
                "type": "string",
                "description": "The wiki url of the collection",
                "example": "https://en.wikipedia.org/wiki/CryptoKitties"
              },
              {
                "name": "discord_url",
                "type": "string",
                "description": "The discord url of the collection",
                "example": "https://discord.com/invite/cryptokitties"
              },
              {
                "name": "telegram_url",
                "type": "string",
                "description": "The telegram url of the collection",
                "example": "https://t.me/cryptokitties"
              },
              {
                "name": "twitter_username",
                "type": "string",
                "description": "The twitter username of the collection",
                "example": "CryptoKitties"
              },
              {
                "name": "instagram_username",
                "type": "string",
                "description": "The instagram username of the collection",
                "example": "cryptokitties"
              }
            ]
          }
        }
      ]
    },
    "getNFTMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT metadata",
      "description": "Get NFT data, including metadata (where available), for the given NFT token ID and contract address.\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\n",
      "method": "GET",
      "path": "/nft/:address/:token_id",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The ID of the token",
          "required": true,
          "example": "1",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string",
          "enum": [
            "decimal",
            "hex"
          ]
        },
        {
          "name": "normalizeMetadata",
          "description": "The option to enable metadata normalization. Learn more about metadata normalization [here](/web3-data-api/evm/normalized-vs-non-normalized-metadata).",
          "required": false,
          "type": "boolean",
          "example": true
        },
        {
          "name": "media_items",
          "type": "boolean",
          "description": "Should preview media data be returned? Learn more about media items [here](/web3-data-api/evm/nft-image-previews).",
          "example": false
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT owners",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The syncing status of the address [SYNCING/SYNCED]",
                "example": "SYNCING"
              },
              {
                "name": "total",
                "type": "number",
                "description": "The total number of matches for this query",
                "example": "2000"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "minter_address",
                    "type": "string",
                    "description": "The wallet address that minted the NFT, or an explanation if not applicable",
                    "example": "ERC1155 tokens don't have a single minter"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Bored Ape #8817"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "The Bored Ape Yacht Club is a collection of 10,000 unique Bored Ape NFTs— unique digital collectibles living on the Ethereum blockchain. Your Bored Ape doubles as your Yacht Club membership card, and grants access to members-only benefits."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://ipfs.io/ipfs/QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/8817"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "trait_type": {
                              "type": "string",
                              "description": "The type of trait",
                              "example": "Fur"
                            },
                            "value": {
                              "type": "string",
                              "description": "The value of the trait",
                              "example": "Golden Brown"
                            },
                            "display_type": {
                              "type": "string",
                              "description": "How the trait should be displayed",
                              "example": "string"
                            },
                            "max_value": {
                              "type": "number",
                              "description": "The maximum value for numeric traits",
                              "example": 100
                            },
                            "trait_count": {
                              "type": "number",
                              "description": "The count of NFTs with this trait",
                              "example": 0
                            },
                            "order": {
                              "type": "number",
                              "description": "The order of the trait in the attribute list",
                              "example": null
                            },
                            "rarity_label": {
                              "type": "string",
                              "description": "The rarity label for this trait",
                              "example": "Top 12% trait"
                            },
                            "count": {
                              "type": "number",
                              "description": "The count of NFTs with this trait within the collection",
                              "example": 1243
                            },
                            "percentage": {
                              "type": "number",
                              "description": "The percentage of NFTs with this trait within the collection",
                              "example": 12.43
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of this item the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "BoredApeYachtClub"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "BAYC"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 782
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 8%"
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 7.82
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified. Currently supported for ethereum NFT contracts.",
                    "example": "false"
                  },
                  {
                    "name": "collection_logo",
                    "type": "string",
                    "description": "The URL of the collection's logo image",
                    "example": "https://i.seadn.io/gae/Ju9CkWtV-1Okvf45wo8UctR-M9He2PjILP0oOvxE89AyiPPGtrR3gysu1Zgy0hjd2xKIgjJJtWIc0ybj4Vd7wv8t3pxDGHoJBzDB?w=500&auto=format"
                  },
                  {
                    "name": "collection_banner_image",
                    "type": "string",
                    "description": "The URL of the collection's banner image",
                    "example": "https://i.seadn.io/gae/i5dYZRkVCUK97bfprQ3WXyrT9BnLSZtVKGJlKQ919uaUB0sxbngVCioaiyu9r6snqfi2aaTyIvv6DHm4m2R3y7hMajbsv14pSZK8mhs?w=1500&auto=format"
                  },
                  {
                    "name": "collection_category",
                    "type": "string",
                    "description": "The category of the collection",
                    "example": "collectibles"
                  },
                  {
                    "name": "project_url",
                    "type": "string",
                    "description": "The official project website URL",
                    "example": "https://boredapeyachtclub.com"
                  },
                  {
                    "name": "wiki_url",
                    "type": "string",
                    "description": "The wiki URL for the collection",
                    "example": "https://boredapeyachtclub.wiki"
                  },
                  {
                    "name": "discord_url",
                    "type": "string",
                    "description": "The Discord server URL for the collection",
                    "example": "https://discord.gg/bayc"
                  },
                  {
                    "name": "telegram_url",
                    "type": "string",
                    "description": "The Telegram group URL for the collection",
                    "example": "https://t.me/BoredApeYC"
                  },
                  {
                    "name": "twitter_username",
                    "type": "string",
                    "description": "The Twitter username for the collection",
                    "example": "BoredApeYC"
                  },
                  {
                    "name": "instagram_username",
                    "type": "string",
                    "description": "The Instagram username for the collection",
                    "example": "boredapeyachtclub"
                  },
                  {
                    "name": "list_price",
                    "type": "object",
                    "description": "Information about the current listing price of the NFT",
                    "fields": [
                      {
                        "name": "listed",
                        "type": "boolean",
                        "description": "Whether the NFT is currently listed for sale",
                        "example": true
                      },
                      {
                        "name": "price",
                        "type": "number",
                        "description": "The price of the NFT, if listed",
                        "example": 76.5
                      },
                      {
                        "name": "price_currency",
                        "type": "string",
                        "description": "The currency of the price, if listed",
                        "example": "ETH"
                      },
                      {
                        "name": "price_usd",
                        "type": "number",
                        "description": "The USD equivalent of the price, if listed",
                        "example": 178650.75
                      },
                      {
                        "name": "marketplace",
                        "type": "string",
                        "description": "The marketplace where the NFT is listed",
                        "example": "OpenSea"
                      }
                    ]
                  },
                  {
                    "name": "floor_price",
                    "type": "number",
                    "description": "The floor price of the collection in the native currency",
                    "example": 68.4
                  },
                  {
                    "name": "floor_price_usd",
                    "type": "number",
                    "description": "The floor price of the collection in USD",
                    "example": 159724.8
                  },
                  {
                    "name": "floor_price_currency",
                    "type": "string",
                    "description": "The currency of the floor price",
                    "example": "ETH"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details of the last sale of the NFT",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c",
                        "required": true
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2023-04-04T15:59:11.000Z",
                        "required": true
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The wallet address of the buyer",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905",
                        "required": true
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The wallet address of the seller",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f",
                        "required": true
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the NFT in the sale",
                        "example": "7300000000000000",
                        "required": true
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the NFT in the sale",
                        "example": "0.0073",
                        "required": true
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price at the time of sale",
                        "example": "13.61",
                        "required": true
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The current USD value of the NFT",
                        "example": "15.53",
                        "required": true
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID of the NFT",
                        "example": "170",
                        "required": true
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "Details of the payment token used in the sale",
                        "fields": [
                          {
                            "name": "token_name",
                            "type": "string",
                            "description": "The name of the payment token",
                            "example": "Ether",
                            "required": true
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "description": "The symbol of the payment token",
                            "example": "ETH",
                            "required": true
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "description": "The logo URL of the payment token",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          {
                            "name": "token_decimals",
                            "type": "string",
                            "description": "The number of decimals for the payment token",
                            "example": "18"
                          },
                          {
                            "name": "token_address",
                            "type": "string",
                            "description": "The address of the payment token contract",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                            "required": true
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTBulkContractMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get metadata for multiple NFT contracts",
      "description": "Get the collection / contract level metadata for a given list of contract addresses (name, symbol). Supports batching up to 25 addresses.\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\n",
      "method": "POST",
      "path": "/nft/metadata",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "json",
        "example": {
          "addresses": [
            "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d"
          ]
        }
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the metadata for the requested NFT collections.",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "token_address",
                  "type": "string",
                  "description": "The address of the NFT contract",
                  "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09",
                  "required": true
                },
                {
                  "name": "name",
                  "type": "string",
                  "description": "The name of the NFT collection",
                  "example": "KryptoKitties",
                  "required": true
                },
                {
                  "name": "synced_at",
                  "type": "string",
                  "description": "The timestamp of the last sync",
                  "example": "string"
                },
                {
                  "name": "symbol",
                  "type": "string",
                  "description": "The symbol of the NFT collection",
                  "example": "RARI",
                  "required": true
                },
                {
                  "name": "contract_type",
                  "type": "string",
                  "description": "The type of NFT contract standard",
                  "example": "ERC721",
                  "required": true
                },
                {
                  "name": "possible_spam",
                  "type": "boolean",
                  "description": "Indicator if the collection is marked as possible spam",
                  "example": false,
                  "required": true
                },
                {
                  "name": "verified_collection",
                  "type": "boolean",
                  "description": "Indicator if the collection is verified",
                  "example": false,
                  "required": true
                },
                {
                  "name": "collection_logo",
                  "type": "string",
                  "description": "The URL of the collection's logo image",
                  "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                },
                {
                  "name": "collection_banner_image",
                  "type": "string",
                  "description": "The URL of the collection's banner image",
                  "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                },
                {
                  "name": "collection_category",
                  "type": "string",
                  "description": "The category of the NFT collection",
                  "example": "Art"
                },
                {
                  "name": "project_url",
                  "type": "string",
                  "description": "The URL of the project's website",
                  "example": "https://www.cryptokitties.co/"
                },
                {
                  "name": "wiki_url",
                  "type": "string",
                  "description": "The URL of the project's wiki page",
                  "example": "https://en.wikipedia.org/wiki/CryptoKitties"
                },
                {
                  "name": "discord_url",
                  "type": "string",
                  "description": "The URL of the project's Discord page",
                  "example": "https://discord.com/invite/cryptokitties"
                },
                {
                  "name": "telegram_url",
                  "type": "string",
                  "description": "The URL of the project's Telegram page",
                  "example": "https://t.me/cryptokitties"
                },
                {
                  "name": "twitter_username",
                  "type": "string",
                  "description": "The Twitter username of the project",
                  "example": "CryptoKitties"
                },
                {
                  "name": "instagram_username",
                  "type": "string",
                  "description": "The Instagram username of the project",
                  "example": "cryptokitties"
                }
              ]
            }
          }
        }
      ]
    },
    "getNFTTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT transfers by token ID",
      "description": "Get transfers of an NFT given a contract address and token ID.",
      "method": "GET",
      "path": "/nft/:address/:token_id/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The ID of the token",
          "required": true,
          "example": "1",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT transfers",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The address that sent the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "from_address_label",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The address that received the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "to_address_label",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of tokens transferred",
                    "example": "1"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "88256"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash of the transaction"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_type",
                    "type": "string",
                    "description": "The transaction type"
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index"
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index"
                  },
                  {
                    "name": "operator",
                    "type": "string",
                    "description": "The operator present only for ERC1155 transfers",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details of the last sale of the NFT",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c",
                        "required": true
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2023-04-04T15:59:11.000Z",
                        "required": true
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The wallet address of the buyer",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905",
                        "required": true
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The wallet address of the seller",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f",
                        "required": true
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the NFT in the sale",
                        "example": "7300000000000000",
                        "required": true
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the NFT in the sale",
                        "example": "0.0073",
                        "required": true
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price at the time of sale",
                        "example": "13.61",
                        "required": true
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The current USD value of the NFT",
                        "example": "15.53",
                        "required": true
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID of the NFT",
                        "example": "170",
                        "required": true
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "Details of the payment token used in the sale",
                        "fields": [
                          {
                            "name": "token_name",
                            "type": "string",
                            "description": "The name of the payment token",
                            "example": "Ether",
                            "required": true
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "description": "The symbol of the payment token",
                            "example": "ETH",
                            "required": true
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "description": "The logo URL of the payment token",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          {
                            "name": "token_decimals",
                            "type": "string",
                            "description": "The number of decimals for the payment token",
                            "example": "18"
                          },
                          {
                            "name": "token_address",
                            "type": "string",
                            "description": "The address of the payment token contract",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                            "required": true
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "block_exists",
                "type": "boolean",
                "description": "Indicator if the block exists",
                "example": true
              },
              {
                "name": "index_complete",
                "type": "boolean",
                "description": "Indicator if the block is fully indexed",
                "example": true
              }
            ]
          }
        }
      ]
    },
    "getNFTTokenIdOwners": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT owners by token ID",
      "description": "Get owners of a specific NFT given the contract address and token ID. \n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\n",
      "method": "GET",
      "path": "/nft/:address/:token_id/owners",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The ID of the token",
          "required": true,
          "example": "1",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "Should normalized metadata be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "description": "Should preview media data be returned?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFTs with their respective owners.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The syncing status of the address [SYNCING/SYNCED]",
                "example": "SYNCING"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Moralis Mug"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/normalizedMetadataAttribute"
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of this item the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 21669
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 98%"
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 98
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "syncNFTContract": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resync NFT Contract",
      "description": "Initiates a sync of a previously non synced contract.",
      "method": "PUT",
      "path": "/nft/:address/sync",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x60E4d786628Fea6478F785A6d7e704777c86a7c6",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        }
      ],
      "responses": [
        {
          "status": "201",
          "description": "Request Initiated."
        }
      ]
    },
    "reSyncMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resync NFT metadata",
      "description": "Resync the metadata for an NFT\n* The metadata flag will request the NFT's metadata from an already existing token_uri\n* The uri (default) flag will fetch the latest token_uri from the given NFT contract address. In sync mode the metadata will also be fetched\n* The sync mode will make the endpoint synchronous so it will wait for the task to be completed before responding\n* The async mode (default) will make the endpoint asynchronous so we will wait for the task to be completed before responding\n",
      "method": "GET",
      "path": "/nft/:address/:token_id/metadata/resync",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The ID of the token",
          "required": true,
          "example": "1",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "flag",
          "description": "The type of resync to operate",
          "required": false,
          "example": "uri",
          "default": "uri",
          "type": "string",
          "enum": [
            "uri",
            "metadata"
          ]
        },
        {
          "name": "mode",
          "description": "To define the behaviour of the endpoint",
          "required": false,
          "example": "async",
          "default": "async",
          "type": "string",
          "enum": [
            "sync",
            "async"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "(In sync mode) Resync request executed.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The status of the resync request"
              }
            ]
          }
        },
        {
          "status": "202",
          "description": "The resync request was received and will be executed.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The status of the resync request"
              }
            ]
          }
        },
        {
          "status": "404",
          "description": "(In sync mode) Resync request executed and metadata could not be updated.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The status of the resync request"
              }
            ]
          }
        }
      ]
    },
    "getNFTCollectionStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the nft collection stats",
      "description": "Get the stats for a nft collection address.",
      "method": "GET",
      "path": "/nft/:address/stats",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT collection",
          "required": true,
          "type": "string",
          "example": "0x306b1ea3ecdf94ab739f1910bbda052ed4a9f949"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the stats for the nft token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total_tokens",
                "type": "string",
                "description": "The number of tokens in the collection",
                "example": "100"
              },
              {
                "name": "owners",
                "type": "object",
                "description": "NFT token owner stats",
                "fields": [
                  {
                    "name": "current",
                    "type": "string",
                    "description": "The number of current owners of the nft token",
                    "example": "1000"
                  }
                ]
              },
              {
                "name": "transfers",
                "type": "object",
                "description": "NFT token transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of transfers of the nft token",
                    "example": "1000"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTTokenStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the nft token stats",
      "description": "Get the stats for a nft token",
      "method": "GET",
      "path": "/nft/:address/:token_id/stats",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT collection",
          "required": true,
          "type": "string",
          "example": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d"
        },
        {
          "name": "token_id",
          "description": "The token id of the NFT collection",
          "required": true,
          "type": "string",
          "example": 1
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the stats for the nft token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "owners",
                "type": "object",
                "description": "NFT token owner stats",
                "fields": [
                  {
                    "name": "current",
                    "type": "string",
                    "description": "The number of current owners of the nft token",
                    "example": "1000"
                  }
                ]
              },
              {
                "name": "transfers",
                "type": "object",
                "description": "NFT token transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of transfers of the nft token",
                    "example": "1000"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTContractSalePrices": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT sold price by collection",
      "description": "Get the sold price for an NFT contract for the last x days (only trades paid in ETH).",
      "method": "GET",
      "path": "/nft/:address/price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT collection",
          "required": true,
          "example": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "arbitrum",
            "0xa4b1",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "days",
          "description": "The number of days to look back to find the lowest price\nIf not provided 7 days will be the default and 365 is the maximum\n",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns detailed information about NFT sales",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "last_sale",
                "type": "object",
                "description": "Details of the last sale of the NFT",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The wallet address of the buyer",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The wallet address of the seller",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price at the time of sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The current USD value of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "Details of the payment token used in the sale",
                    "fields": [
                      {
                        "name": "token_name",
                        "type": "string",
                        "description": "The name of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_symbol",
                        "type": "string",
                        "description": "The symbol of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_logo",
                        "type": "string",
                        "description": "The logo URL of the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_decimals",
                        "type": "string",
                        "description": "The number of decimals for the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The address of the payment token contract",
                        "example": "string",
                        "required": true
                      }
                    ]
                  }
                ]
              },
              {
                "name": "lowest_sale",
                "type": "object",
                "description": "Details of the lowest sale of the NFT",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The wallet address of the buyer",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The wallet address of the seller",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price at the time of sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The current USD value of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "Details of the payment token used in the sale",
                    "fields": [
                      {
                        "name": "token_name",
                        "type": "string",
                        "description": "The name of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_symbol",
                        "type": "string",
                        "description": "The symbol of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_logo",
                        "type": "string",
                        "description": "The logo URL of the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_decimals",
                        "type": "string",
                        "description": "The number of decimals for the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The address of the payment token contract",
                        "example": "string",
                        "required": true
                      }
                    ]
                  }
                ]
              },
              {
                "name": "highest_sale",
                "type": "object",
                "description": "Details of the highest sale of the NFT",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The wallet address of the buyer",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The wallet address of the seller",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price at the time of sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The current USD value of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "Details of the payment token used in the sale",
                    "fields": [
                      {
                        "name": "token_name",
                        "type": "string",
                        "description": "The name of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_symbol",
                        "type": "string",
                        "description": "The symbol of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_logo",
                        "type": "string",
                        "description": "The logo URL of the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_decimals",
                        "type": "string",
                        "description": "The number of decimals for the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The address of the payment token contract",
                        "example": "string",
                        "required": true
                      }
                    ]
                  }
                ]
              },
              {
                "name": "average_sale",
                "type": "object",
                "description": "Details of the average sale price of the NFT",
                "fields": [
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The average sale price",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted average sale price",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The current USD value of the average sale price",
                    "example": "string",
                    "required": true
                  }
                ]
              },
              {
                "name": "total_trades",
                "type": "number",
                "description": "The total number of trades for the NFT",
                "example": 1,
                "required": true
              }
            ]
          }
        }
      ]
    },
    "getNFTSalePrices": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT sold price by token",
      "description": "Get the sold price for an NFT token for the last x days (only trades paid in ETH).",
      "method": "GET",
      "path": "/nft/:address/:token_id/price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT collection",
          "required": true,
          "example": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The token id of the NFT collection",
          "required": true,
          "example": "1",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "arbitrum",
            "0xa4b1",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "days",
          "description": "The number of days to look back to find the lowest price\nIf not provided 7 days will be the default and 365 is the maximum\n",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns detailed information about NFT sales",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "last_sale",
                "type": "object",
                "description": "Details of the last sale of the NFT",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The wallet address of the buyer",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The wallet address of the seller",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price at the time of sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The current USD value of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "Details of the payment token used in the sale",
                    "fields": [
                      {
                        "name": "token_name",
                        "type": "string",
                        "description": "The name of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_symbol",
                        "type": "string",
                        "description": "The symbol of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_logo",
                        "type": "string",
                        "description": "The logo URL of the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_decimals",
                        "type": "string",
                        "description": "The number of decimals for the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The address of the payment token contract",
                        "example": "string",
                        "required": true
                      }
                    ]
                  }
                ]
              },
              {
                "name": "lowest_sale",
                "type": "object",
                "description": "Details of the lowest sale of the NFT",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The wallet address of the buyer",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The wallet address of the seller",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price at the time of sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The current USD value of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "Details of the payment token used in the sale",
                    "fields": [
                      {
                        "name": "token_name",
                        "type": "string",
                        "description": "The name of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_symbol",
                        "type": "string",
                        "description": "The symbol of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_logo",
                        "type": "string",
                        "description": "The logo URL of the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_decimals",
                        "type": "string",
                        "description": "The number of decimals for the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The address of the payment token contract",
                        "example": "string",
                        "required": true
                      }
                    ]
                  }
                ]
              },
              {
                "name": "highest_sale",
                "type": "object",
                "description": "Details of the highest sale of the NFT",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The wallet address of the buyer",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The wallet address of the seller",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the NFT in the sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price at the time of sale",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The current USD value of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "Details of the payment token used in the sale",
                    "fields": [
                      {
                        "name": "token_name",
                        "type": "string",
                        "description": "The name of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_symbol",
                        "type": "string",
                        "description": "The symbol of the payment token",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_logo",
                        "type": "string",
                        "description": "The logo URL of the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_decimals",
                        "type": "string",
                        "description": "The number of decimals for the payment token",
                        "example": "string"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The address of the payment token contract",
                        "example": "string",
                        "required": true
                      }
                    ]
                  }
                ]
              },
              {
                "name": "average_sale",
                "type": "object",
                "description": "Details of the average sale price of the NFT",
                "fields": [
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The average sale price",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted average sale price",
                    "example": "string",
                    "required": true
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The current USD value of the average sale price",
                    "example": "string",
                    "required": true
                  }
                ]
              },
              {
                "name": "total_trades",
                "type": "number",
                "description": "The total number of trades for the NFT",
                "example": 1,
                "required": true
              }
            ]
          }
        }
      ]
    },
    "getNFTTrades": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT trades by contract",
      "description": "Get trades of NFTs for a given contract and marketplace.",
      "method": "GET",
      "path": "/nft/:address/trades",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The block number to get the trades from",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transfers (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "The end date from which to get the transfers (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "marketplace",
          "description": "Marketplace from which to get the trades (only OpenSea is supported at the moment)",
          "required": false,
          "example": "opensea",
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "example": 3,
          "type": "number"
        },
        {
          "name": "nft_metadata",
          "description": "Should NFT metadata be included in the result?",
          "example": true,
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the trades",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "description": "The transaction index"
                  },
                  {
                    "name": "token_ids",
                    "type": "array",
                    "description": "The token ID(s) traded",
                    "example": [
                      "15",
                      "54"
                    ],
                    "field": {
                      "type": "string",
                      "example": "15"
                    }
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The address that sold the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The address that bought the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x4ad3785ec7eed7589fa86538244a4530f962434f"
                  },
                  {
                    "name": "marketplace_address",
                    "type": "string",
                    "description": "The address of the contract that traded the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "price_token_address",
                    "type": "string",
                    "description": "The address of the token used to pay for the NFT",
                    "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "13680123"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates whether or not the collection has been verified on OpenSea. Currently supported for ethereum NFT contracts.",
                    "example": "true"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTTradesByToken": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT trades by token",
      "description": "Get trades of NFTs for a given contract and token ID.",
      "method": "GET",
      "path": "/nft/:address/:token_id/trades",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The token ID of the NFT contract",
          "required": true,
          "example": "123",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "arbitrum",
            "0xa4b1",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The block number to get the trades from",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "The end date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "nft_metadata",
          "description": "Should NFT metadata be included in the result?",
          "example": true,
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a paginated collection of NFT transactions",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page number",
                "example": 2,
                "required": true
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100,
                "required": true
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor for the next page of results",
                "example": "string"
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "transaction_hash",
                      "type": "string",
                      "description": "The hash of the transaction",
                      "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                      "required": true
                    },
                    {
                      "name": "transaction_index",
                      "type": "string",
                      "description": "The index of the transaction within the block",
                      "example": "string"
                    },
                    {
                      "name": "token_ids",
                      "type": "array",
                      "description": "The IDs of the tokens involved in the transaction",
                      "field": {
                        "type": "string",
                        "example": "15"
                      }
                    },
                    {
                      "name": "seller_address",
                      "type": "string",
                      "description": "The wallet address of the seller",
                      "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                      "required": true
                    },
                    {
                      "name": "buyer_address",
                      "type": "string",
                      "description": "The wallet address of the buyer",
                      "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                      "required": true
                    },
                    {
                      "name": "token_address",
                      "type": "string",
                      "description": "The address of the NFT contract",
                      "example": "0x4ad3785ec7eed7589fa86538244a4530f962434f",
                      "required": true
                    },
                    {
                      "name": "marketplace_address",
                      "type": "string",
                      "description": "The address of the marketplace where the transaction took place",
                      "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                      "required": true
                    },
                    {
                      "name": "price_token_address",
                      "type": "string",
                      "description": "The address of the token used for the price",
                      "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                      "required": true
                    },
                    {
                      "name": "price",
                      "type": "string",
                      "description": "The price of the NFT in the transaction",
                      "example": "1000000000000000",
                      "required": true
                    },
                    {
                      "name": "block_timestamp",
                      "type": "string",
                      "description": "The timestamp of the block",
                      "example": "2021-06-04T16:00:15",
                      "required": true
                    },
                    {
                      "name": "block_number",
                      "type": "string",
                      "description": "The block number of the transaction",
                      "example": "13680123",
                      "required": true
                    },
                    {
                      "name": "block_hash",
                      "type": "string",
                      "description": "The hash of the block",
                      "example": "0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96",
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getNFTTradesByWallet": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT trades by wallet address",
      "description": "Get trades of NFTs for a given wallet.",
      "method": "GET",
      "path": "/wallets/:address/nfts/trades",
      "pathParams": [
        {
          "name": "address",
          "description": "The owner wallet address",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "arbitrum",
            "0xa4b1",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The block number to get the trades from",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "The end date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "example": 3,
          "type": "number"
        },
        {
          "name": "nft_metadata",
          "description": "Should NFT metadata be included in the result?",
          "example": true,
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a paginated collection of NFT transactions",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page number",
                "example": 2,
                "required": true
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100,
                "required": true
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor for the next page of results",
                "example": "string"
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "transaction_hash",
                      "type": "string",
                      "description": "The hash of the transaction",
                      "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                      "required": true
                    },
                    {
                      "name": "transaction_index",
                      "type": "string",
                      "description": "The index of the transaction within the block",
                      "example": "string"
                    },
                    {
                      "name": "token_ids",
                      "type": "array",
                      "description": "The IDs of the tokens involved in the transaction",
                      "field": {
                        "type": "string",
                        "example": "15"
                      }
                    },
                    {
                      "name": "seller_address",
                      "type": "string",
                      "description": "The wallet address of the seller",
                      "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                      "required": true
                    },
                    {
                      "name": "buyer_address",
                      "type": "string",
                      "description": "The wallet address of the buyer",
                      "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                      "required": true
                    },
                    {
                      "name": "token_address",
                      "type": "string",
                      "description": "The address of the NFT contract",
                      "example": "0x4ad3785ec7eed7589fa86538244a4530f962434f",
                      "required": true
                    },
                    {
                      "name": "marketplace_address",
                      "type": "string",
                      "description": "The address of the marketplace where the transaction took place",
                      "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                      "required": true
                    },
                    {
                      "name": "price_token_address",
                      "type": "string",
                      "description": "The address of the token used for the price",
                      "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                      "required": true
                    },
                    {
                      "name": "price",
                      "type": "string",
                      "description": "The price of the NFT in the transaction",
                      "example": "1000000000000000",
                      "required": true
                    },
                    {
                      "name": "block_timestamp",
                      "type": "string",
                      "description": "The timestamp of the block",
                      "example": "2021-06-04T16:00:15",
                      "required": true
                    },
                    {
                      "name": "block_number",
                      "type": "string",
                      "description": "The block number of the transaction",
                      "example": "13680123",
                      "required": true
                    },
                    {
                      "name": "block_hash",
                      "type": "string",
                      "description": "The hash of the block",
                      "example": "0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96",
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getNFTTraitsByCollection": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT traits for a given collection",
      "description": "Get NFT traits for a given collection",
      "method": "GET",
      "path": "/nft/:address/traits",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the traits",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "trait_type",
                "type": "string",
                "description": "The trait type",
                "example": "Background",
                "required": true
              },
              {
                "name": "values",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "trait_value",
                      "type": "string",
                      "description": "The trait value",
                      "example": "Lavendar",
                      "required": true
                    },
                    {
                      "name": "count",
                      "type": "number",
                      "description": "The total NFT in the collection with this trait",
                      "example": 18593
                    },
                    {
                      "name": "percentage",
                      "type": "number",
                      "description": "The rarity percentage of the trait",
                      "example": 85.8
                    },
                    {
                      "name": "rarity_label",
                      "type": "string",
                      "description": "The rarity label of the trait",
                      "example": "Top 4% trait",
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getNFTTraitsByCollectionPaginate": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT traits for a given collection",
      "description": "Get NFT traits for a given collection",
      "method": "GET",
      "path": "/nft/:address/traits/paginate",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page). Learn more on cursor pagination [here](/web3-data-api/evm/reference/pagination).",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the traits",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "A pointer to the next page of results (if any), for pagination purposes.",
                "example": ""
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page number in the paginated result set",
                "example": 2
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of items per page in the paginated result set",
                "example": 100
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "trait_type",
                      "type": "string",
                      "description": "The trait type",
                      "example": "Background",
                      "required": true
                    },
                    {
                      "name": "trait_value",
                      "type": "string",
                      "description": "The trait value",
                      "example": "Lavendar",
                      "required": true
                    },
                    {
                      "name": "count",
                      "type": "number",
                      "description": "The total NFT in the collection with this trait",
                      "example": 18593
                    },
                    {
                      "name": "percentage",
                      "type": "number",
                      "description": "The rarity percentage of the trait",
                      "example": 85.8
                    },
                    {
                      "name": "rarity_label",
                      "type": "string",
                      "description": "The rarity label of the trait",
                      "example": "Top 4% trait",
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "resyncNFTTrait": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resync NFT Trait",
      "description": "Resync the NFT Trait for a given contract",
      "method": "GET",
      "path": "/nft/:address/traits/resync",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "The resync request was received and will be executed.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The status of the resync request",
                "example": "string"
              }
            ]
          }
        }
      ]
    },
    "getNFTByContractTraits": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFTs by traits",
      "description": "Get NFTs by traits for a given contract.",
      "method": "POST",
      "path": "/nft/:address/nfts-by-traits",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string",
          "enum": [
            "decimal",
            "hex"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "The option to enable metadata normalization. Learn more about metadata normalization [here](/web3-data-api/evm/normalized-vs-non-normalized-metadata).",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "type": "boolean",
          "description": "Should preview media data be returned? Learn more about media items [here](/web3-data-api/evm/nft-image-previews).",
          "example": false
        }
      ],
      "bodyParam": {
        "description": "traits",
        "type": "json",
        "required": true,
        "example": {
          "traits": {
            "Legendary": "Astronaut"
          }
        }
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFTs",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Moralis Mug"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/normalizedMetadataAttribute"
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "minter_address",
                    "type": "string",
                    "description": "The address that minted the NFT",
                    "example": "0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The quantity of this item that the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 21669
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 98%"
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 98
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details of the last sale of the NFT",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The wallet address of the buyer",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The wallet address of the seller",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the NFT in the sale",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the NFT in the sale",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price at the time of sale",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The current USD value of the NFT",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID of the NFT",
                        "example": "string",
                        "required": true
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "Details of the payment token used in the sale",
                        "fields": [
                          {
                            "name": "token_name",
                            "type": "string",
                            "description": "The name of the payment token",
                            "example": "string",
                            "required": true
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "description": "The symbol of the payment token",
                            "example": "string",
                            "required": true
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "description": "The logo URL of the payment token",
                            "example": "string"
                          },
                          {
                            "name": "token_decimals",
                            "type": "string",
                            "description": "The number of decimals for the payment token",
                            "example": "string"
                          },
                          {
                            "name": "token_address",
                            "type": "string",
                            "description": "The address of the payment token contract",
                            "example": "string",
                            "required": true
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTFloorPriceByContract": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT floor price by contract",
      "description": "Get floor price for a given contract.",
      "method": "GET",
      "path": "/nft/:address/floor-price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "base",
            "0x2105"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the contract's floor price",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "The address of the NFT contract",
                "example": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
                "required": true
              },
              {
                "name": "floor_price",
                "type": "string",
                "description": "The floor price of the contract",
                "example": "0.2176"
              },
              {
                "name": "floor_price_usd",
                "type": "string",
                "description": "The floor price of the contract in USD",
                "example": "564.24"
              },
              {
                "name": "currency",
                "type": "string",
                "description": "The currency of the floor price",
                "example": "eth"
              },
              {
                "name": "marketplace",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The name of the marketplace",
                      "example": "blur",
                      "required": true
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "description": "The logo of the marketplace",
                      "example": "https://cdn.moralis.io/marketplaces/blur.png"
                    }
                  ]
                }
              },
              {
                "name": "last_updated",
                "type": "string",
                "description": "The timestamp of when the floor price was last updated",
                "example": "2024-08-21T15:59:11.000Z",
                "required": true
              }
            ]
          }
        }
      ]
    },
    "getNFTFloorPriceByToken": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT floor price by token",
      "description": "Get floor price for a given token.",
      "method": "GET",
      "path": "/nft/:address/:token_id/floor-price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The token ID of the NFT",
          "required": true,
          "example": "2441",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "base",
            "0x2105"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token's floor price",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "The address of the NFT contract",
                "example": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
                "required": true
              },
              {
                "name": "token_id",
                "type": "string",
                "description": "The token ID of the NFT",
                "example": "2441",
                "required": true
              },
              {
                "name": "floor_price",
                "type": "string",
                "description": "The floor price of the contract",
                "example": "0.2176"
              },
              {
                "name": "floor_price_usd",
                "type": "string",
                "description": "The floor price of the contract in USD",
                "example": "564.24"
              },
              {
                "name": "currency",
                "type": "string",
                "description": "The currency of the floor price",
                "example": "eth"
              },
              {
                "name": "marketplace",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The name of the marketplace",
                      "example": "blur",
                      "required": true
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "description": "The logo of the marketplace",
                      "example": "https://cdn.moralis.io/marketplaces/blur.png"
                    }
                  ]
                }
              },
              {
                "name": "last_updated",
                "type": "string",
                "description": "The timestamp of when the floor price was last updated",
                "example": "2024-08-21T15:59:11.000Z",
                "required": true
              }
            ]
          }
        }
      ]
    },
    "getNFTHistoricalFloorPriceByContract": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get historical NFT floor price by contract",
      "description": "Get historical floor price for a given contract.",
      "method": "GET",
      "path": "/nft/:address/floor-price/historical",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "base",
            "0x2105"
          ]
        },
        {
          "name": "interval",
          "description": "The duration to query",
          "required": true,
          "example": "1d",
          "type": "string",
          "enum": [
            "1d",
            "7d",
            "30d",
            "60d",
            "90d",
            "1y",
            "all"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "example": "",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the contract's historical floor price",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page number in the paginated result set",
                "example": 2
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of items per page in the paginated result set",
                "example": 100
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "A pointer to the next page of results (if any), for pagination purposes.",
                "example": ""
              },
              {
                "name": "result",
                "type": "array",
                "description": "An array of objects, each representing a token's detailed information and financial data.",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "floor_price",
                      "type": "string",
                      "description": "The floor price of the contract",
                      "example": "0.2176"
                    },
                    {
                      "name": "floor_price_usd",
                      "type": "string",
                      "description": "The floor price of the contract in USD",
                      "example": "564.24"
                    },
                    {
                      "name": "currency",
                      "type": "string",
                      "description": "The currency of the floor price",
                      "example": "eth"
                    },
                    {
                      "name": "marketplace",
                      "type": "array",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "name",
                            "type": "string",
                            "description": "The name of the marketplace",
                            "example": "blur",
                            "required": true
                          },
                          {
                            "name": "logo",
                            "type": "string",
                            "description": "The logo of the marketplace",
                            "example": "https://cdn.moralis.io/marketplaces/blur.png"
                          }
                        ]
                      }
                    },
                    {
                      "name": "timestamp",
                      "type": "string",
                      "description": "The timestamp of when the floor price was last updated",
                      "example": "2024-08-21T15:59:11.000Z",
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  },
  "token": {
    "getMultipleTokenPrices": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Multiple ERC20 token prices",
      "description": "Returns an array of token prices denominated in the blockchain's native token and USD for a given token contract address",
      "method": "POST",
      "path": "/erc20/prices",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "chiliz",
            "0x15b38",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "ronin",
            "0x7e4",
            "lisk",
            "0x46f",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include",
          "description": "If the result should contain the 24hr percent change",
          "required": false,
          "example": "percent_change",
          "type": "string",
          "enum": [
            "percent_change"
          ]
        },
        {
          "name": "max_token_inactivity",
          "description": "Exclude tokens inactive for more than the given amount of days",
          "required": false,
          "type": "number"
        },
        {
          "name": "min_pair_side_liquidity_usd",
          "description": "Exclude tokens with liquidity less than the specified amount in USD. This parameter refers to the liquidity on a single side of the pair.",
          "required": false,
          "type": "number"
        }
      ],
      "bodyParam": {
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "tokens",
            "type": "array",
            "required": true,
            "description": "The tokens to be fetched",
            "example": [
              {
                "token_address": "0xdac17f958d2ee523a2206206994597c13d831ec7"
              },
              {
                "token_address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
              },
              {
                "token_address": "0xae7ab96520de3a18e5e111b5eaab095312d7fe84",
                "exchange": "uniswapv2",
                "to_block": "16314545"
              },
              {
                "token_address": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0"
              }
            ],
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "token_address",
                  "type": "string",
                  "description": "The contract address",
                  "example": "0xae7ab96520de3a18e5e111b5eaab095312d7fe84"
                },
                {
                  "name": "exchange",
                  "type": "string",
                  "description": "The exchange",
                  "enum": [
                    "uniswapv2",
                    "uniswapv3",
                    "sushiswapv2",
                    "pancakeswapv1",
                    "pancakeswapv2",
                    "pancakeswapv3",
                    "quickswap",
                    "quickswapv2",
                    "traderjoe",
                    "pangolin",
                    "spookyswap",
                    "vvs",
                    "mm finance",
                    "crodex",
                    "camelotv2"
                  ]
                },
                {
                  "name": "to_block",
                  "type": "string",
                  "description": "The block number",
                  "example": 16314545
                }
              ]
            }
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns an array of token prices denominated in the blockchain's native token and USD for a given token contract address"
        }
      ]
    },
    "getTokenPrice": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token price",
      "description": "Get the token price denominated in the blockchain's native token and USD. [View supported exchanges here](/web3-data-api/evm/supported-dexs-token-api)",
      "method": "GET",
      "path": "/erc20/:address/price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the token contract",
          "required": true,
          "example": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "chiliz",
            "0x15b38",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "ronin",
            "0x7e4",
            "lisk",
            "0x46f",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include",
          "description": "If the result should contain the 24hr percent change",
          "required": false,
          "example": "percent_change",
          "type": "string",
          "enum": [
            "percent_change"
          ]
        },
        {
          "name": "exchange",
          "description": "The factory name or address of the token exchange. [View supported exchanges here](/web3-data-api/evm/supported-dexs-token-api)",
          "required": false,
          "type": "string",
          "enum": [
            "uniswapv2",
            "uniswapv3",
            "sushiswapv2",
            "pancakeswapv1",
            "pancakeswapv2",
            "pancakeswapv3",
            "quickswap",
            "quickswapv2",
            "traderjoe",
            "pangolin",
            "spookyswap",
            "vvs",
            "mm finance",
            "crodex",
            "camelotv2"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number from which the token price should be checked",
          "required": false,
          "type": "number"
        },
        {
          "name": "max_token_inactivity",
          "description": "Exclude tokens inactive for more than the given amount of days",
          "required": false,
          "type": "number"
        },
        {
          "name": "min_pair_side_liquidity_usd",
          "description": "Exclude tokens with liquidity less than the specified amount in USD. This parameter refers to the liquidity on a single side of the pair.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the price denominated in the blockchain's native token and USD for a given token contract address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "tokenName",
                "type": "string",
                "description": "The name of the token",
                "example": "Kylin Network"
              },
              {
                "name": "tokenSymbol",
                "type": "string",
                "description": "The symbol of the token",
                "example": "KYL"
              },
              {
                "name": "tokenLogo",
                "type": "string",
                "description": "The logo of the token",
                "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
              },
              {
                "name": "tokenDecimals",
                "type": "string",
                "description": "The number of decimals of the token",
                "example": "18"
              },
              {
                "name": "nativePrice",
                "type": "object",
                "description": "The native price of the token",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The native price value of the token",
                    "example": "8409770570506626"
                  },
                  "decimals": {
                    "type": "integer",
                    "description": "The number of decimals of the native price value",
                    "example": 18
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the native token",
                    "example": "Ether"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the native token",
                    "example": "ETH"
                  },
                  "address": {
                    "type": "string",
                    "description": "The address of the native token"
                  }
                },
                "example": {
                  "value": "177523326178386",
                  "decimals": 18,
                  "name": "Ether",
                  "symbol": "ETH",
                  "address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                }
              },
              {
                "name": "usdPrice",
                "type": "number",
                "description": "The price in USD for the token",
                "example": 19.722370676
              },
              {
                "name": "usdPriceFormatted",
                "type": "string",
                "description": "The price in USD for the token in string format",
                "example": "19.722370676"
              },
              {
                "name": "24hrPercentChange",
                "type": "string",
                "description": "The 24hr percent change of the token",
                "example": "-0.8842730258590583"
              },
              {
                "name": "exchangeAddress",
                "type": "string",
                "description": "The address of the exchange used to calculate the price",
                "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
              },
              {
                "name": "exchangeName",
                "type": "string",
                "description": "The name of the exchange used to calculate the price",
                "example": "Uniswap v3"
              },
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The address of the token",
                "example": "0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c"
              },
              {
                "name": "toBlock",
                "type": "string",
                "description": "toBlock",
                "example": "16314545"
              },
              {
                "name": "possibleSpam",
                "type": "boolean",
                "description": "Indicates if a contract is possibly a spam contract",
                "example": "false"
              },
              {
                "name": "verifiedContract",
                "type": "boolean",
                "description": "Indicates if the contract is verified",
                "example": true
              },
              {
                "name": "pairAddress",
                "type": "string",
                "description": "The address of the pair",
                "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
              },
              {
                "name": "pairTotalLiquidityUsd",
                "type": "string",
                "description": "The total liquidity in USD of the pair",
                "example": "123.45"
              }
            ]
          }
        }
      ]
    },
    "getWalletTokenBalancesPrice": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token balances with prices by wallet",
      "description": "Get token balances for a specific wallet address and their token prices in USD.",
      "method": "GET",
      "path": "/wallets/:address/tokens",
      "pathParams": [
        {
          "name": "address",
          "description": "The address from which token balances will be checked",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number up to which the balances will be checked.",
          "required": false,
          "type": "number"
        },
        {
          "name": "token_addresses",
          "description": "The addresses to get balances for (optional)",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "exclude_spam",
          "description": "Exclude spam tokens from the result",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "exclude_unverified_contracts",
          "description": "Exclude unverified contracts from the result",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "exclude_native",
          "description": "Exclude native balance from the result",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "max_token_inactivity",
          "description": "Exclude tokens inactive for more than the given amount of days",
          "required": false,
          "type": "number"
        },
        {
          "name": "min_pair_side_liquidity_usd",
          "description": "Exclude tokens with liquidity less than the specified amount in USD. This parameter refers to the liquidity on a single side of the pair.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns ERC20 token balance, details, and additional financial information for a specific address, including pagination details.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "A pointer to the next page of results (if any), for pagination purposes.",
                "example": ""
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page number in the paginated result set",
                "example": 2
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of items per page in the paginated result set",
                "example": 100
              },
              {
                "name": "result",
                "type": "array",
                "description": "An array of objects, each representing a token's detailed information and financial data.",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "token_address",
                      "type": "string",
                      "description": "The address of the token contract",
                      "example": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                    },
                    {
                      "name": "symbol",
                      "type": "string",
                      "description": "The symbol of the token contract",
                      "example": "ETH"
                    },
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The name of the token",
                      "example": "Ether"
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "description": "The URL to the token's logo image",
                      "example": "https://cdn.moralis.io/eth/0x.png"
                    },
                    {
                      "name": "thumbnail",
                      "type": "string",
                      "description": "The URL to the token's thumbnail image",
                      "example": "https://cdn.moralis.io/eth/0x_thumb.png"
                    },
                    {
                      "name": "decimals",
                      "type": "integer",
                      "description": "The number of decimal places the token uses",
                      "example": 18
                    },
                    {
                      "name": "balance",
                      "type": "string",
                      "description": "The current token balance of the address",
                      "example": "360659174684349604"
                    },
                    {
                      "name": "possible_spam",
                      "type": "boolean",
                      "description": "Flag indicating if the token is considered possible spam",
                      "example": false
                    },
                    {
                      "name": "verified_contract",
                      "type": "boolean",
                      "description": "Flag indicating if the contract is verified",
                      "example": true
                    },
                    {
                      "name": "balance_formatted",
                      "type": "string",
                      "description": "The formatted string representation of the token balance",
                      "example": "0.360659174684349604"
                    },
                    {
                      "name": "usd_price",
                      "type": "number",
                      "description": "The current USD price of the token",
                      "example": 3725.2775921204284
                    },
                    {
                      "name": "usd_price_24hr_percent_change",
                      "type": "number",
                      "description": "The 24-hour percentage change in the token's USD price",
                      "example": 1.2028612707326054
                    },
                    {
                      "name": "usd_price_24hr_usd_change",
                      "type": "number",
                      "description": "The USD amount change in the token's price over the last 24 hours",
                      "example": 44.80992138289679
                    },
                    {
                      "name": "usd_value",
                      "type": "number",
                      "description": "The current USD value of the token balance",
                      "example": 1343.5555418442548
                    },
                    {
                      "name": "usd_value_24hr_usd_change",
                      "type": "number",
                      "description": "The USD value change of the token balance over the last 24 hours",
                      "example": 16.161109263626145
                    },
                    {
                      "name": "native_token",
                      "type": "boolean",
                      "description": "Flag indicating if this token is the native cryptocurrency of its blockchain",
                      "example": true
                    },
                    {
                      "name": "portfolio_percentage",
                      "type": "number",
                      "description": "The percentage of the token's value relative to the total portfolio value",
                      "example": 55.7292
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getWalletTokenBalances": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token balance by wallet",
      "description": "Get token balances for a specific wallet address.",
      "method": "GET",
      "path": "/:address/erc20",
      "pathParams": [
        {
          "name": "address",
          "description": "The address from which token balances will be checked",
          "required": true,
          "example": "0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number from which the balances should be checked",
          "required": false,
          "type": "number"
        },
        {
          "name": "token_addresses",
          "description": "The addresses to get balances for (optional)",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "exclude_spam",
          "description": "Exclude spam tokens from the result",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns ERC20 token balance and details for a specific address",
          "body": {
            "name": "result",
            "type": "array",
            "description": "An array of objects, each representing a token balances.",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "token_address",
                  "type": "string",
                  "description": "The address of the token contract",
                  "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                },
                {
                  "name": "name",
                  "type": "string",
                  "description": "The name of the token contract",
                  "example": "Kylin Network"
                },
                {
                  "name": "symbol",
                  "type": "string",
                  "description": "The symbol of the NFT contract",
                  "example": "KYL"
                },
                {
                  "name": "logo",
                  "type": "string",
                  "description": "The logo of the token",
                  "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                },
                {
                  "name": "thumbnail",
                  "type": "string",
                  "description": "The thumbnail of the logo",
                  "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png"
                },
                {
                  "name": "decimals",
                  "type": "number",
                  "description": "The number of decimals on the token",
                  "example": 6
                },
                {
                  "name": "balance",
                  "type": "string",
                  "description": "Timestamp of when the contract was last synced with the node",
                  "example": "123456789"
                },
                {
                  "name": "possible_spam",
                  "type": "boolean",
                  "description": "Indicates if a contract is possibly a spam contract",
                  "example": false
                },
                {
                  "name": "verified_collection",
                  "type": "boolean",
                  "description": "Indicates if a contract is verified",
                  "example": false
                },
                {
                  "name": "total_supply",
                  "type": "string",
                  "description": "Total supply of the token",
                  "example": "10000000000000000"
                },
                {
                  "name": "total_supply_formatted",
                  "type": "boolean",
                  "description": "Total supply of the token formatted",
                  "example": "10000000000"
                },
                {
                  "name": "percentage_relative_to_total_supply",
                  "type": "number",
                  "description": "The percentage relative to total token supply",
                  "example": 1.0035
                }
              ]
            }
          }
        }
      ]
    },
    "getWalletTokenTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token transactions by wallet",
      "description": "Get ERC20 token transactions ordered by block number in descending order.",
      "method": "GET",
      "path": "/:address/erc20/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "contract_addresses",
          "description": "List of contract addresses of transfers",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transactions (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the transactions up to this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page). Learn more on cursor pagination [here](/web3-data-api/evm/reference/pagination).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of token transactions.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total",
                "type": "number",
                "description": "The total number of matches for this query",
                "example": "2000"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_name",
                    "type": "string",
                    "example": "Tether USD"
                  },
                  {
                    "name": "token_symbol",
                    "type": "string",
                    "example": "USDT"
                  },
                  {
                    "name": "token_logo",
                    "type": "string",
                    "example": "https://assets.coingecko.com/coins/images/325/large/Tether-logo.png?1598003707"
                  },
                  {
                    "name": "token_decimals",
                    "type": "string",
                    "example": "6"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the token",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-04-02T10:07:54.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The recipient",
                    "example": "0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The sender",
                    "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was transfered (in wei)",
                    "example": 650000000000000000
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index of the transfer within the block",
                    "example": 12
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index of the transfer within the block",
                    "example": 2
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified. Currently supported for ethereum NFT contracts.",
                    "example": "false"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token metadata by contract",
      "description": "Get the metadata for a given token contract address (name, symbol, decimals, logo).",
      "method": "GET",
      "path": "/erc20/metadata",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "addresses",
          "description": "The addresses to get metadata for",
          "required": true,
          "type": "array",
          "field": {
            "type": "string"
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Get the metadata for a given ERC20 token contract address (name, symbol, decimals, logo).",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "address",
                  "type": "string",
                  "description": "The address of the token contract",
                  "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                },
                {
                  "name": "address_label",
                  "type": "string",
                  "description": "The label of the address",
                  "example": "Binance 1"
                },
                {
                  "name": "name",
                  "type": "string",
                  "description": "The name of the token contract",
                  "example": "Kylin Network"
                },
                {
                  "name": "symbol",
                  "type": "string",
                  "description": "The symbol of the NFT contract",
                  "example": "KYL"
                },
                {
                  "name": "decimals",
                  "type": "string",
                  "description": "The number of decimals on the token",
                  "example": "18"
                },
                {
                  "name": "logo",
                  "type": "string",
                  "description": "The logo of the token",
                  "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                },
                {
                  "name": "logo_hash",
                  "type": "string",
                  "description": "The logo hash",
                  "example": "ee7aa2cdf100649a3521a082116258e862e6971261a39b5cd4e4354fcccbc54d"
                },
                {
                  "name": "thumbnail",
                  "type": "string",
                  "description": "The thumbnail of the logo",
                  "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png"
                },
                {
                  "name": "total_supply",
                  "type": "string",
                  "description": "Total tokens created minus any that have been burned",
                  "example": "420689899999994793099999999997400"
                },
                {
                  "name": "total_supply_formatted",
                  "type": "string",
                  "description": "Total tokens created minus any that have been burned (decimal formatted)",
                  "example": "420689899999994.7930999999999974"
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "string",
                  "description": "Fully Diluted Valuation (FDV), this represents the token's Current Price x Total Supply",
                  "example": "3407271444.05"
                },
                {
                  "name": "block_number",
                  "type": "string",
                  "description": "The block number when the token was created or last updated",
                  "example": "12526958"
                },
                {
                  "name": "validated",
                  "type": "string",
                  "description": "Indicates if the token details have been validated",
                  "example": "true"
                },
                {
                  "name": "created_at",
                  "type": "string",
                  "description": "The timestamp of when the erc20 token was created"
                },
                {
                  "name": "possible_spam",
                  "type": "boolean",
                  "description": "Indicates if a contract is possibly a spam contract",
                  "example": false
                },
                {
                  "name": "verified_contract",
                  "type": "boolean",
                  "description": "Indicates if a contract is verified",
                  "example": false
                },
                {
                  "name": "categories",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Categories of the token",
                  "example": [
                    "stablecoin"
                  ]
                },
                {
                  "name": "links",
                  "type": "json",
                  "description": "Social links of the token",
                  "example": {
                    "discord": "https://discord.com/invite/0xPolygon",
                    "medium": "https://polygontech.medium.com",
                    "reddit": "https://www.reddit.com/r/polygonnetwork",
                    "telegram": "https://t.me/channelholo",
                    "twitter": "https://twitter.com/0xPolygon",
                    "website": "https://polygon.technology",
                    "github": "https://github.com/maticnetwork/contracts",
                    "bitbucket": "https://bitbucket.org",
                    "facebook": "https://www.facebook.com/holohost",
                    "instagram": "https://www.instagram.com/0xpolygon",
                    "linkedin": "https://linkedin.com/company/polygonlabs",
                    "tiktok": "https://tiktok.com",
                    "youtube": "https://www.youtube.com/channel/UCvjEq17wWLHFVYwU3OOXPtQ"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "getTokenMetadataBySymbol": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token metadata by symbols",
      "description": "Get the metadata for a list of token symbols (name, symbol, decimals, logo).",
      "method": "GET",
      "path": "/erc20/metadata/symbols",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "symbols",
          "description": "The symbols to get metadata for",
          "required": true,
          "type": "array",
          "field": {
            "type": "string",
            "example": "LINK"
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Get the metadata for a list of token symbols (name, symbol, decimals, logo).",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "address",
                  "type": "string",
                  "description": "The address of the token contract",
                  "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                },
                {
                  "name": "name",
                  "type": "string",
                  "description": "The name of the token contract",
                  "example": "Kylin Network"
                },
                {
                  "name": "symbol",
                  "type": "string",
                  "description": "The symbol of the NFT contract",
                  "example": "KYL"
                },
                {
                  "name": "decimals",
                  "type": "string",
                  "description": "The number of decimals on the token",
                  "example": "18"
                },
                {
                  "name": "logo",
                  "type": "string",
                  "description": "The logo of the token",
                  "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                },
                {
                  "name": "logo_hash",
                  "type": "string",
                  "description": "The logo hash",
                  "example": "ee7aa2cdf100649a3521a082116258e862e6971261a39b5cd4e4354fcccbc54d"
                },
                {
                  "name": "thumbnail",
                  "type": "string",
                  "description": "The thumbnail of the logo",
                  "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png"
                },
                {
                  "name": "block_number",
                  "type": "string",
                  "description": "The block number when the token was created or last updated",
                  "example": "12526958"
                },
                {
                  "name": "validated",
                  "type": "string",
                  "description": "Indicates if the token details have been validated",
                  "example": "true"
                },
                {
                  "name": "possible_spam",
                  "type": "boolean",
                  "description": "Indicates if a contract is possibly a spam contract",
                  "example": false
                },
                {
                  "name": "verified_collection",
                  "type": "boolean",
                  "description": "Indicates if a contract is verified",
                  "example": false
                }
              ]
            }
          }
        }
      ]
    },
    "getTokenAllowance": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token allowance",
      "description": "Get the amount which the spender is allowed to withdraw on behalf of the owner.",
      "method": "GET",
      "path": "/erc20/:address/allowance",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the token contract",
          "required": true,
          "type": "string",
          "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "gnosis",
            "0x64",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "owner_address",
          "description": "The address of the token owner",
          "required": true,
          "type": "string",
          "example": "0x0cBee687015d5151BA084806E00A59A8e6F206c2"
        },
        {
          "name": "spender_address",
          "description": "The address of the token spender",
          "required": true,
          "type": "string",
          "example": "0x75e89d5979E4f6Fba9F97c104c2F0AFB3F1dcB88"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the amount which the spender is allowed to withdraw on behalf of the owner.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "allowance",
                "type": "string",
                "description": "The allowance",
                "example": "0"
              }
            ]
          }
        }
      ]
    },
    "getTokenTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token transactions by contract",
      "description": "Get ERC20 token transactions from a contract ordered by block number in descending order.",
      "method": "GET",
      "path": "/erc20/:address/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the token contract",
          "required": true,
          "example": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transfers.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transfers (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get transfers up until this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of token contract transactions.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_name",
                    "type": "string",
                    "example": "Tether USD"
                  },
                  {
                    "name": "token_symbol",
                    "type": "string",
                    "example": "USDT"
                  },
                  {
                    "name": "token_logo",
                    "type": "string",
                    "example": "https://assets.coingecko.com/coins/images/325/large/Tether-logo.png?1598003707"
                  },
                  {
                    "name": "token_decimals",
                    "type": "string",
                    "example": "6"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the token",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-04-02T10:07:54.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The recipient",
                    "example": "0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044"
                  },
                  {
                    "name": "to_address_label",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The sender",
                    "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                  },
                  {
                    "name": "from_address_label",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was transfered (in wei)",
                    "example": 650000000000000000
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index of the transfer within the block",
                    "example": 12
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index of the transfer within the block",
                    "example": 2
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the erc20 token stats",
      "description": "Get the stats for a erc20 token",
      "method": "GET",
      "path": "/erc20/:address/stats",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the erc20 token",
          "required": true,
          "type": "string",
          "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the stats for the erc20 token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "transfers",
                "type": "object",
                "description": "ERC20 Token transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of transfers of the token",
                    "example": "1000"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenOwners": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token owners by contract",
      "description": "Identify the major holders of an ERC20 token and understand their ownership percentages",
      "method": "GET",
      "path": "/erc20/:token_address/owners",
      "pathParams": [
        {
          "name": "token_address",
          "description": "The address of the token contract",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of owners of an ERC20 token",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "owner_address",
                    "type": "string",
                    "description": "The address of the erc20 token owner",
                    "example": "0x244..."
                  },
                  {
                    "name": "owner_address_label",
                    "type": "string",
                    "description": "The label of the owner_address",
                    "example": "Coinbase 1"
                  },
                  {
                    "name": "balance",
                    "type": "string",
                    "description": "The amount holding of the ERC20 token",
                    "example": "57888888888888888888880"
                  },
                  {
                    "name": "balance_formatted",
                    "type": "string",
                    "description": "The amount holding of the ERC20 token in decimaal",
                    "example": "5.78"
                  },
                  {
                    "name": "usd_value",
                    "type": "string",
                    "description": "The USD value of the balance",
                    "example": "57888888888888888888880"
                  },
                  {
                    "name": "is_contract",
                    "type": "boolean",
                    "description": "Indicates if the token address is for a contract or not"
                  },
                  {
                    "name": "percentage_relative_to_total_supply",
                    "type": "number",
                    "description": "The percentage of total supply held by the owner"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getDefiSummary": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the defi summary of a wallet",
      "description": "Get the defi summary of a wallet address.",
      "method": "GET",
      "path": "/wallets/:address/defi/summary",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "type": "string",
          "example": "0xd100d8b69c5ae23d6aa30c6c3874bf47539b95fd"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the defi summary for the wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "active_protocols",
                "type": "number",
                "description": "The number of active protocols",
                "example": "10"
              },
              {
                "name": "total_positions",
                "type": "number",
                "description": "The number of total positions",
                "example": "100"
              },
              {
                "name": "total_usd_value",
                "type": "number",
                "description": "The total USD value of the wallet",
                "example": "1000000"
              },
              {
                "name": "total_unclaimed_usd_value",
                "type": "number",
                "description": "The total unclaimed USD value of the wallet",
                "example": "1000000"
              },
              {
                "name": "protocols",
                "type": "object",
                "fields": [
                  {
                    "name": "total_usd_value",
                    "type": "number",
                    "description": "The total USD value of the protocol",
                    "example": "1000000"
                  },
                  {
                    "name": "total_unclaimed_usd_value",
                    "type": "number",
                    "description": "The total unclaimed USD value of the protocol",
                    "example": "1000000"
                  },
                  {
                    "name": "positions",
                    "type": "number",
                    "description": "The number of positions",
                    "example": "100"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getDefiPositionsSummary": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the positions summary of a wallet",
      "description": "Get the positions summary of a wallet address.",
      "method": "GET",
      "path": "/wallets/:address/defi/positions",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "type": "string",
          "example": "0xd100d8b69c5ae23d6aa30c6c3874bf47539b95fd"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns all defi positions for the wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "protocol_name",
                "type": "string",
                "description": "The name of the DeFi protocol",
                "example": "Uniswap v2",
                "required": true
              },
              {
                "name": "protocol_id",
                "type": "string",
                "description": "The ID of the DeFi protocol",
                "example": "uniswap-v2",
                "required": true
              },
              {
                "name": "protocol_url",
                "type": "string",
                "description": "The URL of the DeFi protocol",
                "example": "https://app.uniswap.org/pools/v2"
              },
              {
                "name": "protocol_logo",
                "type": "string",
                "description": "The URL of the protocol's logo",
                "example": "https://cdn.moralis.io/defi/uniswap.png"
              },
              {
                "name": "total_unclaimed_usd_value",
                "type": "number",
                "description": "The total USD value of unclaimed rewards",
                "example": null
              },
              {
                "name": "positions",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "label",
                      "type": "string",
                      "description": "The label of the position",
                      "example": "liquidity"
                    },
                    {
                      "name": "tokens",
                      "type": "array",
                      "description": "The tokens associated with the position",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "token_type",
                            "type": "string",
                            "description": "The type of the token",
                            "example": "defi-token"
                          },
                          {
                            "name": "name",
                            "type": "string",
                            "description": "The name of the token",
                            "example": "Wrapped Ether"
                          },
                          {
                            "name": "symbol",
                            "type": "string",
                            "description": "The symbol of the token",
                            "example": "WETH"
                          },
                          {
                            "name": "contract_address",
                            "type": "string",
                            "description": "The contract address of the token",
                            "example": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
                          },
                          {
                            "name": "decimals",
                            "type": "number",
                            "description": "The number of decimals of the token",
                            "example": 18
                          },
                          {
                            "name": "logo",
                            "type": "string",
                            "description": "The URL of the token's logo",
                            "example": "https://logos.covalenthq.com/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                          },
                          {
                            "name": "thumbnail",
                            "type": "string",
                            "description": "The URL of the token's thumbnail image",
                            "example": "https://logos.covalenthq.com/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                          },
                          {
                            "name": "balance",
                            "type": "string",
                            "description": "The balance of the token",
                            "example": "1000000"
                          },
                          {
                            "name": "balance_formatted",
                            "type": "string",
                            "description": "The formatted balance of the token",
                            "example": "1.000000"
                          },
                          {
                            "name": "usd_price",
                            "type": "number",
                            "description": "The USD price of the token",
                            "example": 1000000
                          },
                          {
                            "name": "usd_value",
                            "type": "number",
                            "description": "The USD value of the token balance",
                            "example": 1000000
                          }
                        ]
                      }
                    },
                    {
                      "name": "address",
                      "type": "string",
                      "description": "The address of the position",
                      "example": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
                    },
                    {
                      "name": "balance_usd",
                      "type": "number",
                      "description": "The USD balance of the position",
                      "example": 1000000
                    },
                    {
                      "name": "total_unclaimed_usd_value",
                      "type": "number",
                      "description": "The total unclaimed USD value of the position",
                      "example": 1000000
                    },
                    {
                      "name": "position_details",
                      "type": "object",
                      "description": "Details of the position",
                      "fields": [
                        {
                          "name": "fee_tier",
                          "type": "number",
                          "description": "The fee tier of the position",
                          "example": 1
                        },
                        {
                          "name": "range_tnd",
                          "type": "number",
                          "description": "The range of the position",
                          "example": 1
                        },
                        {
                          "name": "reserves",
                          "type": "array",
                          "description": "The reserves of the position",
                          "field": {
                            "type": "string",
                            "example": "string"
                          }
                        },
                        {
                          "name": "current_price",
                          "type": "number",
                          "description": "The current price of the position",
                          "example": 1
                        },
                        {
                          "name": "is_in_range",
                          "type": "boolean",
                          "description": "Indicator if the position is in range",
                          "example": true
                        },
                        {
                          "name": "price_upper",
                          "type": "number",
                          "description": "The upper price range of the position",
                          "example": 1
                        },
                        {
                          "name": "price_lower",
                          "type": "number",
                          "description": "The lower price range of the position",
                          "example": 1
                        },
                        {
                          "name": "price_label",
                          "type": "string",
                          "description": "The label for the price",
                          "example": "string"
                        },
                        {
                          "name": "liquidity",
                          "type": "number",
                          "description": "The liquidity of the position",
                          "example": 1
                        },
                        {
                          "name": "range_start",
                          "type": "number",
                          "description": "The start of the range",
                          "example": 1
                        },
                        {
                          "name": "pool_address",
                          "type": "string",
                          "description": "The address of the pool",
                          "example": "string"
                        },
                        {
                          "name": "position_key",
                          "type": "string",
                          "description": "The key of the position",
                          "example": "string"
                        },
                        {
                          "name": "nft_metadata",
                          "type": "object",
                          "description": "Additional metadata for the NFT",
                          "fields": [
                            {
                              "name": "additionalProp1",
                              "type": "object",
                              "description": "Additional property 1"
                            }
                          ]
                        },
                        {
                          "name": "asset_standard",
                          "type": "string",
                          "description": "The asset standard",
                          "example": "string"
                        },
                        {
                          "name": "apy",
                          "type": "number",
                          "description": "The annual percentage yield",
                          "example": 1
                        },
                        {
                          "name": "is_debt",
                          "type": "boolean",
                          "description": "Indicator if the position is a debt",
                          "example": true
                        },
                        {
                          "name": "is_variable_debt",
                          "type": "boolean",
                          "description": "Indicator if the position is a variable debt",
                          "example": true
                        },
                        {
                          "name": "is_stable_debt",
                          "type": "boolean",
                          "description": "Indicator if the position is a stable debt",
                          "example": true
                        },
                        {
                          "name": "shares",
                          "type": "string",
                          "description": "The shares of the position",
                          "example": "string"
                        },
                        {
                          "name": "reserve0",
                          "type": "string",
                          "description": "The reserve 0 of the position",
                          "example": "string"
                        },
                        {
                          "name": "reserve1",
                          "type": "string",
                          "description": "The reserve 1 of the position",
                          "example": "string"
                        },
                        {
                          "name": "factory",
                          "type": "string",
                          "description": "The factory of the position",
                          "example": "string"
                        },
                        {
                          "name": "pair",
                          "type": "string",
                          "description": "The pair of the position",
                          "example": "string"
                        },
                        {
                          "name": "share_of_pool",
                          "type": "number",
                          "description": "The share of the pool",
                          "example": 1
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getDefiPositionsByProtocol": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get detailed defi positions by protocol for a wallet",
      "description": "Get the detailed defi positions by protocol for a wallet address.",
      "method": "GET",
      "path": "/wallets/:address/defi/:protocol/positions",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "type": "string",
          "example": "0xd100d8b69c5ae23d6aa30c6c3874bf47539b95fd"
        },
        {
          "name": "protocol",
          "description": "The protocol to query",
          "required": true,
          "example": "aave-v3",
          "type": "string",
          "enum": [
            "uniswap-v2",
            "uniswap-v3",
            "pancakeswap-v2",
            "pancakeswap-v3",
            "quickswap-v2",
            "sushiswap-v2",
            "aave-v2",
            "aave-v3",
            "fraxswap-v1",
            "fraxswap-v2",
            "lido",
            "makerdao",
            "eigenlayer"
          ]
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the defi positions by protocol for the wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "protocol_name",
                "type": "string",
                "description": "The name of the DeFi protocol",
                "example": "Uniswap v2",
                "required": true
              },
              {
                "name": "protocol_id",
                "type": "string",
                "description": "The ID of the DeFi protocol",
                "example": "uniswap-v2",
                "required": true
              },
              {
                "name": "protocol_url",
                "type": "string",
                "description": "The URL of the DeFi protocol",
                "example": "https://app.uniswap.org/pools/v2"
              },
              {
                "name": "protocol_logo",
                "type": "string",
                "description": "The URL of the protocol's logo",
                "example": "https://cdn.moralis.io/defi/uniswap.png"
              },
              {
                "name": "total_usd_value",
                "type": "number",
                "description": "The total USD value of the protocol's positions",
                "example": 47754.14278954011
              },
              {
                "name": "total_unclaimed_usd_value",
                "type": "number",
                "description": "The total USD value of unclaimed rewards",
                "example": null
              },
              {
                "name": "positions",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "label",
                      "type": "string",
                      "description": "The label of the position",
                      "example": "liquidity"
                    },
                    {
                      "name": "tokens",
                      "type": "array",
                      "description": "The tokens associated with the position",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "token_type",
                            "type": "string",
                            "description": "The type of the token",
                            "example": "defi-token"
                          },
                          {
                            "name": "name",
                            "type": "string",
                            "description": "The name of the token",
                            "example": "Wrapped Ether"
                          },
                          {
                            "name": "symbol",
                            "type": "string",
                            "description": "The symbol of the token",
                            "example": "WETH"
                          },
                          {
                            "name": "contract_address",
                            "type": "string",
                            "description": "The contract address of the token",
                            "example": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
                          },
                          {
                            "name": "decimals",
                            "type": "number",
                            "description": "The number of decimals of the token",
                            "example": 18
                          },
                          {
                            "name": "logo",
                            "type": "string",
                            "description": "The URL of the token's logo",
                            "example": "https://logos.covalenthq.com/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                          },
                          {
                            "name": "thumbnail",
                            "type": "string",
                            "description": "The URL of the token's thumbnail image",
                            "example": "https://logos.covalenthq.com/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                          },
                          {
                            "name": "balance",
                            "type": "string",
                            "description": "The balance of the token",
                            "example": "1000000"
                          },
                          {
                            "name": "balance_formatted",
                            "type": "string",
                            "description": "The formatted balance of the token",
                            "example": "1.000000"
                          },
                          {
                            "name": "usd_price",
                            "type": "number",
                            "description": "The USD price of the token",
                            "example": 1000000
                          },
                          {
                            "name": "usd_value",
                            "type": "number",
                            "description": "The USD value of the token balance",
                            "example": 1000000
                          }
                        ]
                      }
                    },
                    {
                      "name": "address",
                      "type": "string",
                      "description": "The address of the position",
                      "example": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
                    },
                    {
                      "name": "balance_usd",
                      "type": "number",
                      "description": "The USD balance of the position",
                      "example": 1000000
                    },
                    {
                      "name": "total_unclaimed_usd_value",
                      "type": "number",
                      "description": "The total unclaimed USD value of the position",
                      "example": 1000000
                    },
                    {
                      "name": "position_details",
                      "type": "object",
                      "description": "Details of the position",
                      "fields": [
                        {
                          "name": "fee_tier",
                          "type": "number",
                          "description": "The fee tier of the position",
                          "example": 1
                        },
                        {
                          "name": "range_tnd",
                          "type": "number",
                          "description": "The range of the position",
                          "example": 1
                        },
                        {
                          "name": "reserves",
                          "type": "array",
                          "description": "The reserves of the position",
                          "field": {
                            "type": "string",
                            "example": "string"
                          }
                        },
                        {
                          "name": "current_price",
                          "type": "number",
                          "description": "The current price of the position",
                          "example": 1
                        },
                        {
                          "name": "is_in_range",
                          "type": "boolean",
                          "description": "Indicator if the position is in range",
                          "example": true
                        },
                        {
                          "name": "price_upper",
                          "type": "number",
                          "description": "The upper price range of the position",
                          "example": 1
                        },
                        {
                          "name": "price_lower",
                          "type": "number",
                          "description": "The lower price range of the position",
                          "example": 1
                        },
                        {
                          "name": "price_label",
                          "type": "string",
                          "description": "The label for the price",
                          "example": "string"
                        },
                        {
                          "name": "liquidity",
                          "type": "number",
                          "description": "The liquidity of the position",
                          "example": 1
                        },
                        {
                          "name": "range_start",
                          "type": "number",
                          "description": "The start of the range",
                          "example": 1
                        },
                        {
                          "name": "pool_address",
                          "type": "string",
                          "description": "The address of the pool",
                          "example": "string"
                        },
                        {
                          "name": "position_key",
                          "type": "string",
                          "description": "The key of the position",
                          "example": "string"
                        },
                        {
                          "name": "nft_metadata",
                          "type": "object",
                          "description": "Additional metadata for the NFT",
                          "fields": [
                            {
                              "name": "additionalProp1",
                              "type": "object",
                              "description": "Additional property 1"
                            }
                          ]
                        },
                        {
                          "name": "asset_standard",
                          "type": "string",
                          "description": "The asset standard",
                          "example": "string"
                        },
                        {
                          "name": "apy",
                          "type": "number",
                          "description": "The annual percentage yield",
                          "example": 1
                        },
                        {
                          "name": "is_debt",
                          "type": "boolean",
                          "description": "Indicator if the position is a debt",
                          "example": true
                        },
                        {
                          "name": "is_variable_debt",
                          "type": "boolean",
                          "description": "Indicator if the position is a variable debt",
                          "example": true
                        },
                        {
                          "name": "is_stable_debt",
                          "type": "boolean",
                          "description": "Indicator if the position is a stable debt",
                          "example": true
                        },
                        {
                          "name": "shares",
                          "type": "string",
                          "description": "The shares of the position",
                          "example": "string"
                        },
                        {
                          "name": "reserve0",
                          "type": "string",
                          "description": "The reserve 0 of the position",
                          "example": "string"
                        },
                        {
                          "name": "reserve1",
                          "type": "string",
                          "description": "The reserve 1 of the position",
                          "example": "string"
                        },
                        {
                          "name": "factory",
                          "type": "string",
                          "description": "The factory of the position",
                          "example": "string"
                        },
                        {
                          "name": "pair",
                          "type": "string",
                          "description": "The pair of the position",
                          "example": "string"
                        },
                        {
                          "name": "share_of_pool",
                          "type": "number",
                          "description": "The share of the pool",
                          "example": 1
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getTopProfitableWalletPerToken": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Top Profitable Wallets for a Token",
      "description": "Retrieves a list of the top profitable wallets for a specific ERC20 token.",
      "method": "GET",
      "path": "/erc20/:address/top-gainers",
      "pathParams": [
        {
          "name": "address",
          "description": "The ERC20 token address.",
          "required": true,
          "type": "string",
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933"
        }
      ],
      "queryParams": [
        {
          "name": "days",
          "description": "Timeframe in days for the profitability summary. Options include 'all', '7', '30', '60', '90' default is 'all'",
          "required": false,
          "type": "string"
        },
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "base",
            "0x2105"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response with top profitable wallets.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "name",
                "type": "string",
                "description": "The name of the token contract",
                "example": "Kylin Network"
              },
              {
                "name": "symbol",
                "type": "string",
                "description": "The symbol of the NFT contract",
                "example": "KYL"
              },
              {
                "name": "decimals",
                "type": "number",
                "description": "The number of decimals on the token",
                "example": 18
              },
              {
                "name": "logo",
                "type": "string",
                "description": "The logo of the token",
                "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
              },
              {
                "name": "possible_spam",
                "type": "boolean",
                "description": "Indicates if a contract is possibly a spam contract",
                "example": true
              },
              {
                "name": "result",
                "type": "object",
                "description": "List of top profitable wallets per token.",
                "fields": [
                  {
                    "name": "avg_buy_price_usd",
                    "type": "string",
                    "description": "Average buy price in USD."
                  },
                  {
                    "name": "avg_cost_of_quantity_sold",
                    "type": "string",
                    "description": "Average cost of quantity sold."
                  },
                  {
                    "name": "avg_sell_price_usd",
                    "type": "string",
                    "description": "Average sell price in USD."
                  },
                  {
                    "name": "count_of_trades",
                    "type": "number",
                    "description": "Total number of trades.",
                    "example": 2
                  },
                  {
                    "name": "realized_profit_percentage",
                    "type": "number",
                    "description": "Realized profit as a percentage.",
                    "example": 1
                  },
                  {
                    "name": "realized_profit_usd",
                    "type": "string",
                    "description": "Realized profit in USD."
                  },
                  {
                    "name": "total_sold_usd",
                    "type": "string",
                    "description": "Total amount in USD for sold tokens."
                  },
                  {
                    "name": "total_tokens_bought",
                    "type": "string",
                    "description": "Total number of tokens bought."
                  },
                  {
                    "name": "total_tokens_sold",
                    "type": "string",
                    "description": "Total number of tokens sold."
                  },
                  {
                    "name": "total_usd_invested",
                    "type": "string",
                    "description": "Total amount of USD invested."
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The wallet address."
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenPairs": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get token pairs by address",
      "description": "Get the supported pairs for a specific token address.",
      "method": "GET",
      "path": "/erc20/:token_address/pairs",
      "pathParams": [
        {
          "name": "token_address",
          "description": "The address of the token contract",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the supported pairs for the token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor for the next page of results",
                "example": "string"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100,
                "required": true
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page number",
                "example": 2,
                "required": true
              },
              {
                "name": "pairs",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "exchange_address",
                      "type": "string",
                      "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
                    },
                    {
                      "name": "exchange_name",
                      "type": "string",
                      "example": "Uniswap v3"
                    },
                    {
                      "name": "exchange_logo",
                      "type": "string",
                      "example": "https://entities-logos.s3.us-east-1.amazonaws.com/uniswap.png"
                    },
                    {
                      "name": "pair_label",
                      "type": "string",
                      "example": "USDC/WETH"
                    },
                    {
                      "name": "pair_address",
                      "type": "string",
                      "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640"
                    },
                    {
                      "name": "from_address_entity_logo",
                      "type": "string",
                      "description": "The logo of the from address entity",
                      "example": "https://opensea.io/favicon.ico"
                    },
                    {
                      "name": "usd_price",
                      "type": "number",
                      "example": 1.0006209353320241
                    },
                    {
                      "name": "usd_price_24hr_percent_change",
                      "type": "number",
                      "example": -0.060345507380585806
                    },
                    {
                      "name": "usd_price_24hr_usd_change",
                      "type": "number",
                      "example": -0.0006041943845493947
                    },
                    {
                      "name": "liquidity_usd",
                      "type": "number",
                      "example": 147124866.6
                    },
                    {
                      "name": "base_token",
                      "type": "string",
                      "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                    },
                    {
                      "name": "quote_token",
                      "type": "string",
                      "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                    },
                    {
                      "name": "pair",
                      "type": "array",
                      "fields": {
                        "type": "object",
                        "field": [
                          {
                            "name": "token_address",
                            "type": "string",
                            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                          },
                          {
                            "name": "token_name",
                            "type": "string",
                            "example": "USD Coin"
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "example": "USDC"
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "example": "https://logo.moralis.io/0x1_0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48_d021d841dc113e213b32a0cb11ec2f86"
                          },
                          {
                            "name": "token_decimals",
                            "type": "string",
                            "example": "6"
                          },
                          {
                            "name": "pair_token_type",
                            "type": "string",
                            "example": "token0"
                          },
                          {
                            "name": "liquidity_usd",
                            "type": "number",
                            "example": 81480213.24
                          }
                        ]
                      },
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "token_address",
                            "type": "string",
                            "example": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                          },
                          {
                            "name": "token_name",
                            "type": "string",
                            "example": "USD Coin"
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "example": "USDC"
                          },
                          {
                            "name": "token_logo",
                            "type": "string",
                            "example": "https://logo.moralis.io/0x1_0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48_d021d841dc113e213b32a0cb11ec2f86"
                          },
                          {
                            "name": "token_decimals",
                            "type": "string",
                            "example": "6"
                          },
                          {
                            "name": "pair_token_type",
                            "type": "string",
                            "example": "token0"
                          },
                          {
                            "name": "liquidity_usd",
                            "type": "number",
                            "example": 81480213.24
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getPairStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get pair stats",
      "description": "Get the pair stats by using pair address",
      "method": "GET",
      "path": "/pairs/:address/stats",
      "pathParams": [
        {
          "name": "address",
          "description": "The pair address",
          "required": true,
          "example": "0xa43fe16908251ee70ef74718545e4fe6c5ccec9f",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the pair stats.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address",
                "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640"
              },
              {
                "name": "tokenName",
                "type": "string",
                "description": "The token name",
                "example": "Wrapped Ether",
                "required": true
              },
              {
                "name": "tokenSymbol",
                "type": "string",
                "description": "The token symbol",
                "example": "WETH",
                "required": true
              },
              {
                "name": "tokenLogo",
                "type": "string",
                "description": "The token image",
                "example": "https://logo.moralis.io/0x1_0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2_996ca17c00e6665189c55f0101abba12",
                "required": true
              },
              {
                "name": "pairCreated",
                "type": "string",
                "description": "The time when the pair was created",
                "example": "2021-04-02T10:07:54.000Z",
                "required": true
              },
              {
                "name": "pairLabel",
                "type": "string",
                "description": "The pair label",
                "example": "WETH/PEPE",
                "required": true
              },
              {
                "name": "pairAddress",
                "type": "string",
                "description": "The pair address",
                "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640",
                "required": true
              },
              {
                "name": "exchange",
                "type": "string",
                "description": "The exchange name",
                "example": "Uniswap v2",
                "required": true
              },
              {
                "name": "exchangeAddress",
                "type": "string",
                "description": "The exchange address",
                "example": "0x101cc05f4a51c0319f570d5e146a8c625198e222",
                "required": true
              },
              {
                "name": "exchangeLogo",
                "type": "string",
                "description": "The exchange logo",
                "example": "uniswap.png",
                "required": true
              },
              {
                "name": "exchangeUrl",
                "type": "string",
                "description": "The exchange url",
                "example": "app.uniswap.com",
                "required": true
              },
              {
                "name": "currentUsdPrice",
                "type": "string",
                "description": "The current usd price",
                "example": "0.00000194",
                "required": true
              },
              {
                "name": "currentNativePrice",
                "type": "string",
                "description": "The current native price",
                "example": "0.0000000042",
                "required": true
              },
              {
                "name": "totalLiquidityUsd",
                "type": "string",
                "description": "The total liquidity in usd",
                "example": "43345522",
                "required": true
              },
              {
                "name": "pricePercentChange",
                "type": "object",
                "fields": [
                  {
                    "name": "5min",
                    "type": "number",
                    "example": 0.09856979079440326
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "example": 0.23177601087570995
                  },
                  {
                    "name": "4h",
                    "type": "number",
                    "example": 1.3056575044286343
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "example": 0.4482653565002788
                  }
                ]
              },
              {
                "name": "liquidityPercentChange",
                "type": "object",
                "fields": [
                  {
                    "name": "5min",
                    "type": "number",
                    "example": 0.03745609400699131
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "example": 0.23280716969448695
                  },
                  {
                    "name": "4h",
                    "type": "number",
                    "example": -3.5386931892386437
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "example": -2.5011308034564723
                  }
                ]
              },
              {
                "name": "buys",
                "type": "object",
                "fields": [
                  {
                    "name": "5min",
                    "type": "number",
                    "example": 10
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "example": 78
                  },
                  {
                    "name": "4h",
                    "type": "number",
                    "example": 345
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "example": 2282
                  }
                ]
              },
              {
                "name": "sells",
                "type": "object",
                "fields": [
                  {
                    "name": "5min",
                    "type": "number",
                    "example": 10
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "example": 108
                  },
                  {
                    "name": "4h",
                    "type": "number",
                    "example": 409
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "example": 3130
                  }
                ]
              },
              {
                "name": "totalVolume",
                "type": "object",
                "fields": [
                  {
                    "name": "5min",
                    "type": "number",
                    "example": 517133.48427126
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "example": 6628184.8790348
                  },
                  {
                    "name": "4h",
                    "type": "number",
                    "example": 23767839.919415
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "example": 257825464.3465
                  }
                ]
              },
              {
                "name": "buyVolume",
                "type": "object",
                "fields": [
                  {
                    "name": "5min",
                    "type": "number",
                    "example": 384363.38145012
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "example": 3564931.2694156
                  },
                  {
                    "name": "4h",
                    "type": "number",
                    "example": 13366086.701575
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "example": 129123325.63683
                  }
                ]
              },
              {
                "name": "sellVolume",
                "type": "object",
                "fields": [
                  {
                    "name": "5min",
                    "type": "number",
                    "example": 132770.10282114
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "example": 3063253.6096191
                  },
                  {
                    "name": "4h",
                    "type": "number",
                    "example": 10401753.21784
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "example": 128702138.70967
                  }
                ]
              },
              {
                "name": "buyers",
                "type": "object",
                "fields": [
                  {
                    "name": "5min",
                    "type": "number",
                    "example": 6
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "example": 24
                  },
                  {
                    "name": "4h",
                    "type": "number",
                    "example": 47
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "example": 114
                  }
                ]
              },
              {
                "name": "sellers",
                "type": "object",
                "fields": [
                  {
                    "name": "5min",
                    "type": "number",
                    "example": 6
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "example": 26
                  },
                  {
                    "name": "4h",
                    "type": "number",
                    "example": 60
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "example": 139
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenAnalytics": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get token analytics",
      "description": "Get analytics for a token by token address",
      "method": "GET",
      "path": "/tokens/:address/analytics",
      "pathParams": [
        {
          "name": "address",
          "description": "The token address",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "ronin",
            "0x7e4",
            "pulse",
            "0x171",
            "solana"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token analytics data.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address",
                "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
                "required": true
              },
              {
                "name": "totalBuyVolume",
                "type": "object",
                "description": "The total buy volume across different time periods",
                "required": true,
                "fields": [
                  {
                    "name": "5m",
                    "type": "number",
                    "description": "Buy volume in the last 5 minutes",
                    "example": 0
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "description": "Buy volume in the last hour",
                    "example": 43678.642005116264
                  },
                  {
                    "name": "6h",
                    "type": "number",
                    "description": "Buy volume in the last 6 hours",
                    "example": 129974.13379912674
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "description": "Buy volume in the last 24 hours",
                    "example": 4583254.969119737
                  }
                ]
              },
              {
                "name": "totalSellVolume",
                "type": "object",
                "description": "The total sell volume across different time periods",
                "required": true,
                "fields": [
                  {
                    "name": "5m",
                    "type": "number",
                    "description": "Sell volume in the last 5 minutes",
                    "example": 147.69184595604904
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "description": "Sell volume in the last hour",
                    "example": 393.0296489666009
                  },
                  {
                    "name": "6h",
                    "type": "number",
                    "description": "Sell volume in the last 6 hours",
                    "example": 257421.35479601548
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "description": "Sell volume in the last 24 hours",
                    "example": 4735908.689740969
                  }
                ]
              },
              {
                "name": "totalBuyers",
                "type": "object",
                "description": "The total number of buyers across different time periods",
                "required": true,
                "fields": [
                  {
                    "name": "5m",
                    "type": "number",
                    "description": "Number of buyers in the last 5 minutes",
                    "example": 0
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "description": "Number of buyers in the last hour",
                    "example": 33
                  },
                  {
                    "name": "6h",
                    "type": "number",
                    "description": "Number of buyers in the last 6 hours",
                    "example": 115
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "description": "Number of buyers in the last 24 hours",
                    "example": 547
                  }
                ]
              },
              {
                "name": "totalSellers",
                "type": "object",
                "description": "The total number of sellers across different time periods",
                "required": true,
                "fields": [
                  {
                    "name": "5m",
                    "type": "number",
                    "description": "Number of sellers in the last 5 minutes",
                    "example": 1
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "description": "Number of sellers in the last hour",
                    "example": 2
                  },
                  {
                    "name": "6h",
                    "type": "number",
                    "description": "Number of sellers in the last 6 hours",
                    "example": 78
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "description": "Number of sellers in the last 24 hours",
                    "example": 587
                  }
                ]
              },
              {
                "name": "totalBuys",
                "type": "object",
                "description": "The total number of buy transactions across different time periods",
                "required": true,
                "fields": [
                  {
                    "name": "5m",
                    "type": "number",
                    "description": "Number of buy transactions in the last 5 minutes",
                    "example": 0
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "description": "Number of buy transactions in the last hour",
                    "example": 34
                  },
                  {
                    "name": "6h",
                    "type": "number",
                    "description": "Number of buy transactions in the last 6 hours",
                    "example": 120
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "description": "Number of buy transactions in the last 24 hours",
                    "example": 587
                  }
                ]
              },
              {
                "name": "totalSells",
                "type": "object",
                "description": "The total number of sell transactions across different time periods",
                "required": true,
                "fields": [
                  {
                    "name": "5m",
                    "type": "number",
                    "description": "Number of sell transactions in the last 5 minutes",
                    "example": 1
                  },
                  {
                    "name": "1h",
                    "type": "number",
                    "description": "Number of sell transactions in the last hour",
                    "example": 2
                  },
                  {
                    "name": "6h",
                    "type": "number",
                    "description": "Number of sell transactions in the last 6 hours",
                    "example": 87
                  },
                  {
                    "name": "24h",
                    "type": "number",
                    "description": "Number of sell transactions in the last 24 hours",
                    "example": 622
                  }
                ]
              },
              {
                "name": "totalLiquidityUsd",
                "type": "string",
                "description": "The total liquidity in USD",
                "example": "36741131.82999999",
                "required": true
              },
              {
                "name": "totalFullyDilutedValuation",
                "type": "string",
                "description": "The total fully diluted valuation of the token",
                "example": "2967517591.181045",
                "required": true
              }
            ]
          }
        }
      ]
    },
    "getMultipleTokenAnalytics": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get analytics for multiple tokens",
      "description": "Returns analytics data for multiple token addresses across different chains",
      "method": "POST",
      "path": "/tokens/analytics",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "description": "Request body",
        "type": "object",
        "fields": [
          {
            "name": "tokens",
            "type": "array",
            "required": true,
            "description": "The tokens to fetch analytics for",
            "example": [
              {
                "chain": "0x1",
                "tokenAddress": "0xdac17f958d2ee523a2206206994597c13d831ec7"
              },
              {
                "chain": "solana",
                "tokenAddress": "hntyVP6YFm1Hg25TN9WGLqM12b8TQmcknKrdu1oxWux"
              }
            ],
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain",
                  "type": "string",
                  "description": "The chain identifier (chain name or hex chain ID)",
                  "example": "0x1",
                  "required": false
                },
                {
                  "name": "tokenAddress",
                  "type": "string",
                  "description": "The token contract address",
                  "example": "0xdac17f958d2ee523a2206206994597c13d831ec7",
                  "required": true
                }
              ]
            }
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns analytics data for the requested tokens",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "tokens",
                "type": "array",
                "description": "Array of token analytics data",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "tokenAddress",
                      "type": "string",
                      "description": "The token address",
                      "example": "0xdac17f958d2ee523a2206206994597c13d831ec7",
                      "required": true
                    },
                    {
                      "name": "totalBuyVolume",
                      "type": "object",
                      "description": "The total buy volume across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Buy volume in the last 5 minutes",
                          "example": 620018.368745647
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Buy volume in the last hour",
                          "example": 6171117.52967764
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Buy volume in the last 6 hours",
                          "example": 36449765.17913502
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Buy volume in the last 24 hours",
                          "example": 271657291.0959589
                        }
                      ]
                    },
                    {
                      "name": "totalSellVolume",
                      "type": "object",
                      "description": "The total sell volume across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Sell volume in the last 5 minutes",
                          "example": 376750.0725032808
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Sell volume in the last hour",
                          "example": 6363315.515975114
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Sell volume in the last 6 hours",
                          "example": 45127944.04393408
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Sell volume in the last 24 hours",
                          "example": 278022340.90688425
                        }
                      ]
                    },
                    {
                      "name": "totalBuyers",
                      "type": "object",
                      "description": "The total number of buyers across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Number of buyers in the last 5 minutes",
                          "example": 43
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Number of buyers in the last hour",
                          "example": 552
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Number of buyers in the last 6 hours",
                          "example": 3535
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Number of buyers in the last 24 hours",
                          "example": 20336
                        }
                      ]
                    },
                    {
                      "name": "totalSellers",
                      "type": "object",
                      "description": "The total number of sellers across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Number of sellers in the last 5 minutes",
                          "example": 48
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Number of sellers in the last hour",
                          "example": 582
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Number of sellers in the last 6 hours",
                          "example": 3675
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Number of sellers in the last 24 hours",
                          "example": 20166
                        }
                      ]
                    },
                    {
                      "name": "totalBuys",
                      "type": "object",
                      "description": "The total number of buy transactions across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Number of buy transactions in the last 5 minutes",
                          "example": 51
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Number of buy transactions in the last hour",
                          "example": 641
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Number of buy transactions in the last 6 hours",
                          "example": 4114
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Number of buy transactions in the last 24 hours",
                          "example": 24506
                        }
                      ]
                    },
                    {
                      "name": "totalSells",
                      "type": "object",
                      "description": "The total number of sell transactions across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Number of sell transactions in the last 5 minutes",
                          "example": 55
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Number of sell transactions in the last hour",
                          "example": 676
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Number of sell transactions in the last 6 hours",
                          "example": 4242
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Number of sell transactions in the last 24 hours",
                          "example": 24198
                        }
                      ]
                    },
                    {
                      "name": "totalLiquidityUsd",
                      "type": "string",
                      "description": "The total liquidity in USD",
                      "example": "300289168.54999965",
                      "required": true
                    },
                    {
                      "name": "totalFullyDilutedValuation",
                      "type": "string",
                      "description": "The total fully diluted valuation of the token",
                      "example": "75897332933.73126",
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getVolumeStatsByChain": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get volume statistics by chain",
      "description": "Returns volume statistics, active wallets, and total transactions for supported blockchain networks",
      "method": "GET",
      "path": "/volume/chains",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns volume statistics for all supported chains",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "chains",
                "type": "array",
                "description": "List of chains with volume statistics",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "chainId",
                      "type": "string",
                      "description": "The chain identifier (hex chain ID or 'solana')",
                      "example": "0x1",
                      "required": true
                    },
                    {
                      "name": "totalVolume",
                      "type": "object",
                      "description": "Total volume across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Total volume in the last 5 minutes",
                          "example": 1690971.708286464
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Total volume in the last hour",
                          "example": 46146546.893509656
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Total volume in the last 6 hours",
                          "example": 325726471.73284143
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Total volume in the last 24 hours",
                          "example": 2296130181.8957353
                        }
                      ]
                    },
                    {
                      "name": "activeWallets",
                      "type": "object",
                      "description": "Number of active wallets across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Active wallets in the last 5 minutes",
                          "example": 416
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Active wallets in the last hour",
                          "example": 4860
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Active wallets in the last 6 hours",
                          "example": 40954
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Active wallets in the last 24 hours",
                          "example": 193324
                        }
                      ]
                    },
                    {
                      "name": "totalTransactions",
                      "type": "object",
                      "description": "Total number of transactions across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Total transactions in the last 5 minutes",
                          "example": 617
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Total transactions in the last hour",
                          "example": 5913
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Total transactions in the last 6 hours",
                          "example": 50554
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Total transactions in the last 24 hours",
                          "example": 240210
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getVolumeStatsByCategory": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get volume and chain data by categories",
      "description": "Returns volume statistics, buyer/seller counts, and transaction counts for token categories on a specific chain",
      "method": "GET",
      "path": "/volume/categories",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "ronin",
            "0x7e4",
            "pulse",
            "0x171",
            "solana"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns volume statistics for token categories on the specified chain",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "categories",
                "type": "array",
                "description": "List of categories with volume statistics",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "categoryId",
                      "type": "string",
                      "description": "The category identifier",
                      "example": "artificial-intelligence",
                      "required": true
                    },
                    {
                      "name": "totalBuyVolume",
                      "type": "object",
                      "description": "Total buy volume across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Buy volume in the last 5 minutes",
                          "example": 714.0815536553663
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Buy volume in the last hour",
                          "example": 8330.827220195075
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Buy volume in the last 6 hours",
                          "example": 226941.46075181215
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Buy volume in the last 24 hours",
                          "example": 844976.6205963915
                        }
                      ]
                    },
                    {
                      "name": "totalSellVolume",
                      "type": "object",
                      "description": "Total sell volume across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Sell volume in the last 5 minutes",
                          "example": 974.2512412423143
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Sell volume in the last hour",
                          "example": 27373.23458490025
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Sell volume in the last 6 hours",
                          "example": 212581.83058358674
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Sell volume in the last 24 hours",
                          "example": 1099797.4109894654
                        }
                      ]
                    },
                    {
                      "name": "totalBuyers",
                      "type": "object",
                      "description": "Number of buyers across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Buyers in the last 5 minutes",
                          "example": 4
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Buyers in the last hour",
                          "example": 22
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Buyers in the last 6 hours",
                          "example": 240
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Buyers in the last 24 hours",
                          "example": 1206
                        }
                      ]
                    },
                    {
                      "name": "totalSellers",
                      "type": "object",
                      "description": "Number of sellers across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Sellers in the last 5 minutes",
                          "example": 3
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Sellers in the last hour",
                          "example": 35
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Sellers in the last 6 hours",
                          "example": 236
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Sellers in the last 24 hours",
                          "example": 1020
                        }
                      ]
                    },
                    {
                      "name": "totalBuys",
                      "type": "object",
                      "description": "Number of buy transactions across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Buy transactions in the last 5 minutes",
                          "example": 4
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Buy transactions in the last hour",
                          "example": 23
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Buy transactions in the last 6 hours",
                          "example": 253
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Buy transactions in the last 24 hours",
                          "example": 1271
                        }
                      ]
                    },
                    {
                      "name": "totalSells",
                      "type": "object",
                      "description": "Number of sell transactions across different time periods",
                      "required": true,
                      "fields": [
                        {
                          "name": "5m",
                          "type": "number",
                          "description": "Sell transactions in the last 5 minutes",
                          "example": 3
                        },
                        {
                          "name": "1h",
                          "type": "number",
                          "description": "Sell transactions in the last hour",
                          "example": 35
                        },
                        {
                          "name": "6h",
                          "type": "number",
                          "description": "Sell transactions in the last 6 hours",
                          "example": 249
                        },
                        {
                          "name": "24h",
                          "type": "number",
                          "description": "Sell transactions in the last 24 hours",
                          "example": 1074
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getTimeSeriesVolume": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Retrieve timeseries volume data by chain",
      "description": "Returns historical volume data for chains in time intervals",
      "method": "GET",
      "path": "/volume/timeseries",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "ronin",
            "0x7e4",
            "pulse",
            "0x171",
            "solana"
          ]
        },
        {
          "name": "timeframe",
          "description": "The time interval for data points",
          "required": true,
          "example": "1d",
          "type": "string",
          "enum": [
            "1d",
            "7d",
            "30d"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns time series volume data for the specified chain",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "timeseries",
                "type": "array",
                "description": "Time series data points",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "timestamp",
                      "type": "string",
                      "description": "Timestamp for the data point",
                      "example": "2025-03-04T10:00:00.000Z",
                      "required": true
                    },
                    {
                      "name": "volume",
                      "type": "number",
                      "description": "Total volume for this time interval",
                      "example": 50377606.51392583,
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getTimeSeriesVolumeByCategory": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Retrieve timeseries volume data by category",
      "description": "Returns historical buy and sell volume data for a specific token category in time intervals",
      "method": "GET",
      "path": "/volume/timeseries/:categoryId",
      "pathParams": [
        {
          "name": "categoryId",
          "description": "The category identifier",
          "required": true,
          "example": "artificial-intelligence",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "ronin",
            "0x7e4",
            "pulse",
            "0x171",
            "solana"
          ]
        },
        {
          "name": "timeframe",
          "description": "The time interval for data points",
          "required": true,
          "example": "1d",
          "type": "string",
          "enum": [
            "1d",
            "7d",
            "30d"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns time series volume data for the specified category",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "timeseries",
                "type": "array",
                "description": "Time series data points",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "timestamp",
                      "type": "string",
                      "description": "Timestamp for the data point",
                      "example": "2025-03-04T10:00:00.000Z",
                      "required": true
                    },
                    {
                      "name": "buyVolume",
                      "type": "number",
                      "description": "Total buy volume for this time interval",
                      "example": 8330.827220195075,
                      "required": true
                    },
                    {
                      "name": "sellVolume",
                      "type": "number",
                      "description": "Total sell volume for this time interval",
                      "example": 27373.234584900256,
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getTimeSeriesTokenAnalytics": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Timeseries Token Analytics for EVM & Solana",
      "description": "Retrieve comprehensive timeseries analytics for multiple tokens with on both EVM and Solana chains, including volume, transaction counts, and valuation data.",
      "method": "POST",
      "path": "/tokens/analytics/timeseries",
      "pathParams": [],
      "queryParams": [
        {
          "name": "timeframe",
          "description": "The timeframe to query",
          "required": true,
          "example": "1d",
          "type": "string",
          "enum": [
            "1d",
            "7d",
            "30d"
          ]
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "tokens",
            "type": "array",
            "required": true,
            "description": "The tokens to be fetched",
            "example": [
              {
                "chain": "0x1",
                "tokenAddress": "0xdac17f958d2ee523a2206206994597c13d831ec7"
              },
              {
                "chain": "solana",
                "tokenAddress": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
              }
            ],
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain",
                  "type": "string",
                  "description": "The chain identifier (chain name or hex chain ID)",
                  "example": "0x1",
                  "required": true,
                  "enum": [
                    "eth",
                    "0x1",
                    "sepolia",
                    "0xaa36a7",
                    "polygon",
                    "0x89",
                    "bsc",
                    "0x38",
                    "bsc testnet",
                    "0x61",
                    "avalanche",
                    "0xa86a",
                    "fantom",
                    "0xfa",
                    "cronos",
                    "0x19",
                    "arbitrum",
                    "0xa4b1",
                    "chiliz",
                    "0x15b38",
                    "chiliz testnet",
                    "0x15b32",
                    "gnosis",
                    "0x64",
                    "gnosis testnet",
                    "0x27d8",
                    "base",
                    "0x2105",
                    "base sepolia",
                    "0x14a34",
                    "optimism",
                    "0xa",
                    "holesky",
                    "0x4268",
                    "polygon amoy",
                    "0x13882",
                    "linea",
                    "0xe708",
                    "moonbeam",
                    "0x504",
                    "moonriver",
                    "0x505",
                    "moonbase",
                    "0x507",
                    "linea sepolia",
                    "0xe705",
                    "flow",
                    "0x2eb",
                    "flow-testnet",
                    "0x221",
                    "ronin",
                    "0x7e4",
                    "ronin-testnet",
                    "0x7e5",
                    "lisk",
                    "0x46f",
                    "lisk-sepolia",
                    "0x106a",
                    "pulse",
                    "0x171",
                    "solana"
                  ]
                },
                {
                  "name": "tokenAddress",
                  "type": "string",
                  "description": "The token contract address",
                  "example": "0xdac17f958d2ee523a2206206994597c13d831ec7",
                  "required": true
                }
              ]
            }
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Successful response",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "array",
                "description": "Array of token timeseries data",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "chainId",
                      "type": "string",
                      "description": "The chain identifier",
                      "example": "0x1",
                      "required": true
                    },
                    {
                      "name": "tokenAddress",
                      "type": "string",
                      "description": "The token address",
                      "example": "0xdac17f958d2ee523a2206206994597c13d831ec7",
                      "required": true
                    },
                    {
                      "name": "timeseries",
                      "type": "array",
                      "description": "Array of timeseries data points",
                      "required": true,
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "timestamp",
                            "type": "string",
                            "description": "Timestamp of the data point",
                            "example": "2022-02-22T00:00:00Z",
                            "required": true
                          },
                          {
                            "name": "buyVolume",
                            "type": "number",
                            "description": "Buy volume for this time period",
                            "example": 4565,
                            "required": true
                          },
                          {
                            "name": "sellVolume",
                            "type": "number",
                            "description": "Sell volume for this time period",
                            "example": 4565,
                            "required": true
                          },
                          {
                            "name": "liquidityUsd",
                            "type": "number",
                            "description": "Liquidity in USD for this time period",
                            "example": 4565,
                            "required": true
                          },
                          {
                            "name": "fullyDilutedValuation",
                            "type": "number",
                            "description": "Fully diluted valuation for this time period",
                            "example": 4565,
                            "required": true
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getAggregatedTokenPairStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get aggregated token pair statistics by address",
      "description": "Get aggregated statistics across supported pairs of a token.",
      "method": "GET",
      "path": "/erc20/:token_address/pairs/stats",
      "pathParams": [
        {
          "name": "token_address",
          "description": "The address of the token contract",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the statistics for supported pairs of the token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total_liquidity_usd",
                "type": "number",
                "example": 1184543489313.2297
              },
              {
                "name": "total_active_pairs",
                "type": "number",
                "example": 217
              },
              {
                "name": "total_active_dexes",
                "type": "number",
                "example": 163
              }
            ]
          }
        }
      ]
    },
    "getPairCandlesticks": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get OHLCV by pair address",
      "description": "Get the OHLCV candle stick by using pair address",
      "method": "GET",
      "path": "/pairs/:address/ohlcv",
      "pathParams": [
        {
          "name": "address",
          "description": "The pair address",
          "required": true,
          "example": "0xa43fe16908251ee70ef74718545e4fe6c5ccec9f",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "timeframe",
          "description": "The timeframe",
          "required": true,
          "type": "string",
          "example": "1h",
          "enum": [
            "1s",
            "10s",
            "30s",
            "1min",
            "5min",
            "10min",
            "30min",
            "1h",
            "4h",
            "12h",
            "1d",
            "1w",
            "1M"
          ]
        },
        {
          "name": "currency",
          "description": "The currency",
          "required": true,
          "type": "string",
          "example": "usd",
          "enum": [
            "usd",
            "native"
          ]
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "example": "2025-01-01T10:00:00.000",
          "required": true,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'toBlock' or 'toDate'\n* If 'toDate' and 'toBlock' are provided, 'toBlock' will be used.\n",
          "required": true,
          "example": "2025-01-02T10:00:00.000",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The number of results to return",
          "required": false,
          "type": "number",
          "minimum": 0
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the OHLCV data.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "description": "The cursor to get to the next page",
                "type": "string",
                "example": "string"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": 1,
                "required": true
              },
              {
                "name": "pairAddress",
                "type": "string",
                "description": "The pair address",
                "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640",
                "required": true
              },
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address",
                "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640",
                "required": true
              },
              {
                "name": "timeframe",
                "type": "string",
                "description": "The timeframe",
                "example": "1h",
                "required": true
              },
              {
                "name": "currency",
                "type": "string",
                "description": "The currency",
                "example": "usd",
                "required": true
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "timestamp",
                      "type": "string",
                      "description": "The timestamp of the candle",
                      "example": "2024-02-14T00:00:00.000Z"
                    },
                    {
                      "name": "open",
                      "type": "number",
                      "description": "The opening price for the period",
                      "example": 253.82
                    },
                    {
                      "name": "high",
                      "type": "number",
                      "description": "The highest price reached during the period",
                      "example": 255.14
                    },
                    {
                      "name": "low",
                      "type": "number",
                      "description": "The lowest price reached during the period",
                      "example": 252.91
                    },
                    {
                      "name": "close",
                      "type": "number",
                      "description": "The closing price for the period",
                      "example": 253.95
                    },
                    {
                      "name": "volume",
                      "type": "number",
                      "description": "The total trading volume for the period",
                      "example": 23544.27541795
                    },
                    {
                      "name": "swaps",
                      "type": "number",
                      "description": "The total number of swaps executed during the period",
                      "example": 48
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getSwapsByPairAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get swap transactions by pair address.",
      "description": "Get all swap related transactions (buy, sell, add liquidity & remove liquidity)",
      "method": "GET",
      "path": "/pairs/:address/swaps",
      "pathParams": [
        {
          "name": "address",
          "description": "The pair address token-transactions are to be retrieved for.",
          "required": true,
          "example": "0xa43fe16908251ee70ef74718545e4fe6c5ccec9f",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page)",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The number of results to return",
          "required": false,
          "type": "number",
          "minimum": 0
        },
        {
          "name": "fromBlock",
          "description": "The minimum block number from which to get the token transactions\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "toBlock",
          "description": "The block number up to which you want to get the token transactions from",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'toBlock' or 'toDate'\n* If 'toDate' and 'toBlock' are provided, 'toBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "transactionTypes",
          "required": false,
          "type": "string",
          "description": "Array of transaction types. Allowed values are 'buy', 'sell', 'addLiquidity', 'removeLiquidity'."
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns swap transactions by pair address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": 1,
                "required": true
              },
              {
                "name": "cursor",
                "description": "The cursor to get to the next page",
                "type": "string",
                "example": "string"
              },
              {
                "name": "pageSize",
                "type": "number",
                "description": "The number of results per page",
                "example": 100,
                "required": true
              },
              {
                "name": "exchangeAddress",
                "type": "string",
                "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
              },
              {
                "name": "exchangeLogo",
                "type": "string",
                "example": "https://entities-logos.s3.us-east-1.amazonaws.com/uniswap.png"
              },
              {
                "name": "exchangeName",
                "type": "string",
                "example": "Uniswap v3"
              },
              {
                "name": "pairAddress",
                "type": "string",
                "description": "The pair address",
                "example": "0xcbcdf9626bc03e24f779434178a73a0b4bad62ed"
              },
              {
                "name": "pairLabel",
                "type": "string",
                "example": "WBTC/WETH"
              },
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address",
                "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640",
                "required": true
              },
              {
                "name": "baseToken",
                "type": "object",
                "description": "The base token",
                "fields": [
                  {
                    "name": "address",
                    "example": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
                    "type": "string",
                    "description": "The address of the native token"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the token",
                    "example": "Wrapped BTC"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the token",
                    "example": "WBTC"
                  },
                  {
                    "name": "logo",
                    "type": "string",
                    "description": "The logo of the token",
                    "example": "https://logo.moralis.io/0x1_0x2260fac5e5542a773aa44fbcfedf7c193bc2c599_3d45c7efabf4bff37f5d92817940bddb.png"
                  },
                  {
                    "name": "decimals",
                    "type": "string",
                    "description": "The number of decimals of the native price value",
                    "example": "8"
                  }
                ]
              },
              {
                "name": "quoteToken",
                "type": "object",
                "description": "The quote token",
                "fields": [
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the quote token",
                    "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the token",
                    "example": "Wrapped Ether"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the token",
                    "example": "WETH"
                  },
                  {
                    "name": "logo",
                    "type": "string",
                    "description": "The logo of the token",
                    "example": "https://logo.moralis.io/0x1_0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2_018112a9229b4bf1bf0d042beb7c2c55.png"
                  },
                  {
                    "name": "decimals",
                    "type": "string",
                    "description": "The number of decimals of the token",
                    "example": "18"
                  }
                ]
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "transactionHash",
                      "type": "string",
                      "description": "The hash of the transaction",
                      "example": "0x9cb8f18d9aedd7d215186bc423f8f726e74f06acc6e63207b21f628e09c1124f"
                    },
                    {
                      "name": "transactionIndex",
                      "type": "integer",
                      "description": "The index of the transaction within the block",
                      "example": 5
                    },
                    {
                      "name": "transactionType",
                      "type": "string",
                      "description": "The type of transaction (buy/sell)",
                      "example": "buy"
                    },
                    {
                      "name": "blockTimestamp",
                      "type": "string",
                      "description": "The timestamp of the block",
                      "example": "2024-12-04T13:36:59.000Z"
                    },
                    {
                      "name": "blockNumber",
                      "type": "integer",
                      "description": "The number of the block",
                      "example": 21329474
                    },
                    {
                      "name": "walletAddress",
                      "type": "string",
                      "description": "The wallet address involved in the transaction",
                      "example": "0x206bb16d50890aa69a6c723fd18cc8438bfdfca8"
                    },
                    {
                      "name": "subCategory",
                      "type": "string",
                      "description": "The sub-category of the transaction",
                      "example": "newPosition"
                    },
                    {
                      "name": "baseTokenAmount",
                      "type": "string",
                      "description": "The amount of the base token",
                      "example": "0.14668467"
                    },
                    {
                      "name": "quoteTokenAmount",
                      "type": "string",
                      "description": "The amount of the quote token",
                      "example": "-3.787990094781687594"
                    },
                    {
                      "name": "baseTokenPriceUsd",
                      "type": "string",
                      "description": "The USD price of the base token",
                      "example": "95248.957482020033763352"
                    },
                    {
                      "name": "quoteTokenPriceUsd",
                      "type": "string",
                      "description": "The USD price of the quote token",
                      "example": "3699.329804324900700000"
                    },
                    {
                      "name": "baseQuotePrice",
                      "type": "string",
                      "description": "The price of the base token relative to the quote token",
                      "example": "25.747625251110109537"
                    },
                    {
                      "name": "totalValueUsd",
                      "type": "number",
                      "description": "The total value of the transaction in USD",
                      "example": 13971.56189609414
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getSwapsByTokenAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get swap transactions by token address.",
      "description": "Get all swap related transactions (buy, sell)",
      "method": "GET",
      "path": "/erc20/:address/swaps",
      "pathParams": [
        {
          "name": "address",
          "description": "The token address to get transaction for",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page)",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The number of results to return",
          "required": false,
          "type": "number",
          "minimum": 0
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "fromBlock",
          "description": "The minimum block number from which to get the token transactions\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "toBlock",
          "description": "The block number up to which you want to get the token transactions from",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'toBlock' or 'toDate'\n* If 'toDate' and 'toBlock' are provided, 'toBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "transactionTypes",
          "required": false,
          "type": "string",
          "description": "Array of transaction types. Allowed values are 'buy', 'sell'"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns swap transactions by token address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "description": "The cursor to get to the next page",
                "type": "string",
                "example": "string"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": 1,
                "required": true
              },
              {
                "name": "pageSize",
                "type": "number",
                "description": "The number of results per page",
                "example": 100,
                "required": true
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "transactionHash",
                      "type": "string",
                      "description": "The hash of the transaction",
                      "example": "0x2339c3c92317e94672cdb6e39d69e042d5e67f2b59f0f0a74118b330ae0a3b6a"
                    },
                    {
                      "name": "transactionIndex",
                      "type": "number",
                      "description": "The index of the transaction within the block",
                      "example": 15
                    },
                    {
                      "name": "transactionType",
                      "type": "string",
                      "description": "The type of transaction (buy/sell)",
                      "example": "sell"
                    },
                    {
                      "name": "baseQuotePrice",
                      "type": "string",
                      "description": "The price of the base token relative to the quote token",
                      "example": "26.339942637915532257"
                    },
                    {
                      "name": "entity",
                      "type": "string",
                      "description": "The entity associated with the transaction",
                      "example": null
                    },
                    {
                      "name": "entityLogo",
                      "type": "string",
                      "description": "The logo of the associated entity",
                      "example": null
                    },
                    {
                      "name": "blockTimestamp",
                      "type": "string",
                      "description": "The timestamp of the block",
                      "example": "2024-12-05T08:12:11.000Z"
                    },
                    {
                      "name": "blockNumber",
                      "type": "integer",
                      "description": "The number of the block",
                      "example": 21335021
                    },
                    {
                      "name": "subCategory",
                      "type": "string",
                      "description": "The sub-category of the transaction",
                      "example": "partialSell"
                    },
                    {
                      "name": "walletAddress",
                      "type": "string",
                      "description": "The wallet address involved in the transaction",
                      "example": "0xa172577031eafd8b03dce022533863fe988159cd"
                    },
                    {
                      "name": "walletAddressLabel",
                      "type": "string",
                      "description": "The label for the wallet address",
                      "example": null
                    },
                    {
                      "name": "pairAddress",
                      "type": "string",
                      "description": "The pair address",
                      "example": "0xe6ff8b9a37b0fab776134636d9981aa778c4e718"
                    },
                    {
                      "name": "pairLabel",
                      "type": "string",
                      "description": "The token pair label",
                      "example": "WBTC/WETH"
                    },
                    {
                      "name": "exchangeName",
                      "type": "string",
                      "description": "The name of the exchange",
                      "example": "Uniswap v3"
                    },
                    {
                      "name": "exchangeAddress",
                      "type": "string",
                      "description": "The address of the exchange",
                      "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
                    },
                    {
                      "name": "exchangeLogo",
                      "type": "string",
                      "description": "The logo URL of the exchange",
                      "example": "https://entities-logos.s3.us-east-1.amazonaws.com/uniswap.png"
                    },
                    {
                      "name": "baseToken",
                      "type": "string",
                      "description": "The address of the base token in the pair",
                      "example": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
                    },
                    {
                      "name": "quoteToken",
                      "type": "string",
                      "description": "The address of the quote token in the pair",
                      "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                    },
                    {
                      "name": "bought",
                      "type": "object",
                      "description": "Details of the token bought",
                      "fields": [
                        {
                          "name": "address",
                          "type": "string",
                          "description": "The address of the token bought",
                          "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                        },
                        {
                          "name": "amount",
                          "type": "string",
                          "description": "The amount of the token bought",
                          "example": "3.827024226435305903"
                        },
                        {
                          "name": "usdPrice",
                          "type": "number",
                          "description": "The USD price of the token bought",
                          "example": 3873.6908509932464
                        },
                        {
                          "name": "usdAmount",
                          "type": "number",
                          "description": "The total USD value of the token bought",
                          "example": 14824.70873247195
                        },
                        {
                          "name": "symbol",
                          "type": "string",
                          "description": "The symbol of the token",
                          "example": "WETH"
                        },
                        {
                          "name": "logo",
                          "type": "string",
                          "description": "The logo URL for the bought token",
                          "example": "https://logo.moralis.io/0x1_0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2_018112a9229b4bf1bf0d042beb7c2c55.png"
                        },
                        {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the token",
                          "example": "Wrapped Ether"
                        },
                        {
                          "name": "tokenType",
                          "type": "string",
                          "description": "The type of the bought token (token0 or token1)",
                          "example": "token1"
                        }
                      ]
                    },
                    {
                      "name": "sold",
                      "type": "object",
                      "description": "Details of the token sold",
                      "fields": [
                        {
                          "name": "address",
                          "type": "string",
                          "description": "The address of the token sold",
                          "example": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
                        },
                        {
                          "name": "amount",
                          "type": "string",
                          "description": "The amount of the token sold",
                          "example": "-0.14521667"
                        },
                        {
                          "name": "usdPrice",
                          "type": "number",
                          "description": "The USD price of the token sold",
                          "example": 102032.79481218032
                        },
                        {
                          "name": "usdAmount",
                          "type": "number",
                          "description": "The total USD value of the token sold",
                          "example": -14816.862693418101
                        },
                        {
                          "name": "symbol",
                          "type": "string",
                          "description": "The symbol of the token",
                          "example": "WBTC"
                        },
                        {
                          "name": "logo",
                          "type": "string",
                          "description": "The logo URL for the sold token",
                          "example": "https://logo.moralis.io/0x1_0x2260fac5e5542a773aa44fbcfedf7c193bc2c599_3d45c7efabf4bff37f5d92817940bddb.png"
                        },
                        {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the token",
                          "example": "Wrapped BTC"
                        },
                        {
                          "name": "tokenType",
                          "type": "string",
                          "description": "The type of the sold token (token0 or token1)",
                          "example": "token0"
                        }
                      ]
                    },
                    {
                      "name": "totalValueUsd",
                      "type": "number",
                      "description": "The total USD value of the transaction",
                      "example": 14816.862693418101
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getSwapsByWalletAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get swap transactions by wallet address.",
      "description": "Get all swap related transactions (buy, sell)",
      "method": "GET",
      "path": "/wallets/:address/swaps",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address token-transactions are to be retrieved for.",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page)",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The number of results to return",
          "required": false,
          "type": "number",
          "minimum": 0
        },
        {
          "name": "fromBlock",
          "description": "The minimum block number from which to get the token transactions\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "toBlock",
          "description": "The block number up to which you want to get the token transactions from",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'toBlock' or 'toDate'\n* If 'toDate' and 'toBlock' are provided, 'toBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "transactionTypes",
          "required": false,
          "type": "string",
          "description": "Array of transaction types. Allowed values are 'buy', 'sell'"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns swap transactions by wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "description": "The cursor to get to the next page",
                "type": "string",
                "example": "string"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": 1,
                "required": true
              },
              {
                "name": "pageSize",
                "type": "number",
                "description": "The number of results per page",
                "example": 100,
                "required": true
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "transactionHash",
                      "type": "string",
                      "description": "The hash of the transaction",
                      "example": "0x2339c3c92317e94672cdb6e39d69e042d5e67f2b59f0f0a74118b330ae0a3b6a"
                    },
                    {
                      "name": "transactionIndex",
                      "type": "number",
                      "description": "The index of the transaction within the block",
                      "example": 15
                    },
                    {
                      "name": "transactionType",
                      "type": "string",
                      "description": "The type of transaction (buy/sell)",
                      "example": "sell"
                    },
                    {
                      "name": "baseQuotePrice",
                      "type": "string",
                      "description": "The price of the base token relative to the quote token",
                      "example": "26.339942637915532257"
                    },
                    {
                      "name": "entity",
                      "type": "string",
                      "description": "The entity associated with the transaction",
                      "example": null
                    },
                    {
                      "name": "entityLogo",
                      "type": "string",
                      "description": "The logo of the associated entity",
                      "example": null
                    },
                    {
                      "name": "blockTimestamp",
                      "type": "string",
                      "description": "The timestamp of the block",
                      "example": "2024-12-05T08:12:11.000Z"
                    },
                    {
                      "name": "blockNumber",
                      "type": "integer",
                      "description": "The number of the block",
                      "example": 21335021
                    },
                    {
                      "name": "subCategory",
                      "type": "string",
                      "description": "The sub-category of the transaction",
                      "example": "partialSell"
                    },
                    {
                      "name": "walletAddress",
                      "type": "string",
                      "description": "The wallet address involved in the transaction",
                      "example": "0xa172577031eafd8b03dce022533863fe988159cd"
                    },
                    {
                      "name": "walletAddressLabel",
                      "type": "string",
                      "description": "The label for the wallet address",
                      "example": null
                    },
                    {
                      "name": "pairAddress",
                      "type": "string",
                      "description": "The pair address",
                      "example": "0xe6ff8b9a37b0fab776134636d9981aa778c4e718"
                    },
                    {
                      "name": "pairLabel",
                      "type": "string",
                      "description": "The token pair label",
                      "example": "WBTC/WETH"
                    },
                    {
                      "name": "exchangeName",
                      "type": "string",
                      "description": "The name of the exchange",
                      "example": "Uniswap v3"
                    },
                    {
                      "name": "exchangeAddress",
                      "type": "string",
                      "description": "The address of the exchange",
                      "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
                    },
                    {
                      "name": "exchangeLogo",
                      "type": "string",
                      "description": "The logo URL of the exchange",
                      "example": "https://entities-logos.s3.us-east-1.amazonaws.com/uniswap.png"
                    },
                    {
                      "name": "baseToken",
                      "type": "string",
                      "description": "The address of the base token in the pair",
                      "example": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
                    },
                    {
                      "name": "quoteToken",
                      "type": "string",
                      "description": "The address of the quote token in the pair",
                      "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                    },
                    {
                      "name": "bought",
                      "type": "object",
                      "description": "Details of the token bought",
                      "fields": [
                        {
                          "name": "address",
                          "type": "string",
                          "description": "The address of the token bought",
                          "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                        },
                        {
                          "name": "amount",
                          "type": "string",
                          "description": "The amount of the token bought",
                          "example": "3.827024226435305903"
                        },
                        {
                          "name": "usdPrice",
                          "type": "number",
                          "description": "The USD price of the token bought",
                          "example": 3873.6908509932464
                        },
                        {
                          "name": "usdAmount",
                          "type": "number",
                          "description": "The total USD value of the token bought",
                          "example": 14824.70873247195
                        },
                        {
                          "name": "symbol",
                          "type": "string",
                          "description": "The symbol of the token",
                          "example": "WETH"
                        },
                        {
                          "name": "logo",
                          "type": "string",
                          "description": "The logo URL for the bought token",
                          "example": "https://logo.moralis.io/0x1_0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2_018112a9229b4bf1bf0d042beb7c2c55.png"
                        },
                        {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the token",
                          "example": "Wrapped Ether"
                        },
                        {
                          "name": "tokenType",
                          "type": "string",
                          "description": "The type of the bought token (token0 or token1)",
                          "example": "token1"
                        }
                      ]
                    },
                    {
                      "name": "sold",
                      "type": "object",
                      "description": "Details of the token sold",
                      "fields": [
                        {
                          "name": "address",
                          "type": "string",
                          "description": "The address of the token sold",
                          "example": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
                        },
                        {
                          "name": "amount",
                          "type": "string",
                          "description": "The amount of the token sold",
                          "example": "-0.14521667"
                        },
                        {
                          "name": "usdPrice",
                          "type": "number",
                          "description": "The USD price of the token sold",
                          "example": 102032.79481218032
                        },
                        {
                          "name": "usdAmount",
                          "type": "number",
                          "description": "The total USD value of the token sold",
                          "example": -14816.862693418101
                        },
                        {
                          "name": "symbol",
                          "type": "string",
                          "description": "The symbol of the token",
                          "example": "WBTC"
                        },
                        {
                          "name": "logo",
                          "type": "string",
                          "description": "The logo URL for the sold token",
                          "example": "https://logo.moralis.io/0x1_0x2260fac5e5542a773aa44fbcfedf7c193bc2c599_3d45c7efabf4bff37f5d92817940bddb.png"
                        },
                        {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the token",
                          "example": "Wrapped BTC"
                        },
                        {
                          "name": "tokenType",
                          "type": "string",
                          "description": "The type of the sold token (token0 or token1)",
                          "example": "token0"
                        }
                      ]
                    },
                    {
                      "name": "totalValueUsd",
                      "type": "number",
                      "description": "The total USD value of the transaction",
                      "example": 14816.862693418101
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getSnipersByPairAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get snipers by pair address on EVM",
      "description": "Get all snipers (wallets that quickly buy and sell tokens) for a specific token pair address.",
      "method": "GET",
      "path": "/pairs/:address/snipers",
      "pathParams": [
        {
          "name": "address",
          "description": "The pair address for which snipers are to be retrieved.",
          "required": true,
          "example": "0xa3c2076eb97d573cc8842f1db1ecdf7b6f77ba27",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query.",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "ronin",
            "0x7e4",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "blocksAfterCreation",
          "description": "The number of blocks after the token pair creation to consider for sniper activity.",
          "required": false,
          "type": "number",
          "example": 3
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns snipers by pair address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "transactionHash",
                "type": "string",
                "description": "The hash of the transaction.",
                "example": "0x2bfcba4715774420936669cd0ff2241d70e9abecab76c9db813602015b3134ad"
              },
              {
                "name": "blockTimestamp",
                "type": "string",
                "description": "The timestamp of the block.",
                "example": "2022-02-22T00:00:00Z"
              },
              {
                "name": "blockNumber",
                "type": "integer",
                "description": "The block number.",
                "example": 21093423
              },
              {
                "name": "result",
                "type": "array",
                "description": "An array of sniper details.",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "walletAddress",
                      "type": "string",
                      "description": "The address of the sniper wallet.",
                      "example": "0x2bfcba4715774420936669cd0ff2241d70e9abec"
                    },
                    {
                      "name": "totalTokensSniped",
                      "type": "number",
                      "description": "Total tokens sniped by the wallet.",
                      "example": 0
                    },
                    {
                      "name": "totalSnipedUsd",
                      "type": "number",
                      "description": "Total USD value of tokens sniped.",
                      "example": 0
                    },
                    {
                      "name": "totalSnipedTransactions",
                      "type": "number",
                      "description": "Total number of snipe transactions.",
                      "example": 0
                    },
                    {
                      "name": "totalTokensSold",
                      "type": "number",
                      "description": "Total tokens sold by the wallet.",
                      "example": 0
                    },
                    {
                      "name": "totalSoldUsd",
                      "type": "number",
                      "description": "Total USD value of tokens sold.",
                      "example": 0
                    },
                    {
                      "name": "totalSellTransactions",
                      "type": "number",
                      "description": "Total number of sell transactions.",
                      "example": 0
                    },
                    {
                      "name": "currentBalance",
                      "type": "number",
                      "description": "Current token balance of the wallet.",
                      "example": 0
                    },
                    {
                      "name": "currentBalanceUsdValue",
                      "type": "number",
                      "description": "Current USD value of the token balance.",
                      "example": 0
                    },
                    {
                      "name": "realizedProfitPercentage",
                      "type": "number",
                      "description": "Percentage of realized profit.",
                      "example": 0
                    },
                    {
                      "name": "realizedProfitUsd",
                      "type": "number",
                      "description": "USD value of realized profit.",
                      "example": 0
                    },
                    {
                      "name": "snipedTransactions",
                      "type": "array",
                      "description": "Array of snipe transactions.",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "transactionHash",
                            "type": "string",
                            "description": "The hash of the snipe transaction.",
                            "example": "0x2bfcba4715774420936669cd0ff2241d70e9abec"
                          },
                          {
                            "name": "blocksAfterCreation",
                            "type": "number",
                            "description": "Number of blocks after token pair creation.",
                            "example": 0
                          },
                          {
                            "name": "transactionTimestamp",
                            "type": "number",
                            "description": "Timestamp of the snipe transaction.",
                            "example": 0
                          }
                        ]
                      }
                    },
                    {
                      "name": "sellTransactions",
                      "type": "array",
                      "description": "Array of sell transactions.",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "transactionHash",
                            "type": "string",
                            "description": "The hash of the sell transaction.",
                            "example": "0x2bfcba4715774420936669cd0ff2241d70e9abec"
                          },
                          {
                            "name": "blocksAfterCreation",
                            "type": "number",
                            "description": "Number of blocks after token pair creation.",
                            "example": 0
                          },
                          {
                            "name": "transactionTimestamp",
                            "type": "number",
                            "description": "Timestamp of the sell transaction.",
                            "example": 0
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getTokenHolders": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get holders summary by token address.",
      "description": "Get token holder summary",
      "method": "GET",
      "path": "/erc20/:address/holders",
      "pathParams": [
        {
          "name": "address",
          "description": "The token contract address",
          "required": true,
          "type": "string",
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "ronin",
            "0x7e4",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns token holder summary",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "totalHolders",
                "type": "number",
                "required": true,
                "description": "Total number of token holders",
                "example": 107777
              },
              {
                "name": "holdersByAcquisition",
                "type": "object",
                "required": true,
                "description": "Breakdown of how holders acquired tokens",
                "fields": [
                  {
                    "name": "swap",
                    "type": "number",
                    "required": true,
                    "description": "Number of holders who acquired via swaps",
                    "example": 378279
                  },
                  {
                    "name": "transfer",
                    "type": "number",
                    "required": true,
                    "description": "Number of holders who acquired via transfers",
                    "example": 816041
                  },
                  {
                    "name": "airdrop",
                    "type": "number",
                    "required": true,
                    "description": "Number of holders who acquired via airdrops",
                    "example": 12899
                  }
                ]
              },
              {
                "name": "holderChange",
                "type": "object",
                "required": true,
                "description": "Changes in holder count over different time periods",
                "fields": [
                  {
                    "name": "5min",
                    "type": "object",
                    "required": true,
                    "description": "5 minute change",
                    "fields": [
                      {
                        "name": "change",
                        "type": "number",
                        "required": true,
                        "description": "Absolute change in holders",
                        "example": 1
                      },
                      {
                        "name": "changePercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage change in holders",
                        "example": 5
                      }
                    ]
                  },
                  {
                    "name": "1h",
                    "type": "object",
                    "required": true,
                    "description": "1 hour change",
                    "fields": [
                      {
                        "name": "change",
                        "type": "number",
                        "required": true,
                        "description": "Absolute change in holders",
                        "example": 9
                      },
                      {
                        "name": "changePercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage change in holders",
                        "example": 0.0084
                      }
                    ]
                  },
                  {
                    "name": "6h",
                    "type": "object",
                    "required": true,
                    "description": "6 hour change",
                    "fields": [
                      {
                        "name": "change",
                        "type": "number",
                        "required": true,
                        "description": "Absolute change in holders",
                        "example": 71
                      },
                      {
                        "name": "changePercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage change in holders",
                        "example": 0.066
                      }
                    ]
                  },
                  {
                    "name": "24h",
                    "type": "object",
                    "required": true,
                    "description": "24 hour change",
                    "fields": [
                      {
                        "name": "change",
                        "type": "number",
                        "required": true,
                        "description": "Absolute change in holders",
                        "example": 291
                      },
                      {
                        "name": "changePercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage change in holders",
                        "example": 0.27
                      }
                    ]
                  },
                  {
                    "name": "3d",
                    "type": "object",
                    "required": true,
                    "description": "3 day change",
                    "fields": [
                      {
                        "name": "change",
                        "type": "number",
                        "required": true,
                        "description": "Absolute change in holders",
                        "example": 503
                      },
                      {
                        "name": "changePercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage change in holders",
                        "example": 0.47
                      }
                    ]
                  },
                  {
                    "name": "7d",
                    "type": "object",
                    "required": true,
                    "description": "7 day change",
                    "fields": [
                      {
                        "name": "change",
                        "type": "number",
                        "required": true,
                        "description": "Absolute change in holders",
                        "example": 981
                      },
                      {
                        "name": "changePercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage change in holders",
                        "example": 0.91
                      }
                    ]
                  },
                  {
                    "name": "30d",
                    "type": "object",
                    "required": true,
                    "description": "30 day change",
                    "fields": [
                      {
                        "name": "change",
                        "type": "number",
                        "required": true,
                        "description": "Absolute change in holders",
                        "example": 3630
                      },
                      {
                        "name": "changePercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage change in holders",
                        "example": 3.4
                      }
                    ]
                  }
                ]
              },
              {
                "name": "holderSupply",
                "type": "object",
                "required": true,
                "description": "Token supply distribution among top holders",
                "fields": [
                  {
                    "name": "top10",
                    "type": "object",
                    "required": true,
                    "description": "Top 10 holders supply",
                    "fields": [
                      {
                        "name": "supply",
                        "type": "number",
                        "required": true,
                        "description": "Total supply held",
                        "example": 67058.61
                      },
                      {
                        "name": "supplyPercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage of total supply",
                        "example": 52
                      }
                    ]
                  },
                  {
                    "name": "top25",
                    "type": "object",
                    "required": true,
                    "description": "Top 25 holders supply",
                    "fields": [
                      {
                        "name": "supply",
                        "type": "number",
                        "required": true,
                        "description": "Total supply held",
                        "example": 81873.72
                      },
                      {
                        "name": "supplyPercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage of total supply",
                        "example": 63
                      }
                    ]
                  },
                  {
                    "name": "top50",
                    "type": "object",
                    "required": true,
                    "description": "Top 50 holders supply",
                    "fields": [
                      {
                        "name": "supply",
                        "type": "number",
                        "required": true,
                        "description": "Total supply held",
                        "example": 90468.6
                      },
                      {
                        "name": "supplyPercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage of total supply",
                        "example": 70
                      }
                    ]
                  },
                  {
                    "name": "top100",
                    "type": "object",
                    "required": true,
                    "description": "Top 100 holders supply",
                    "fields": [
                      {
                        "name": "supply",
                        "type": "number",
                        "required": true,
                        "description": "Total supply held",
                        "example": 97659.36
                      },
                      {
                        "name": "supplyPercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage of total supply",
                        "example": 76
                      }
                    ]
                  },
                  {
                    "name": "top250",
                    "type": "object",
                    "required": true,
                    "description": "Top 250 holders supply",
                    "fields": [
                      {
                        "name": "supply",
                        "type": "number",
                        "required": true,
                        "description": "Total supply held",
                        "example": 106577.03
                      },
                      {
                        "name": "supplyPercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage of total supply",
                        "example": 83
                      }
                    ]
                  },
                  {
                    "name": "top500",
                    "type": "object",
                    "required": true,
                    "description": "Top 500 holders supply",
                    "fields": [
                      {
                        "name": "supply",
                        "type": "number",
                        "required": true,
                        "description": "Total supply held",
                        "example": 112637.5
                      },
                      {
                        "name": "supplyPercent",
                        "type": "number",
                        "required": true,
                        "description": "Percentage of total supply",
                        "example": 87
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getHistoricalTokenHolders": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get historical token holder statistics",
      "description": "Get historical holder statistics for a specific ERC20 token address over a date range",
      "method": "GET",
      "path": "/erc20/:address/holders/historical",
      "pathParams": [
        {
          "name": "address",
          "description": "The token contract address",
          "required": true,
          "type": "string",
          "example": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "ronin",
            "0x7e4",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)\n",
          "example": "2025-01-01T10:00:00",
          "required": true,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)\n",
          "required": true,
          "example": "2025-02-01T11:00:00",
          "type": "string"
        },
        {
          "name": "timeFrame",
          "description": "The timeframe",
          "required": true,
          "type": "string",
          "example": "1d",
          "enum": [
            "1min",
            "5min",
            "10min",
            "30min",
            "1h",
            "4h",
            "12h",
            "1d",
            "1w",
            "1M"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns historical token holder statistics",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "required": true,
                "description": "The current page of results",
                "example": 1
              },
              {
                "name": "cursor",
                "type": "string",
                "required": false,
                "description": "Cursor for pagination",
                "example": null
              },
              {
                "name": "result",
                "type": "array",
                "required": true,
                "description": "Array of historical holder statistics",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "timestamp",
                      "type": "string",
                      "required": true,
                      "description": "Timestamp for the data point",
                      "example": "2025-01-01T00:00:00.000Z"
                    },
                    {
                      "name": "totalHolders",
                      "type": "number",
                      "required": true,
                      "description": "Total number of holders at this timestamp",
                      "example": 104188
                    },
                    {
                      "name": "netHolderChange",
                      "type": "number",
                      "required": true,
                      "description": "Net change in number of holders",
                      "example": 32
                    },
                    {
                      "name": "holderPercentChange",
                      "type": "number",
                      "required": true,
                      "description": "Percentage change in holders",
                      "example": 0.031
                    },
                    {
                      "name": "newHoldersByAcquisition",
                      "type": "object",
                      "required": true,
                      "description": "Breakdown of how new holders acquired tokens",
                      "fields": [
                        {
                          "name": "swap",
                          "type": "number",
                          "required": true,
                          "description": "Number of new holders from swaps",
                          "example": 159
                        },
                        {
                          "name": "transfer",
                          "type": "number",
                          "required": true,
                          "description": "Number of new holders from transfers",
                          "example": 522
                        },
                        {
                          "name": "airdrop",
                          "type": "number",
                          "required": true,
                          "description": "Number of new holders from airdrops",
                          "example": 3
                        }
                      ]
                    },
                    {
                      "name": "holdersIn",
                      "type": "object",
                      "required": true,
                      "description": "New holders by wallet size category",
                      "fields": [
                        {
                          "name": "whales",
                          "type": "number",
                          "required": true,
                          "description": "New whale-sized holders",
                          "example": 0
                        },
                        {
                          "name": "sharks",
                          "type": "number",
                          "required": true,
                          "description": "New shark-sized holders",
                          "example": 0
                        },
                        {
                          "name": "dolphins",
                          "type": "number",
                          "required": true,
                          "description": "New dolphin-sized holders",
                          "example": 0
                        },
                        {
                          "name": "fish",
                          "type": "number",
                          "required": true,
                          "description": "New fish-sized holders",
                          "example": 2
                        },
                        {
                          "name": "octopus",
                          "type": "number",
                          "required": true,
                          "description": "New octopus-sized holders",
                          "example": 4
                        },
                        {
                          "name": "crab",
                          "type": "number",
                          "required": true,
                          "description": "New crab-sized holders",
                          "example": 19
                        },
                        {
                          "name": "shrimps",
                          "type": "number",
                          "required": true,
                          "description": "New shrimp-sized holders",
                          "example": 659
                        }
                      ]
                    },
                    {
                      "name": "holdersOut",
                      "type": "object",
                      "required": true,
                      "description": "Holders that left by wallet size category",
                      "fields": [
                        {
                          "name": "whales",
                          "type": "number",
                          "required": true,
                          "description": "Whale-sized holders that left",
                          "example": 0
                        },
                        {
                          "name": "sharks",
                          "type": "number",
                          "required": true,
                          "description": "Shark-sized holders that left",
                          "example": 0
                        },
                        {
                          "name": "dolphins",
                          "type": "number",
                          "required": true,
                          "description": "Dolphin-sized holders that left",
                          "example": 0
                        },
                        {
                          "name": "fish",
                          "type": "number",
                          "required": true,
                          "description": "Fish-sized holders that left",
                          "example": 1
                        },
                        {
                          "name": "octopus",
                          "type": "number",
                          "required": true,
                          "description": "Octopus-sized holders that left",
                          "example": 5
                        },
                        {
                          "name": "crab",
                          "type": "number",
                          "required": true,
                          "description": "Crab-sized holders that left",
                          "example": 21
                        },
                        {
                          "name": "shrimps",
                          "type": "number",
                          "required": true,
                          "description": "Shrimp-sized holders that left",
                          "example": 625
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "searchTokens": {
      "apiHost": "https://deep-index.moralis.io",
      "summary": "Search for tokens based on contract address, token name or token symbol",
      "description": "Search for tokens based on contract address, token name or token symbol. Premium endpoint available as an add-on. Please contact support for access details.",
      "method": "GET",
      "path": "/api/v2.2/tokens/search",
      "pathParams": [],
      "queryParams": [
        {
          "name": "query",
          "description": "Search query - can be token address, token name or token symbol",
          "required": true,
          "type": "string",
          "example": "pepe"
        },
        {
          "name": "chains",
          "description": "The chain(s) to query",
          "required": false,
          "type": "string",
          "example": "eth"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number",
          "example": 10
        },
        {
          "name": "isVerifiedContract",
          "type": "boolean",
          "required": false,
          "description": "Whether the contract is verified",
          "example": true
        },
        {
          "name": "sortBy",
          "type": "string",
          "required": false,
          "description": "Sort by volume1hDesc, volume24hDesc, liquidityDesc, marketCapDesc",
          "example": "volume1hDesc",
          "enum": [
            "volume1hDesc",
            "volume24hDesc",
            "liquidityDesc",
            "marketCapDesc"
          ]
        },
        {
          "name": "boostVerifiedContracts",
          "type": "boolean",
          "required": false,
          "description": "True to boost verified contracts",
          "example": true
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns search results for tokens",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total",
                "type": "number",
                "required": true,
                "description": "Total number of results",
                "example": 10
              },
              {
                "name": "result",
                "type": "array",
                "required": true,
                "description": "Array of token results",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "tokenAddress",
                      "type": "string",
                      "required": true,
                      "description": "The token contract address",
                      "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933"
                    },
                    {
                      "name": "chainId",
                      "type": "string",
                      "required": true,
                      "description": "The chain ID in hex format",
                      "example": "0x1"
                    },
                    {
                      "name": "name",
                      "type": "string",
                      "required": true,
                      "description": "Token name",
                      "example": "Pepe"
                    },
                    {
                      "name": "symbol",
                      "type": "string",
                      "required": true,
                      "description": "Token symbol",
                      "example": "PEPE"
                    },
                    {
                      "name": "blockNumber",
                      "type": "number",
                      "required": true,
                      "description": "Block number when token was created",
                      "example": 17046105
                    },
                    {
                      "name": "blockTimestamp",
                      "type": "number",
                      "required": true,
                      "description": "Timestamp when token was created",
                      "example": 1681483883
                    },
                    {
                      "name": "usdPrice",
                      "type": "number",
                      "required": true,
                      "description": "Current USD price",
                      "example": 0.000012302426023896
                    },
                    {
                      "name": "marketCap",
                      "type": "number",
                      "required": true,
                      "description": "Market capitalization in USD",
                      "example": 5056032434.591353
                    },
                    {
                      "name": "experiencedNetBuyers",
                      "type": "object",
                      "required": true,
                      "description": "Net buyers over different time periods",
                      "fields": [
                        {
                          "name": "oneDay",
                          "type": "number",
                          "required": true,
                          "description": "Net buyers in last 24 hours",
                          "example": -34
                        },
                        {
                          "name": "oneWeek",
                          "type": "number",
                          "required": true,
                          "description": "Net buyers in last 7 days",
                          "example": -176
                        }
                      ]
                    },
                    {
                      "name": "netVolumeUsd",
                      "type": "object",
                      "required": true,
                      "description": "Net volume in USD over different time periods",
                      "fields": [
                        {
                          "name": "oneDay",
                          "type": "number",
                          "required": true,
                          "description": "Net volume in last 24 hours",
                          "example": -212308.385726963
                        }
                      ]
                    },
                    {
                      "name": "liquidityChangeUSD",
                      "type": "object",
                      "required": true,
                      "description": "Liquidity change in USD over different time periods",
                      "fields": [
                        {
                          "name": "oneDay",
                          "type": "number",
                          "required": true,
                          "description": "Liquidity change in last 24 hours",
                          "example": -298883.8224104196
                        }
                      ]
                    },
                    {
                      "name": "usdPricePercentChange",
                      "type": "object",
                      "required": true,
                      "description": "Price change percentage over different time periods",
                      "fields": [
                        {
                          "name": "oneDay",
                          "type": "number",
                          "required": true,
                          "description": "Price change % in last 24 hours",
                          "example": -3.7369101031758394
                        }
                      ]
                    },
                    {
                      "name": "volumeUsd",
                      "type": "object",
                      "required": true,
                      "description": "Volume in USD over different time periods",
                      "fields": [
                        {
                          "name": "oneDay",
                          "type": "number",
                          "required": true,
                          "description": "Volume in last 24 hours",
                          "example": 8575800.708427625
                        }
                      ]
                    },
                    {
                      "name": "securityScore",
                      "type": "number",
                      "required": true,
                      "description": "Security score of the token",
                      "example": 92
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "required": false,
                      "description": "URL of token logo image",
                      "example": "https://adds-token-info-29a861f.s3.eu-central-1.amazonaws.com/marketing/evm/0x6982508145454ce325ddbe47a25d4ec3d2311933_icon.png"
                    },
                    {
                      "name": "isVerifiedContract",
                      "type": "boolean",
                      "required": true,
                      "description": "Whether the contract is verified",
                      "example": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getTrendingTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get trending tokens",
      "description": "Get trending tokens",
      "method": "GET",
      "path": "/tokens/trending",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "solana",
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "fantom",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171",
            "base",
            "0x2105",
            "ronin",
            "0x7e4",
            "linea",
            "0xe708"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chainId",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "tokenAddress",
                  "type": "string",
                  "example": "0xadd39272e83895e7d3f244f696b7a25635f34234",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "name",
                  "type": "string",
                  "example": "Pepe Unchained",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "uniqueName",
                  "type": "string",
                  "example": "pepe-unchained-19",
                  "description": "Unique identifier for the token",
                  "required": true
                },
                {
                  "name": "symbol",
                  "type": "string",
                  "example": "PEPU",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "decimals",
                  "type": "number",
                  "example": 18,
                  "description": "Number of decimal places for the token",
                  "required": true
                },
                {
                  "name": "logo",
                  "type": "string",
                  "example": "https://d23exngyjlavgo.cloudfront.net/0x1_0xadd39272e83895e7d3f244f696b7a25635f34234",
                  "description": "URL to the token's logo image",
                  "required": false
                },
                {
                  "name": "usdPrice",
                  "type": "number",
                  "example": 0.00790310700101,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "createdAt",
                  "type": "number",
                  "example": 1733839223,
                  "description": "Token creation timestamp",
                  "required": true
                },
                {
                  "name": "marketCap",
                  "type": "number",
                  "example": 63224066,
                  "description": "Market capitalization of the token in USD",
                  "required": true
                },
                {
                  "name": "liquidityUsd",
                  "type": "number",
                  "example": 1150563,
                  "description": "Current liquidity in USD",
                  "required": true
                },
                {
                  "name": "holders",
                  "type": "number",
                  "example": 75783,
                  "description": "Number of token holders",
                  "required": true
                },
                {
                  "name": "pricePercentChange",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": -0.03552125070606443,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "4h",
                      "type": "number",
                      "example": -0.09207686802800803,
                      "description": "Percentage price change in the last 4 hours",
                      "required": true
                    },
                    {
                      "name": "12h",
                      "type": "number",
                      "example": -0.11019146356496257,
                      "description": "Percentage price change in the last 12 hours",
                      "required": true
                    },
                    {
                      "name": "24h",
                      "type": "number",
                      "example": -0.13592146886852405,
                      "description": "Percentage price change in the last 24 hours",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "totalVolume",
                  "type": "object",
                  "description": "Trading volume over various time periods in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 97580,
                      "description": "Trading volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "4h",
                      "type": "number",
                      "example": 761204,
                      "description": "Trading volume in the last 4 hours",
                      "required": true
                    },
                    {
                      "name": "12h",
                      "type": "number",
                      "example": 1010638,
                      "description": "Trading volume in the last 12 hours",
                      "required": true
                    },
                    {
                      "name": "24h",
                      "type": "number",
                      "example": 1291895,
                      "description": "Trading volume in the last 24 hours",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "transactions",
                  "type": "object",
                  "description": "Number of transactions over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 119,
                      "description": "Number of transactions in the last hour",
                      "required": true
                    },
                    {
                      "name": "4h",
                      "type": "number",
                      "example": 603,
                      "description": "Number of transactions in the last 4 hours",
                      "required": true
                    },
                    {
                      "name": "12h",
                      "type": "number",
                      "example": 904,
                      "description": "Number of transactions in the last 12 hours",
                      "required": true
                    },
                    {
                      "name": "24h",
                      "type": "number",
                      "example": 1428,
                      "description": "Number of transactions in the last 24 hours",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "buyTransactions",
                  "type": "object",
                  "description": "Number of buy transactions over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 54,
                      "description": "Number of buy transactions in the last hour",
                      "required": true
                    },
                    {
                      "name": "4h",
                      "type": "number",
                      "example": 360,
                      "description": "Number of buy transactions in the last 4 hours",
                      "required": true
                    },
                    {
                      "name": "12h",
                      "type": "number",
                      "example": 511,
                      "description": "Number of buy transactions in the last 12 hours",
                      "required": true
                    },
                    {
                      "name": "24h",
                      "type": "number",
                      "example": 746,
                      "description": "Number of buy transactions in the last 24 hours",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "sellTransactions",
                  "type": "object",
                  "description": "Number of sell transactions over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 65,
                      "description": "Number of sell transactions in the last hour",
                      "required": true
                    },
                    {
                      "name": "4h",
                      "type": "number",
                      "example": 243,
                      "description": "Number of sell transactions in the last 4 hours",
                      "required": true
                    },
                    {
                      "name": "12h",
                      "type": "number",
                      "example": 393,
                      "description": "Number of sell transactions in the last 12 hours",
                      "required": true
                    },
                    {
                      "name": "24h",
                      "type": "number",
                      "example": 682,
                      "description": "Number of sell transactions in the last 24 hours",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "buyers",
                  "type": "object",
                  "description": "Number of unique buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 47,
                      "description": "Number of unique buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "4h",
                      "type": "number",
                      "example": 275,
                      "description": "Number of unique buyers in the last 4 hours",
                      "required": true
                    },
                    {
                      "name": "12h",
                      "type": "number",
                      "example": 359,
                      "description": "Number of unique buyers in the last 12 hours",
                      "required": true
                    },
                    {
                      "name": "24h",
                      "type": "number",
                      "example": 515,
                      "description": "Number of unique buyers in the last 24 hours",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "sellers",
                  "type": "object",
                  "description": "Number of unique sellers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 57,
                      "description": "Number of unique sellers in the last hour",
                      "required": true
                    },
                    {
                      "name": "4h",
                      "type": "number",
                      "example": 210,
                      "description": "Number of unique sellers in the last 4 hours",
                      "required": true
                    },
                    {
                      "name": "12h",
                      "type": "number",
                      "example": 339,
                      "description": "Number of unique sellers in the last 12 hours",
                      "required": true
                    },
                    {
                      "name": "24h",
                      "type": "number",
                      "example": 576,
                      "description": "Number of unique sellers in the last 24 hours",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getNewTokensByExchange": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get new tokens by exchange",
      "description": "Returns a list of newly created tokens on the specified exchange",
      "method": "GET",
      "path": "/erc20/exchange/:exchange/new",
      "pathParams": [
        {
          "name": "exchange",
          "description": "The exchange identifier",
          "required": true,
          "example": "tama.meme",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "ronin",
          "type": "string",
          "enum": [
            "ronin"
          ]
        },
        {
          "name": "limit",
          "description": "The maximum number of tokens to return",
          "required": false,
          "example": "100",
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "Cursor for pagination",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a list of new tokens on the specified exchange",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "array",
                "description": "The list of tokens",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "tokenAddress",
                      "type": "string",
                      "description": "The token address",
                      "example": "0x2a7dc2753ce8e5bb58d87d7a3b7a0a3a4f8e9c1d",
                      "required": true
                    },
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The token name",
                      "example": "RONKE",
                      "required": true
                    },
                    {
                      "name": "symbol",
                      "type": "string",
                      "description": "The token symbol",
                      "example": "RONKE",
                      "required": true
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "description": "URL to the token logo",
                      "example": "https://cf-ipfs.com/ipfs/QmYrNjXgKzDXG1234example"
                    },
                    {
                      "name": "decimals",
                      "type": "string",
                      "description": "The token decimals",
                      "example": "18",
                      "required": true
                    },
                    {
                      "name": "priceNative",
                      "type": "string",
                      "description": "The token price in native currency (WRON)",
                      "example": "0.000012345678901234",
                      "required": true
                    },
                    {
                      "name": "priceUsd",
                      "type": "string",
                      "description": "The token price in USD",
                      "example": "0.000008765432109876",
                      "required": true
                    },
                    {
                      "name": "liquidity",
                      "type": "string",
                      "description": "The token liquidity value",
                      "example": "15420.25",
                      "required": true
                    },
                    {
                      "name": "fullyDilutedValuation",
                      "type": "string",
                      "description": "The token fully diluted valuation in USD",
                      "example": "8765.432109876",
                      "required": true
                    },
                    {
                      "name": "createdAt",
                      "type": "string",
                      "description": "The token creation timestamp",
                      "example": "2025-05-22T14:30:15.000Z",
                      "required": true
                    }
                  ]
                }
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "Cursor for pagination to get the next set of results"
              }
            ]
          }
        }
      ]
    },
    "getBondingTokensByExchange": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get bonding tokens by exchange",
      "description": "Returns a list of tokens currently in bonding curve phase on the specified exchange",
      "method": "GET",
      "path": "/erc20/exchange/:exchange/bonding",
      "pathParams": [
        {
          "name": "exchange",
          "description": "The exchange identifier",
          "required": true,
          "example": "tama.meme",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "ronin",
          "type": "string",
          "enum": [
            "ronin"
          ]
        },
        {
          "name": "limit",
          "description": "The maximum number of tokens to return",
          "required": false,
          "example": "100",
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "Cursor for pagination",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a list of tokens in bonding curve phase on the specified exchange",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "array",
                "description": "The list of bonding tokens",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "tokenAddress",
                      "type": "string",
                      "description": "The token address",
                      "example": "0x2a7dc2753ce8e5bb58d87d7a3b7a0a3a4f8e9c1d",
                      "required": true
                    },
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The token name",
                      "example": "RONKE",
                      "required": true
                    },
                    {
                      "name": "symbol",
                      "type": "string",
                      "description": "The token symbol",
                      "example": "RONKE",
                      "required": true
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "description": "URL to the token logo",
                      "example": "https://cf-ipfs.com/ipfs/QmYrNjXgKzDXG1234example"
                    },
                    {
                      "name": "decimals",
                      "type": "string",
                      "description": "The token decimals",
                      "example": "18",
                      "required": true
                    },
                    {
                      "name": "priceNative",
                      "type": "string",
                      "description": "The token price in native currency (WRON)",
                      "example": "0.000015742096539867",
                      "required": true
                    },
                    {
                      "name": "priceUsd",
                      "type": "string",
                      "description": "The token price in USD",
                      "example": "0.000011253734396464",
                      "required": true
                    },
                    {
                      "name": "liquidity",
                      "type": "string",
                      "description": "The token liquidity value",
                      "example": "18750.42",
                      "required": true
                    },
                    {
                      "name": "fullyDilutedValuation",
                      "type": "string",
                      "description": "The token fully diluted valuation in USD",
                      "example": "11253.734396464",
                      "required": true
                    },
                    {
                      "name": "bondingCurveProgress",
                      "type": "number",
                      "description": "The bonding curve progress percentage",
                      "example": 67.85432109876542,
                      "required": true
                    }
                  ]
                }
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "Cursor for pagination to get the next set of results"
              }
            ]
          }
        }
      ]
    },
    "getGraduatedTokensByExchange": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get graduated tokens by exchange",
      "description": "Returns a list of tokens that have graduated from bonding curve to full trading on the specified exchange",
      "method": "GET",
      "path": "/erc20/exchange/:exchange/graduated",
      "pathParams": [
        {
          "name": "exchange",
          "description": "The exchange identifier",
          "required": true,
          "example": "tama.meme",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "ronin",
          "type": "string",
          "enum": [
            "ronin"
          ]
        },
        {
          "name": "limit",
          "description": "The maximum number of tokens to return",
          "required": false,
          "example": "100",
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "Cursor for pagination",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a list of graduated tokens on the specified exchange",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "array",
                "description": "The list of graduated tokens",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "tokenAddress",
                      "type": "string",
                      "description": "The token address",
                      "example": "0x2a7dc2753ce8e5bb58d87d7a3b7a0a3a4f8e9c1d",
                      "required": true
                    },
                    {
                      "name": "name",
                      "type": "string",
                      "description": "The token name",
                      "example": "RONKE",
                      "required": true
                    },
                    {
                      "name": "symbol",
                      "type": "string",
                      "description": "The token symbol",
                      "example": "RONKE",
                      "required": true
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "description": "URL to the token logo",
                      "example": "https://cf-ipfs.com/ipfs/QmYrNjXgKzDXG1234example"
                    },
                    {
                      "name": "decimals",
                      "type": "string",
                      "description": "The token decimals",
                      "example": "18",
                      "required": true
                    },
                    {
                      "name": "priceNative",
                      "type": "string",
                      "description": "The token price in native currency (WRON)",
                      "example": "0.000609987141763549",
                      "required": true
                    },
                    {
                      "name": "priceUsd",
                      "type": "string",
                      "description": "The token price in USD",
                      "example": "0.000451249123892451",
                      "required": true
                    },
                    {
                      "name": "liquidity",
                      "type": "string",
                      "description": "The token liquidity value",
                      "example": "32540.67",
                      "required": true
                    },
                    {
                      "name": "fullyDilutedValuation",
                      "type": "string",
                      "description": "The token fully diluted valuation in USD",
                      "example": "451249.123892451",
                      "required": true
                    },
                    {
                      "name": "graduatedAt",
                      "type": "string",
                      "description": "The token graduation timestamp",
                      "example": "2025-05-20T08:15:42.000Z",
                      "required": true
                    }
                  ]
                }
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "Cursor for pagination to get the next set of results"
              }
            ]
          }
        }
      ]
    },
    "getTokenBondingStatus": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get token bonding status",
      "description": "Returns the bonding curve status and progress for a specific token",
      "method": "GET",
      "path": "/erc20/:address/bondingStatus",
      "pathParams": [
        {
          "name": "address",
          "description": "The token address to get bonding status for",
          "required": true,
          "example": "0x5161af98f7e88f675d7bfa95fc60225057b8b937",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "ronin",
          "type": "string",
          "enum": [
            "ronin"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the bonding status for the specified token",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "The token address",
                "example": "0x5161af98f7e88f675d7bfa95fc60225057b8b937",
                "required": true
              },
              {
                "name": "exchangeName",
                "type": "string",
                "description": "The name of the exchange",
                "example": "tama.meme",
                "required": true
              },
              {
                "name": "bondingProgress",
                "type": "number",
                "description": "The bonding curve progress percentage",
                "example": 73.25689012345678,
                "required": true
              },
              {
                "name": "graduatedAt",
                "type": "string",
                "description": "The graduation timestamp (null if not graduated)",
                "example": null
              }
            ]
          }
        }
      ]
    }
  },
  "balance": {
    "getNativeBalance": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get native balance by wallet",
      "description": "Get the native balance for a specific wallet address.",
      "method": "GET",
      "path": "/:address/balance",
      "pathParams": [
        {
          "name": "address",
          "description": "The address from which the native balance will be checked",
          "required": true,
          "example": "0xDC24316b9AE028F1497c275EB9192a3Ea0f67022",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number from which the balances should be checked",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the native balance for a specific address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "balance",
                "type": "string",
                "description": "The balance",
                "example": "1234567890"
              }
            ]
          }
        }
      ]
    },
    "getNativeBalancesForAddresses": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get balance for a set of wallet",
      "description": "Get the native balances for a set of specific addresses",
      "method": "GET",
      "path": "/wallets/balances",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number on which the balances should be checked",
          "required": false,
          "type": "number"
        },
        {
          "name": "wallet_addresses",
          "description": "The addresses to get metadata for (max 25 addresses)",
          "required": true,
          "type": "array",
          "field": {
            "type": "string",
            "example": "0xE92d1A43df510F82C66382592a047d288f85226f"
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of balances",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain",
                  "type": "string",
                  "required": true,
                  "description": "The chain",
                  "example": "eth_mainnet"
                },
                {
                  "name": "chain_id",
                  "type": "string",
                  "required": true,
                  "description": "The chain id",
                  "example": "2"
                },
                {
                  "name": "total_balance",
                  "type": "string",
                  "required": true,
                  "description": "The total balances for all the walttes",
                  "example": "57499206466583095"
                },
                {
                  "name": "block_number",
                  "type": "string",
                  "required": true,
                  "description": "The block Number",
                  "example": "123456789"
                },
                {
                  "name": "block_timestamp",
                  "type": "string",
                  "required": true,
                  "description": "The block timestamp",
                  "example": "0.057"
                },
                {
                  "name": "total_balance_formatted",
                  "type": "string",
                  "required": true,
                  "description": "The total balances for all the walttes formatted",
                  "example": "123456789"
                },
                {
                  "name": "wallet_balances",
                  "type": "array",
                  "required": true,
                  "field": {
                    "type": "object",
                    "fields": [
                      {
                        "name": "address",
                        "type": "string",
                        "description": "address",
                        "example": "0x123",
                        "required": true
                      },
                      {
                        "name": "balance",
                        "type": "string",
                        "description": "balance",
                        "example": "28499206466583095",
                        "required": true
                      },
                      {
                        "name": "balance_formatted",
                        "type": "string",
                        "description": "balance formatted",
                        "example": "0.0285",
                        "required": true
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  "transaction": {
    "getWalletTransactions": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get native transactions by wallet",
      "description": "Get native transactions ordered by block number in descending order.",
      "method": "GET",
      "path": "/:address",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transactions (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the transactions up to this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page). Learn more on cursor pagination [here](/web3-data-api/evm/reference/pagination).",
          "type": "string"
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of native transactions.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor for the next page of results",
                "example": "string"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page number",
                "example": 2,
                "required": true
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100,
                "required": true
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "hash",
                      "type": "string",
                      "description": "The hash of the transaction",
                      "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                      "required": true
                    },
                    {
                      "name": "nonce",
                      "type": "string",
                      "description": "The nonce of the transaction",
                      "example": "326595425",
                      "required": true
                    },
                    {
                      "name": "transaction_index",
                      "type": "string",
                      "description": "The index of the transaction within the block",
                      "example": "25",
                      "required": true
                    },
                    {
                      "name": "from_address",
                      "type": "string",
                      "description": "The address sending the transaction",
                      "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf",
                      "required": true
                    },
                    {
                      "name": "from_address_entity",
                      "type": "string",
                      "description": "The from address entity",
                      "example": "Opensea"
                    },
                    {
                      "name": "from_address_entity_logo",
                      "type": "string",
                      "description": "The logo of the from address entity",
                      "example": "https://opensea.io/favicon.ico"
                    },
                    {
                      "name": "from_address_label",
                      "type": "string",
                      "description": "Label for the address sending the transaction",
                      "example": "Binance 1"
                    },
                    {
                      "name": "to_address_entity",
                      "type": "string",
                      "description": "The to address entity",
                      "example": "Beaver Build"
                    },
                    {
                      "name": "to_address_entity_logo",
                      "type": "string",
                      "description": "The logo of the to address entity",
                      "example": "https://beaverbuild.com/favicon.ico"
                    },
                    {
                      "name": "to_address",
                      "type": "string",
                      "description": "The address receiving the transaction",
                      "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef",
                      "required": true
                    },
                    {
                      "name": "to_address_label",
                      "type": "string",
                      "description": "Label for the address receiving the transaction",
                      "example": "Binance 2"
                    },
                    {
                      "name": "value",
                      "type": "string",
                      "description": "The value of the transaction in wei",
                      "example": "650000000000000000",
                      "required": true
                    },
                    {
                      "name": "gas",
                      "type": "string",
                      "description": "The gas limit provided by the sender",
                      "example": "6721975",
                      "required": true
                    },
                    {
                      "name": "gas_price",
                      "type": "string",
                      "description": "The gas price provided by the sender in wei",
                      "example": "20000000000",
                      "required": true
                    },
                    {
                      "name": "input",
                      "type": "string",
                      "description": "The input data sent along with the transaction",
                      "example": "string"
                    },
                    {
                      "name": "receipt_cumulative_gas_used",
                      "type": "string",
                      "description": "The total amount of gas used when this transaction was executed in the block",
                      "example": "1340925"
                    },
                    {
                      "name": "receipt_gas_used",
                      "type": "string",
                      "description": "The amount of gas used by this specific transaction",
                      "example": "1340925"
                    },
                    {
                      "name": "receipt_contract_address",
                      "type": "string",
                      "description": "The contract address created, if this was a contract creation transaction",
                      "example": "0x1d6a4cf64b52f6c73f201839aded7379ce58059c"
                    },
                    {
                      "name": "receipt_root",
                      "type": "string",
                      "description": "The root of the receipt",
                      "example": "string"
                    },
                    {
                      "name": "receipt_status",
                      "type": "string",
                      "description": "The status of the transaction receipt (1 indicates success, 0 indicates failure)",
                      "example": "1",
                      "required": true
                    },
                    {
                      "name": "transaction_fee",
                      "type": "string",
                      "description": "The transaction fee in ETH",
                      "example": "0.00034"
                    },
                    {
                      "name": "block_timestamp",
                      "type": "string",
                      "description": "The timestamp of the block",
                      "example": "2021-04-02T10:07:54.000Z",
                      "required": true
                    },
                    {
                      "name": "block_number",
                      "type": "string",
                      "description": "The block number of the transaction",
                      "example": "12526958",
                      "required": true
                    },
                    {
                      "name": "block_hash",
                      "type": "string",
                      "description": "The hash of the block",
                      "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86",
                      "required": true
                    },
                    {
                      "name": "internal_transactions",
                      "type": "array",
                      "description": "Details of internal transactions within the main transaction",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "transaction_hash",
                            "type": "string",
                            "description": "The hash of the internal transaction",
                            "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
                            "required": true
                          },
                          {
                            "name": "block_number",
                            "type": "string",
                            "description": "The block number of the internal transaction",
                            "example": "12526958",
                            "required": true
                          },
                          {
                            "name": "block_hash",
                            "type": "string",
                            "description": "The hash of the block",
                            "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86",
                            "required": true
                          },
                          {
                            "name": "type",
                            "type": "string",
                            "description": "The type of the internal transaction",
                            "example": "CALL"
                          },
                          {
                            "name": "from",
                            "type": "string",
                            "description": "The address sending the internal transaction",
                            "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf",
                            "required": true
                          },
                          {
                            "name": "to",
                            "type": "string",
                            "description": "The address receiving the internal transaction",
                            "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef",
                            "required": true
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "description": "The value of the internal transaction in wei",
                            "example": "650000000000000000",
                            "required": true
                          },
                          {
                            "name": "gas",
                            "type": "string",
                            "description": "The gas limit provided by the sender",
                            "example": "6721975"
                          },
                          {
                            "name": "gas_used",
                            "type": "string",
                            "description": "The gas used by this specific internal transaction",
                            "example": "6721975"
                          },
                          {
                            "name": "input",
                            "type": "string",
                            "description": "The input data sent along with the internal transaction",
                            "example": "0x"
                          },
                          {
                            "name": "output",
                            "type": "string",
                            "description": "The output data received from the internal transaction",
                            "example": "0x"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "getWalletTransactionsVerbose": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get decoded transactions by wallet",
      "description": "Get native transactions and logs ordered by block number in descending order.",
      "method": "GET",
      "path": "/:address/verbose",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transactions (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the transactions up to this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page). Learn more on cursor pagination [here](/web3-data-api/evm/reference/pagination).",
          "type": "string"
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of native transactions.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
                  },
                  {
                    "name": "nonce",
                    "type": "string",
                    "description": "The nonce",
                    "example": "1848059"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "example": "108"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The from address",
                    "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The to address",
                    "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value sent",
                    "example": "115580000000000000"
                  },
                  {
                    "name": "gas",
                    "type": "string",
                    "example": "30000"
                  },
                  {
                    "name": "gas_price",
                    "type": "string",
                    "description": "The gas price",
                    "example": "52500000000"
                  },
                  {
                    "name": "input",
                    "type": "string",
                    "example": "0x"
                  },
                  {
                    "name": "receipt_cumulative_gas_used",
                    "type": "string",
                    "example": "4923073"
                  },
                  {
                    "name": "receipt_gas_used",
                    "type": "string",
                    "example": "21000"
                  },
                  {
                    "name": "receipt_contract_address",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "receipt_root",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "receipt_status",
                    "type": "string",
                    "example": "1"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": "12386788"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The hash of the block",
                    "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                  },
                  {
                    "name": "logs",
                    "type": "object",
                    "description": "The logs of the transaction",
                    "fields": [
                      {
                        "name": "log_index",
                        "type": "string",
                        "example": "273"
                      },
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"
                      },
                      {
                        "name": "transaction_index",
                        "type": "string",
                        "example": "204"
                      },
                      {
                        "name": "address",
                        "type": "string",
                        "description": "The address of the contract",
                        "example": "0x3105d328c66d8d55092358cf595d54608178e9b5"
                      },
                      {
                        "name": "data",
                        "type": "string",
                        "description": "The data of the log",
                        "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                      },
                      {
                        "name": "topic0",
                        "type": "string",
                        "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                      },
                      {
                        "name": "topic1",
                        "type": "string",
                        "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                      },
                      {
                        "name": "topic2",
                        "type": "string",
                        "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                      },
                      {
                        "name": "topic3",
                        "type": "string",
                        "example": null
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2021-05-07T11:08:35.000Z"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": "12386788"
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The hash of the block",
                        "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                      },
                      {
                        "name": "decoded_event",
                        "type": "object",
                        "description": "The decoded data of the log",
                        "fields": [
                          {
                            "name": "signature",
                            "type": "string",
                            "example": "Transfer(address,address,uint256)"
                          },
                          {
                            "name": "label",
                            "type": "string",
                            "example": "Transfer"
                          },
                          {
                            "name": "type",
                            "type": "string",
                            "example": "event"
                          },
                          {
                            "name": "params",
                            "type": "array",
                            "field": {
                              "type": "object",
                              "fields": [
                                {
                                  "name": "name",
                                  "type": "string",
                                  "example": "from"
                                },
                                {
                                  "name": "value",
                                  "type": "string",
                                  "example": "0x26C5011483Add49801eA8E3Ee354fE013895aCe5"
                                },
                                {
                                  "name": "type",
                                  "type": "string",
                                  "example": "address"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "decoded_call",
                    "type": "object",
                    "description": "The decoded data of the transaction",
                    "fields": [
                      {
                        "name": "signature",
                        "type": "string",
                        "example": "transfer(address,uint256)"
                      },
                      {
                        "name": "label",
                        "type": "string",
                        "example": "transfer"
                      },
                      {
                        "name": "type",
                        "type": "string",
                        "example": "function"
                      },
                      {
                        "name": "params",
                        "type": "array",
                        "field": {
                          "type": "object",
                          "fields": [
                            {
                              "name": "name",
                              "type": "string",
                              "example": "_to"
                            },
                            {
                              "name": "value",
                              "type": "string",
                              "example": "0x1CA455A55108874A95C84620dDA2566c54D17953"
                            },
                            {
                              "name": "type",
                              "type": "string",
                              "example": "address"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "name": "internal_transactions",
                    "type": "object",
                    "description": "The internal transactions of the transaction",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": 12526958
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The block hash",
                        "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                      },
                      {
                        "name": "type",
                        "type": "string",
                        "description": "Call type",
                        "example": "CALL"
                      },
                      {
                        "name": "from",
                        "type": "string",
                        "description": "The sender",
                        "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                      },
                      {
                        "name": "to",
                        "type": "string",
                        "description": "The recipient",
                        "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                      },
                      {
                        "name": "value",
                        "type": "string",
                        "description": "The value that was transfered (in wei)",
                        "example": "650000000000000000"
                      },
                      {
                        "name": "gas",
                        "type": "string",
                        "description": "The gas of the transaction",
                        "example": "6721975"
                      },
                      {
                        "name": "gas_used",
                        "type": "string",
                        "description": "The used gas",
                        "example": "6721975"
                      },
                      {
                        "name": "input",
                        "type": "string",
                        "description": "The input",
                        "example": "0x"
                      },
                      {
                        "name": "output",
                        "type": "string",
                        "description": "The output",
                        "example": "0x"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getInternalTransactions": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get internal transactions by transaction hash",
      "description": "Get the contents of a internal transaction by transaction hash.",
      "method": "GET",
      "path": "/transaction/:transaction_hash/internal-transactions",
      "pathParams": [
        {
          "name": "transaction_hash",
          "description": "The transaction hash",
          "required": true,
          "example": "0xdc85cb1b75fd09c2f6d001fea4aba83764193cbd7881a1fa8ccde350a5681109",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Internal Transaction details by transaction hash"
        }
      ]
    },
    "getTransaction": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get transaction by hash",
      "description": "Get the contents of a transaction by the given transaction hash.",
      "method": "GET",
      "path": "/transaction/:transaction_hash",
      "pathParams": [
        {
          "name": "transaction_hash",
          "description": "The transaction hash",
          "required": true,
          "example": "0xfeda0e8f0d6e54112c28d319c0d303c065d1125c9197bd653682f5fcb0a6c81e",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Transaction details by transaction hash",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "hash",
                "type": "string",
                "description": "The hash of the transaction",
                "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
              },
              {
                "name": "nonce",
                "type": "string",
                "description": "The nonce",
                "example": "1848059"
              },
              {
                "name": "transaction_index",
                "type": "string",
                "example": "108"
              },
              {
                "name": "from_address_entity",
                "type": "string",
                "description": "The from address entity",
                "example": "Opensea"
              },
              {
                "name": "from_address_entity_logo",
                "type": "string",
                "description": "The logo of the from address entity",
                "example": "https://opensea.io/favicon.ico"
              },
              {
                "name": "from_address",
                "type": "string",
                "description": "The from address",
                "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
              },
              {
                "name": "from_address_label",
                "type": "string",
                "description": "The label of the from address",
                "example": "Binance 1"
              },
              {
                "name": "to_address_entity",
                "type": "string",
                "description": "The to address entity",
                "example": "Beaver Build"
              },
              {
                "name": "to_address_entity_logo",
                "type": "string",
                "description": "The logo of the to address entity",
                "example": "https://beaverbuild.com/favicon.ico"
              },
              {
                "name": "to_address",
                "type": "string",
                "description": "The to address",
                "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
              },
              {
                "name": "to_address_label",
                "type": "string",
                "description": "The label of the to address",
                "example": "Binance 2"
              },
              {
                "name": "value",
                "type": "string",
                "description": "The value sent",
                "example": "115580000000000000"
              },
              {
                "name": "gas",
                "type": "string",
                "example": "30000"
              },
              {
                "name": "gas_price",
                "type": "string",
                "description": "The gas price",
                "example": "52500000000"
              },
              {
                "name": "input",
                "type": "string",
                "example": "0x"
              },
              {
                "name": "receipt_cumulative_gas_used",
                "type": "string",
                "example": "4923073"
              },
              {
                "name": "receipt_gas_used",
                "type": "string",
                "example": "21000"
              },
              {
                "name": "receipt_contract_address",
                "type": "string",
                "example": null
              },
              {
                "name": "receipt_root",
                "type": "string",
                "example": null
              },
              {
                "name": "receipt_status",
                "type": "string",
                "example": "1"
              },
              {
                "name": "block_timestamp",
                "type": "string",
                "description": "The block timestamp",
                "example": "2021-05-07T11:08:35.000Z"
              },
              {
                "name": "block_number",
                "type": "string",
                "description": "The block number",
                "example": "12386788"
              },
              {
                "name": "block_hash",
                "type": "string",
                "description": "The hash of the block",
                "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
              },
              {
                "name": "logs",
                "type": "object",
                "description": "The logs of the transaction",
                "fields": [
                  {
                    "name": "log_index",
                    "type": "string",
                    "example": "273"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "example": "204"
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the contract",
                    "example": "0x3105d328c66d8d55092358cf595d54608178e9b5"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "description": "The data of the log",
                    "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                  },
                  {
                    "name": "topic0",
                    "type": "string",
                    "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                  },
                  {
                    "name": "topic1",
                    "type": "string",
                    "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                  },
                  {
                    "name": "topic2",
                    "type": "string",
                    "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                  },
                  {
                    "name": "topic3",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": "12386788"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The hash of the block",
                    "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                  }
                ]
              },
              {
                "name": "internal_transactions",
                "type": "object",
                "description": "The internal transactions of the transaction",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                  },
                  {
                    "name": "type",
                    "type": "string",
                    "description": "Call type",
                    "example": "CALL"
                  },
                  {
                    "name": "from",
                    "type": "string",
                    "description": "The sender",
                    "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "description": "The recipient",
                    "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was transfered (in wei)",
                    "example": "650000000000000000"
                  },
                  {
                    "name": "gas",
                    "type": "string",
                    "description": "The gas of the transaction",
                    "example": "6721975"
                  },
                  {
                    "name": "gas_used",
                    "type": "string",
                    "description": "The used gas",
                    "example": "6721975"
                  },
                  {
                    "name": "input",
                    "type": "string",
                    "description": "The input",
                    "example": "0x"
                  },
                  {
                    "name": "output",
                    "type": "string",
                    "description": "The output",
                    "example": "0x"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTransactionVerbose": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get decoded transaction by hash",
      "description": "Get the contents of a transaction by the given transaction hash.",
      "method": "GET",
      "path": "/transaction/:transaction_hash/verbose",
      "pathParams": [
        {
          "name": "transaction_hash",
          "description": "The transaction hash",
          "required": true,
          "example": "0xfeda0e8f0d6e54112c28d319c0d303c065d1125c9197bd653682f5fcb0a6c81e",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Transaction details by transaction hash",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "hash",
                "type": "string",
                "description": "The hash of the transaction",
                "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
              },
              {
                "name": "nonce",
                "type": "string",
                "description": "The nonce",
                "example": "1848059"
              },
              {
                "name": "transaction_index",
                "type": "string",
                "example": "108"
              },
              {
                "name": "from_address_entity",
                "type": "string",
                "description": "The from address entity",
                "example": "Opensea"
              },
              {
                "name": "from_address_entity_logo",
                "type": "string",
                "description": "The logo of the from address entity",
                "example": "https://opensea.io/favicon.ico"
              },
              {
                "name": "from_address",
                "type": "string",
                "description": "The from address",
                "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
              },
              {
                "name": "from_address_label",
                "type": "string",
                "description": "The label of the from address",
                "example": "Binance 1"
              },
              {
                "name": "to_address_entity",
                "type": "string",
                "description": "The to address entity",
                "example": "Beaver Build"
              },
              {
                "name": "to_address_entity_logo",
                "type": "string",
                "description": "The logo of the to address entity",
                "example": "https://beaverbuild.com/favicon.ico"
              },
              {
                "name": "to_address",
                "type": "string",
                "description": "The to address",
                "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
              },
              {
                "name": "to_address_label",
                "type": "string",
                "description": "The label of the to address",
                "example": "Binance 2"
              },
              {
                "name": "value",
                "type": "string",
                "description": "The value sent",
                "example": "115580000000000000"
              },
              {
                "name": "gas",
                "type": "string",
                "example": "30000"
              },
              {
                "name": "gas_price",
                "type": "string",
                "description": "The gas price",
                "example": "52500000000"
              },
              {
                "name": "input",
                "type": "string",
                "example": "0x"
              },
              {
                "name": "receipt_cumulative_gas_used",
                "type": "string",
                "example": "4923073"
              },
              {
                "name": "receipt_gas_used",
                "type": "string",
                "example": "21000"
              },
              {
                "name": "receipt_contract_address",
                "type": "string",
                "example": null
              },
              {
                "name": "receipt_root",
                "type": "string",
                "example": null
              },
              {
                "name": "receipt_status",
                "type": "string",
                "example": "1"
              },
              {
                "name": "block_timestamp",
                "type": "string",
                "description": "The block timestamp",
                "example": "2021-05-07T11:08:35.000Z"
              },
              {
                "name": "block_number",
                "type": "string",
                "description": "The block number",
                "example": "12386788"
              },
              {
                "name": "block_hash",
                "type": "string",
                "description": "The hash of the block",
                "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
              },
              {
                "name": "logs",
                "type": "object",
                "description": "The logs of the transaction",
                "fields": [
                  {
                    "name": "log_index",
                    "type": "string",
                    "example": "273"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "example": "204"
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the contract",
                    "example": "0x3105d328c66d8d55092358cf595d54608178e9b5"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "description": "The data of the log",
                    "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                  },
                  {
                    "name": "topic0",
                    "type": "string",
                    "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                  },
                  {
                    "name": "topic1",
                    "type": "string",
                    "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                  },
                  {
                    "name": "topic2",
                    "type": "string",
                    "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                  },
                  {
                    "name": "topic3",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": "12386788"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The hash of the block",
                    "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                  },
                  {
                    "name": "decoded_event",
                    "type": "object",
                    "fields": [
                      {
                        "name": "signature",
                        "type": "string",
                        "example": "Transfer(address,address,uint256)"
                      },
                      {
                        "name": "label",
                        "type": "string",
                        "example": "Transfer"
                      },
                      {
                        "name": "type",
                        "type": "string",
                        "example": "event"
                      },
                      {
                        "name": "params",
                        "type": "array",
                        "field": {
                          "type": "object",
                          "fields": [
                            {
                              "name": "name",
                              "type": "string",
                              "example": "from"
                            },
                            {
                              "name": "value",
                              "type": "string",
                              "example": "0x26C5011483Add49801eA8E3Ee354fE013895aCe5"
                            },
                            {
                              "name": "type",
                              "type": "string",
                              "example": "address"
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "name": "decoded_call",
                "type": "object",
                "fields": [
                  {
                    "name": "signature",
                    "type": "string",
                    "example": "transfer(address,uint256)"
                  },
                  {
                    "name": "label",
                    "type": "string",
                    "example": "transfer"
                  },
                  {
                    "name": "type",
                    "type": "string",
                    "example": "function"
                  },
                  {
                    "name": "params",
                    "type": "array",
                    "field": {
                      "type": "object",
                      "fields": [
                        {
                          "name": "name",
                          "type": "string",
                          "example": "_to"
                        },
                        {
                          "name": "value",
                          "type": "string",
                          "example": "0x1CA455A55108874A95C84620dDA2566c54D17953"
                        },
                        {
                          "name": "type",
                          "type": "string",
                          "example": "address"
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "name": "internal_transactions",
                "type": "object",
                "description": "The internal transactions of the transaction",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                  },
                  {
                    "name": "type",
                    "type": "string",
                    "description": "Call type",
                    "example": "CALL"
                  },
                  {
                    "name": "from",
                    "type": "string",
                    "description": "The sender",
                    "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "description": "The recipient",
                    "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was transfered (in wei)",
                    "example": "650000000000000000"
                  },
                  {
                    "name": "gas",
                    "type": "string",
                    "description": "The gas of the transaction",
                    "example": "6721975"
                  },
                  {
                    "name": "gas_used",
                    "type": "string",
                    "description": "The used gas",
                    "example": "6721975"
                  },
                  {
                    "name": "input",
                    "type": "string",
                    "description": "The input",
                    "example": "0x"
                  },
                  {
                    "name": "output",
                    "type": "string",
                    "description": "The output",
                    "example": "0x"
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  },
  "events": {
    "getContractLogs": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get logs by contract",
      "description": "Get the logs for a contract.",
      "method": "GET",
      "path": "/:address/logs",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the contract",
          "required": true,
          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "block_number",
          "description": "The block number\n* Provide the param 'block_number' or ('from_block' and / or 'to_block')\n* If 'block_number' is provided in combination with 'from_block' and / or 'to_block', 'block_number' will be used\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the logs\n* Provide the param 'block_number' or ('from_block' and / or 'to_block')\n* If 'block_number' is provided in combination with 'from_block' and / or 'to_block', 'block_number' will be used\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the logs\n* Provide the param 'block_number' or ('from_block' and / or 'to_block')\n* If 'block_number' is provided in combination with 'from_block' and / or 'to_block', 'block_number' will be used\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the logs (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n* If 'from_date' and the block params are provided, the block params will be used. Please refer to the blocks params sections (block_number,from_block and to_block) on how to use them\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the logs up to this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n* If 'to_date' and the block params are provided, the block params will be used. Please refer to the blocks params sections (block_number,from_block and to_block) on how to use them\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "topic0",
          "description": "topic0",
          "required": true,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the logs for an address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "1"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the contract",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-04-02T10:07:54.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "description": "The data of the log",
                    "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                  },
                  {
                    "name": "topic0",
                    "type": "string",
                    "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                  },
                  {
                    "name": "topic1",
                    "type": "string",
                    "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                  },
                  {
                    "name": "topic2",
                    "type": "string",
                    "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                  },
                  {
                    "name": "topic3",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The Transaction index of the log within the block",
                    "example": 12
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index of the log within the block",
                    "example": 15
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getContractEvents": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get events by contract",
      "description": "Get events for a contract ordered by block number in descending order. [Try it with Swagger](https://deep-index.moralis.io/api-docs-2.1/#/Events/getContractEvents).",
      "method": "POST",
      "path": "/:address/events",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the contract",
          "required": true,
          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the logs\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the logs.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the logs (any format that is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the logs up to this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "topic",
          "description": "The topic of the event",
          "required": true,
          "type": "string"
        },
        {
          "name": "offset",
          "description": "offset",
          "required": false,
          "type": "number"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "example": "DESC",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "ABI of the specific event",
        "type": "json"
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of events by topic"
        }
      ]
    }
  },
  "block": {
    "getBlock": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get block by hash",
      "description": "Get the contents of a block given the block hash.",
      "method": "GET",
      "path": "/block/:block_number_or_hash",
      "pathParams": [
        {
          "name": "block_number_or_hash",
          "description": "The block number or block hash",
          "required": true,
          "example": "18541416",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the contents of a block",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "timestamp",
                "type": "string",
                "description": "The block timestamp",
                "example": "2021-05-07T11:08:35.000Z"
              },
              {
                "name": "number",
                "type": "string",
                "description": "The block number",
                "example": 12386788
              },
              {
                "name": "hash",
                "type": "string",
                "description": "The block hash",
                "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
              },
              {
                "name": "parent_hash",
                "type": "string",
                "description": "The block hash of the parent block",
                "example": "0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045"
              },
              {
                "name": "nonce",
                "type": "string",
                "description": "The nonce",
                "example": "0xedeb2d8fd2b2bdec"
              },
              {
                "name": "sha3_uncles",
                "type": "string",
                "example": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"
              },
              {
                "name": "logs_bloom",
                "type": "string",
                "example": "0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf"
              },
              {
                "name": "transactions_root",
                "type": "string",
                "example": "0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27"
              },
              {
                "name": "state_root",
                "type": "string",
                "example": "0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b"
              },
              {
                "name": "receipts_root",
                "type": "string",
                "example": "0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23"
              },
              {
                "name": "miner",
                "type": "string",
                "description": "The address of the miner",
                "example": "0xea674fdde714fd979de3edf0f56aa9716b898ec8"
              },
              {
                "name": "difficulty",
                "type": "string",
                "description": "The difficulty of the block",
                "example": "7253857437305950"
              },
              {
                "name": "total_difficulty",
                "type": "string",
                "description": "The total difficulty",
                "example": "24325637817906576196890"
              },
              {
                "name": "size",
                "type": "string",
                "description": "The block size",
                "example": "61271"
              },
              {
                "name": "extra_data",
                "type": "string",
                "example": "0x65746865726d696e652d6575726f70652d7765737433"
              },
              {
                "name": "gas_limit",
                "type": "string",
                "description": "The gas limit",
                "example": "14977947"
              },
              {
                "name": "gas_used",
                "type": "string",
                "description": "The gas used",
                "example": "14964688"
              },
              {
                "name": "transaction_count",
                "type": "string",
                "description": "The number of transactions in the block",
                "example": "252"
              },
              {
                "name": "transactions",
                "type": "object",
                "description": "The transactions in the block",
                "fields": [
                  {
                    "name": "hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
                  },
                  {
                    "name": "nonce",
                    "type": "string",
                    "description": "The nonce",
                    "example": "1848059"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "example": "108"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The from address",
                    "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The to address",
                    "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value sent",
                    "example": "115580000000000000"
                  },
                  {
                    "name": "gas",
                    "type": "string",
                    "example": "30000"
                  },
                  {
                    "name": "gas_price",
                    "type": "string",
                    "description": "The gas price",
                    "example": "52500000000"
                  },
                  {
                    "name": "input",
                    "type": "string",
                    "example": "0x"
                  },
                  {
                    "name": "receipt_cumulative_gas_used",
                    "type": "string",
                    "example": "4923073"
                  },
                  {
                    "name": "receipt_gas_used",
                    "type": "string",
                    "example": "21000"
                  },
                  {
                    "name": "receipt_contract_address",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "receipt_root",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "receipt_status",
                    "type": "string",
                    "example": "1"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": "12386788"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The hash of the block",
                    "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                  },
                  {
                    "name": "logs",
                    "type": "object",
                    "description": "The logs of the transaction",
                    "fields": [
                      {
                        "name": "log_index",
                        "type": "string",
                        "example": "273"
                      },
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"
                      },
                      {
                        "name": "transaction_index",
                        "type": "string",
                        "example": "204"
                      },
                      {
                        "name": "address",
                        "type": "string",
                        "description": "The address of the contract",
                        "example": "0x3105d328c66d8d55092358cf595d54608178e9b5"
                      },
                      {
                        "name": "data",
                        "type": "string",
                        "description": "The data of the log",
                        "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                      },
                      {
                        "name": "topic0",
                        "type": "string",
                        "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                      },
                      {
                        "name": "topic1",
                        "type": "string",
                        "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                      },
                      {
                        "name": "topic2",
                        "type": "string",
                        "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                      },
                      {
                        "name": "topic3",
                        "type": "string",
                        "example": null
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2021-05-07T11:08:35.000Z"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": "12386788"
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The hash of the block",
                        "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                      }
                    ]
                  },
                  {
                    "name": "internal_transactions",
                    "type": "object",
                    "description": "The internal transactions of the transaction",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": 12526958
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The block hash",
                        "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                      },
                      {
                        "name": "type",
                        "type": "string",
                        "description": "Call type",
                        "example": "CALL"
                      },
                      {
                        "name": "from",
                        "type": "string",
                        "description": "The sender",
                        "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                      },
                      {
                        "name": "to",
                        "type": "string",
                        "description": "The recipient",
                        "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                      },
                      {
                        "name": "value",
                        "type": "string",
                        "description": "The value that was transfered (in wei)",
                        "example": "650000000000000000"
                      },
                      {
                        "name": "gas",
                        "type": "string",
                        "description": "The gas of the transaction",
                        "example": "6721975"
                      },
                      {
                        "name": "gas_used",
                        "type": "string",
                        "description": "The used gas",
                        "example": "6721975"
                      },
                      {
                        "name": "input",
                        "type": "string",
                        "description": "The input",
                        "example": "0x"
                      },
                      {
                        "name": "output",
                        "type": "string",
                        "description": "The output",
                        "example": "0x"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getDateToBlock": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get block by date",
      "description": "Get the closest block given the date.",
      "method": "GET",
      "path": "/dateToBlock",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "date",
          "description": "Unix date in seconds or a datestring (any format that is accepted by momentjs)",
          "required": true,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the block number and corresponding date and timestamp",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "date",
                "type": "string",
                "description": "The date of the block",
                "example": "2020-01-01T00:00:00+00:00"
              },
              {
                "name": "block",
                "type": "number",
                "description": "The block number",
                "example": 9193266
              },
              {
                "name": "timestamp",
                "type": "number",
                "description": "The timestamp of the block",
                "example": 1577836811
              },
              {
                "name": "block_timestamp",
                "type": "string",
                "description": "The timestamp of the block",
                "example": "2019-12-31T23:59:45.000Z"
              },
              {
                "name": "hash",
                "type": "string",
                "description": "The block hash",
                "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
              },
              {
                "name": "parent_hash",
                "type": "string",
                "description": "The block hash of the parent block",
                "example": "0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045"
              }
            ]
          }
        }
      ]
    },
    "getBlockStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the block stats",
      "description": "Get the stats for a block",
      "method": "GET",
      "path": "/block/:block_number_or_hash/stats",
      "pathParams": [
        {
          "name": "block_number_or_hash",
          "description": "The block number or hash",
          "required": true,
          "type": "string",
          "example": 1023323
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the stats for the wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "transactions",
                "type": "object",
                "description": "Transaction stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of transactions sent by a wallet",
                    "example": "1000"
                  }
                ]
              },
              {
                "name": "nft_transfers",
                "type": "object",
                "description": "NFT transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of NFT transfers of a wallet",
                    "example": "1000"
                  }
                ]
              },
              {
                "name": "token_transfers",
                "type": "object",
                "description": "Token transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of ERC20 token transfers of a wallet",
                    "example": "1000"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getLatestBlockNumber": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get latest block number.",
      "description": "Returns the latest block number for the given chain.",
      "method": "GET",
      "path": "/latestBlockNumber/:chain",
      "pathParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the latest block number.",
          "body": {
            "type": "string",
            "example": "15863321"
          }
        }
      ]
    }
  },
  "utils": {
    "runContractFunction": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Run contract function",
      "description": "Run a given function of a contract ABI and retrieve readonly data. [Try it with Swagger](https://deep-index.moralis.io/api-docs-2.1/#/Utils/runContractFunction).",
      "method": "POST",
      "path": "/:address/function",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the contract",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        },
        {
          "name": "function_name",
          "description": "The function name of the contract",
          "required": true,
          "type": "string"
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "abi",
            "type": "array",
            "description": "The contract ABI",
            "example": [],
            "field": {
              "type": "json"
            }
          },
          {
            "name": "params",
            "type": "json",
            "description": "The params for the given function",
            "example": {}
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns response of the function executed"
        }
      ]
    },
    "web3ApiVersion": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get API version",
      "description": "Get the current version of the Moralis Web3 API.",
      "method": "GET",
      "path": "/web3/version",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Get the current version of the Moralis Web3 API.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "version",
                "type": "string",
                "description": "The version of the API",
                "example": "1.0.0"
              }
            ]
          }
        }
      ]
    },
    "endpointWeights": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get weights of endpoints",
      "description": "Get the cost and rate limit for each API endpoint.",
      "method": "GET",
      "path": "/info/endpointWeights",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "The cost and rate limit for each API endpoint."
        }
      ]
    },
    "contractsReview": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Review contracts",
      "description": "Review contracts as spam or not spam",
      "method": "POST",
      "path": "/contracts-review",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "holesky",
            "0x4268",
            "polygon",
            "0x89",
            "polygon amoy",
            "0x13882",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "linea sepolia",
            "0xe705",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a"
          ]
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "contracts",
            "type": "object",
            "description": "The contracts to be reported",
            "example": [
              {
                "contract_address": "0xa4991609c508b6d4fb7156426db0bd49fe298bd8",
                "report_type": "spam",
                "contract_type": "ERC20",
                "reason": "The contract contains shady code"
              }
            ],
            "fields": [
              {
                "name": "contract_address",
                "type": "string",
                "description": "The contract address",
                "example": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
              },
              {
                "name": "reason",
                "type": "string",
                "description": "The reason for the contract being spam",
                "example": 100
              },
              {
                "name": "report_type",
                "type": "string",
                "description": "This can be spam or not_spam",
                "example": "spam",
                "enum": [
                  "spam",
                  "not_spam"
                ]
              },
              {
                "name": "contract_type",
                "type": "string",
                "description": "This can be ERC20, or NFT",
                "example": "ERC20",
                "enum": [
                  "ERC20",
                  "NFT"
                ]
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns a message acknowledging the report"
        }
      ]
    }
  },
  "resolve": {
    "resolveAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "ENS Lookup by Address",
      "description": "Reverse resolve a given ETH address to its ENS domain.",
      "method": "GET",
      "path": "/resolve/:address/reverse",
      "pathParams": [
        {
          "name": "address",
          "description": "The address to be resolved",
          "required": true,
          "example": "0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns an ENS",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "name",
                "type": "string",
                "description": "Resolved ENS address",
                "example": "Vitalik.eth"
              }
            ]
          }
        }
      ]
    },
    "resolveDomain": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resolve Unstoppable domain",
      "description": "Resolve a specific Unstoppable domain to its address.",
      "method": "GET",
      "path": "/resolve/:domain",
      "pathParams": [
        {
          "name": "domain",
          "description": "The domain to be resolved",
          "required": true,
          "example": "brad.crypto",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "currency",
          "description": "The currency to query",
          "required": false,
          "example": "eth",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns an address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "Resolved domain address",
                "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
              }
            ]
          }
        },
        {
          "status": "404",
          "description": "Returns an address"
        }
      ]
    },
    "resolveAddressToDomain": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resolve Address to Unstoppable domain",
      "description": "Resolve a specific address to its Unstoppable domain",
      "method": "GET",
      "path": "/resolve/:address/domain",
      "pathParams": [
        {
          "name": "address",
          "description": "The address to be resolved",
          "required": true,
          "example": "0x94ef5300cbc0aa600a821ccbc561b057e456ab23",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns an unstoppable domain",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "name",
                "type": "string",
                "description": "Resolved unstoppable domain address",
                "example": "sandy.nft"
              }
            ]
          }
        },
        {
          "status": "404",
          "description": "Returns an unstoppable domain"
        }
      ]
    },
    "resolveENSDomain": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "ENS Lookup by Domain",
      "description": "Resolve a specific ENS domain to its address.",
      "method": "GET",
      "path": "/resolve/ens/:domain",
      "pathParams": [
        {
          "name": "domain",
          "description": "The domain to be resolved",
          "required": true,
          "example": "vitalik.eth",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns an address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "Resolved domain address",
                "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
              }
            ]
          }
        },
        {
          "status": "404",
          "description": "Returns an address"
        }
      ]
    }
  },
  "defi": {
    "getPairReserves": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get DEX token pair reserves",
      "description": "Get the liquidity reserves for a given pair address. Only Uniswap V2 based exchanges supported at the moment.",
      "method": "GET",
      "path": "/:pair_address/reserves",
      "pathParams": [
        {
          "name": "pair_address",
          "description": "The liquidity pair address",
          "required": true,
          "example": "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "chiliz",
            "0x15b38",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number to get the reserves from",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the reserves up to this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the pair reserves"
        }
      ]
    },
    "getPairAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get DEX token pair address",
      "description": "Fetch the pair data of the provided token0+token1 combination.\nThe token0 and token1 options are interchangable (ie. there is no different outcome in \"token0=WETH and token1=USDT\" or \"token0=USDT and token1=WETH\")\n",
      "method": "GET",
      "path": "/:token0_address/:token1_address/pairAddress",
      "pathParams": [
        {
          "name": "token0_address",
          "description": "The token0 address",
          "required": true,
          "example": "0x2b591e99afe9f32eaa6214f7b7629768c40eeb39",
          "type": "string"
        },
        {
          "name": "token1_address",
          "description": "The token1 address",
          "required": true,
          "example": "0xdac17f958d2ee523a2206206994597c13d831ec7",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "gnosis",
            "0x64",
            "chiliz",
            "0x15b38",
            "base",
            "0x2105",
            "optimism",
            "0xa",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number to get the reserves from",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the reserves up to this date (any format that is accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "exchange",
          "description": "The factory name or address of the token exchange",
          "required": true,
          "example": "uniswapv2",
          "type": "string",
          "enum": [
            "uniswapv2",
            "uniswapv3",
            "sushiswapv2",
            "pancakeswapv1",
            "pancakeswapv2",
            "quickswap",
            "quickswapv2",
            "traderjoe",
            "pangolin",
            "spookyswap",
            "vvs",
            "camelotv2"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the pair address of the two tokens.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "token0",
                "type": "json"
              },
              {
                "name": "token1",
                "type": "json"
              },
              {
                "name": "pairAddress",
                "type": "string",
                "example": "0xbbb9bf440d0f686487925fef3b0a0f9aa67753f6"
              }
            ]
          }
        }
      ]
    }
  },
  "ipfs": {
    "uploadFolder": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Upload folder to IPFS",
      "description": "Upload multiple files to IPFS and place them in a folder directory. To use the API, [sign up to Moralis](https://admin.moralis.com/register) and get your API key from the dashboard.\n",
      "method": "POST",
      "path": "/ipfs/uploadFolder",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": false,
        "description": "Array of JSON and Base64 Supported",
        "type": "array",
        "field": {
          "type": "object",
          "fields": [
            {
              "name": "path",
              "type": "string",
              "description": "Path to the file",
              "example": "moralis/logo.jpg",
              "disabled": true
            },
            {
              "name": "content",
              "type": "string",
              "description": "Base64 or JSON",
              "example": "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAApgAAAKYB3X3",
              "disabled": true
            }
          ]
        }
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the path to the uploaded files"
        }
      ]
    }
  },
  "auth": {
    "requestChallengeEvm": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Request EVM challenge",
      "method": "POST",
      "path": "/challenge/request/evm",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Request EVM challenge message.",
        "type": "object",
        "fields": [
          {
            "name": "domain",
            "type": "string",
            "required": true,
            "description": "RFC 4501 dns authority that is requesting the signing.",
            "example": "defi.finance"
          },
          {
            "name": "chainId",
            "type": "string",
            "required": true,
            "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
            "example": 1
          },
          {
            "name": "address",
            "type": "string",
            "required": true,
            "description": "Ethereum address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.",
            "example": "0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B"
          },
          {
            "name": "statement",
            "type": "string",
            "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
            "example": "Please confirm"
          },
          {
            "name": "uri",
            "type": "string",
            "required": true,
            "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
            "example": "https://defi.finance/"
          },
          {
            "name": "expirationTime",
            "type": "string",
            "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
            "example": "2020-01-01T00:00:00.000Z"
          },
          {
            "name": "notBefore",
            "type": "string",
            "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
            "example": "2020-01-01T00:00:00.000Z"
          },
          {
            "name": "resources",
            "type": "array",
            "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by new lines.",
            "example": [
              "https://docs.moralis.io/"
            ],
            "field": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "type": "number",
            "required": true,
            "description": "Time in seconds before the challenge is expired",
            "example": 15
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The back channel challenge containing the id to store on the api and the message to be signed by the user",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string",
                "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
                "example": "fRyt67D3eRss3RrXa"
              },
              {
                "name": "message",
                "type": "string",
                "description": "Message that needs to be signed by the end user",
                "example": "defi.finance wants you to sign in with your Ethereum account:\n0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\n\nPlease confirm\n\nURI: https://defi.finance/\nVersion: 1\nChain ID: 1\nNonce: DbU1DCTmdzR4lg3wi\nIssued At: 2022-06-12T12:15:31.290Z\nExpiration Time: 2020-01-01T00:00:00.000Z\nNot Before: 2020-01-01T00:00:00.000Z\nResources:\n- https://docs.moralis.io/"
              },
              {
                "name": "profileId",
                "type": "string",
                "description": "Unique identifier with a length of 66 characters",
                "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
              }
            ]
          }
        }
      ]
    },
    "verifyChallengeEvm": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Verify EVM challenge",
      "method": "POST",
      "path": "/challenge/verify/evm",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Verify EVM challenge message.",
        "type": "object",
        "fields": [
          {
            "name": "message",
            "type": "string",
            "required": true,
            "description": "Message that needs to be signed by the end user.",
            "example": "defi.finance wants you to sign in with your Ethereum account:\n0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\n\n\nURI: https://defi.finance\nVersion: 1\nChain ID: 1\nNonce: Px7Nh1RPzlCLwqgOb\nIssued At: 2022-11-30T10:20:00.262Z"
          },
          {
            "name": "signature",
            "type": "string",
            "required": true,
            "description": "EIP-191 compliant signature signed by the Ethereum account address requesting authentication.",
            "example": "0xa8f89a58bf9b433d3100f9e41ee35b5e31fb8c7cd62547acb113162ec6f2e4140207e2dfbd4e387e1801ebc7f08a9dd105ac1d22b2e2ff0df5fa8b6d9bdcfe491c"
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The token to be used to call the third party API from the client",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string",
                "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
                "example": "fRyt67D3eRss3RrX"
              },
              {
                "name": "domain",
                "type": "string",
                "description": "RFC 4501 dns authority that is requesting the signing.",
                "example": "defi.finance"
              },
              {
                "name": "chainId",
                "type": "string",
                "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
                "example": 1
              },
              {
                "name": "address",
                "type": "string",
                "description": "Ethereum address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.",
                "example": "0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B"
              },
              {
                "name": "statement",
                "type": "string",
                "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
                "example": "Please confirm"
              },
              {
                "name": "uri",
                "type": "string",
                "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
                "example": "https://defi.finance/"
              },
              {
                "name": "expirationTime",
                "type": "string",
                "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
                "example": "2020-01-01T00:00:00.000Z"
              },
              {
                "name": "notBefore",
                "type": "string",
                "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
                "example": "2020-01-01T00:00:00.000Z"
              },
              {
                "name": "resources",
                "type": "array",
                "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by `\n- `.",
                "example": [
                  "https://docs.moralis.io/"
                ],
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "version",
                "type": "string",
                "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
                "example": "1.0"
              },
              {
                "name": "nonce",
                "type": "string",
                "example": "0x1234567890abcdef0123456789abcdef1234567890abcdef"
              },
              {
                "name": "profileId",
                "type": "string",
                "description": "Unique identifier with a length of 66 characters",
                "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
              }
            ]
          }
        }
      ]
    },
    "requestChallengeSolana": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Request Solana challenge",
      "method": "POST",
      "path": "/challenge/request/solana",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Request Solana challenge message.",
        "type": "object",
        "fields": [
          {
            "name": "domain",
            "type": "string",
            "required": true,
            "description": "RFC 4501 dns authority that is requesting the signing.",
            "example": "defi.finance"
          },
          {
            "name": "network",
            "type": "string",
            "required": true,
            "description": "The network where Contract Accounts must be resolved.",
            "example": "mainnet"
          },
          {
            "name": "address",
            "type": "string",
            "required": true,
            "description": "Solana address with a length of 32 - 44 characters that is used to perform the signing",
            "example": "26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo"
          },
          {
            "name": "statement",
            "type": "string",
            "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
            "example": "Please confirm"
          },
          {
            "name": "uri",
            "type": "string",
            "required": true,
            "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
            "example": "https://defi.finance/"
          },
          {
            "name": "expirationTime",
            "type": "string",
            "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
            "example": "2020-01-01T00:00:00.000Z"
          },
          {
            "name": "notBefore",
            "type": "string",
            "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
            "example": "2020-01-01T00:00:00.000Z"
          },
          {
            "name": "resources",
            "type": "array",
            "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by new lines.",
            "example": [
              "https://docs.moralis.io/"
            ],
            "field": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "type": "number",
            "required": true,
            "description": "Time in seconds before the challenge is expired",
            "example": 15
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The back channel challenge containing the id to store on the api and the message to be signed by the user",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string",
                "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
                "example": "fRyt67D3eRss3RrXa"
              },
              {
                "name": "message",
                "type": "string",
                "description": "Message that needs to be signed by the end user",
                "example": "defi.finance wants you to sign in with your Solana account:\n26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\n\nI am a third party API\n\nURI: http://defi.finance\nVersion: 1\nNetwork: mainnet\nNonce: PYxxb9msdjVXsMQ9x\nIssued At: 2022-08-25T11:02:34.097Z\nExpiration Time: 2022-08-25T11:12:38.243Z\nResources:\n- https://docs.moralis.io/"
              },
              {
                "name": "profileId",
                "type": "string",
                "description": "Unique identifier with a length of 66 characters",
                "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
              }
            ]
          }
        }
      ]
    },
    "verifyChallengeSolana": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Verify Solana challenge",
      "method": "POST",
      "path": "/challenge/verify/solana",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Verify Solana challenge message.",
        "type": "object",
        "fields": [
          {
            "name": "message",
            "type": "string",
            "required": true,
            "description": "Message that needs to be signed by the end user",
            "example": "defi.finance wants you to sign in with your Solana account:\n26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\n\nI am a third party API\n\nURI: http://defi.finance\nVersion: 1\nNetwork: mainnet\nNonce: PYxxb9msdjVXsMQ9x\nIssued At: 2022-08-25T11:02:34.097Z\nExpiration Time: 2022-08-25T11:12:38.243Z\nResources:\n- https://docs.moralis.io/"
          },
          {
            "name": "signature",
            "type": "string",
            "required": true,
            "description": "Base58 signature that needs to be used to verify end user",
            "example": "2pH9DqD5rve2qV4yBDshcAjWd2y8TqMx8BPb7f3KoNnuLEhE5JwjruYi4jaFaD4HN6wriLz2Vdr32kRBAJmHcyny"
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The token to be used to call the third party API from the client",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string",
                "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
                "example": "fRyt67D3eRss3RrX"
              },
              {
                "name": "domain",
                "type": "string",
                "description": "RFC 4501 dns authority that is requesting the signing.",
                "example": "defi.finance"
              },
              {
                "name": "network",
                "type": "string",
                "description": "The network where Contract Accounts must be resolved.",
                "example": "mainnet"
              },
              {
                "name": "address",
                "type": "string",
                "description": "Solana address with a length of 32 - 44 characters that is used to perform the signing",
                "example": "26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo"
              },
              {
                "name": "statement",
                "type": "string",
                "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
                "example": "Please confirm"
              },
              {
                "name": "uri",
                "type": "string",
                "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
                "example": "https://defi.finance/"
              },
              {
                "name": "expirationTime",
                "type": "string",
                "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
                "example": "2020-01-01T00:00:00.000Z"
              },
              {
                "name": "notBefore",
                "type": "string",
                "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
                "example": "2020-01-01T00:00:00.000Z"
              },
              {
                "name": "resources",
                "type": "array",
                "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by `\n- `.",
                "example": [
                  "https://docs.moralis.io/"
                ],
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "version",
                "type": "string",
                "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
                "example": "1.0"
              },
              {
                "name": "nonce",
                "type": "string",
                "example": "0x1234567890abcdef0123456789abcdef1234567890abcdef"
              },
              {
                "name": "profileId",
                "type": "string",
                "description": "Unique identifier with a length of 66 characters",
                "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
              }
            ]
          }
        }
      ]
    },
    "requestChallengeAptos": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Request Aptos challenge",
      "method": "POST",
      "path": "/challenge/request/aptos",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Request Aptos challenge message.",
        "type": "object",
        "fields": [
          {
            "name": "domain",
            "type": "string",
            "required": true,
            "description": "RFC 4501 dns authority that is requesting the signing.",
            "example": "defi.finance"
          },
          {
            "name": "statement",
            "type": "string",
            "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
            "example": "Please confirm"
          },
          {
            "name": "uri",
            "type": "string",
            "required": true,
            "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
            "example": "https://defi.finance/"
          },
          {
            "name": "expirationTime",
            "type": "string",
            "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
            "example": "2020-01-01T00:00:00.000Z"
          },
          {
            "name": "notBefore",
            "type": "string",
            "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
            "example": "2020-01-01T00:00:00.000Z"
          },
          {
            "name": "resources",
            "type": "array",
            "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by new lines.",
            "example": [
              "https://docs.moralis.io/"
            ],
            "field": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "type": "number",
            "required": true,
            "description": "Time in seconds before the challenge is expired",
            "example": 15
          },
          {
            "name": "chainId",
            "type": "string",
            "required": true,
            "description": "Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
            "example": 1
          },
          {
            "name": "address",
            "type": "string",
            "required": true,
            "description": "Aptos address performing the signing conformant.",
            "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
          },
          {
            "name": "publicKey",
            "type": "string",
            "required": true,
            "description": "Aptos public key performing the signing conformant.",
            "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The back channel challenge containing the id to store on the api and the message to be signed by the user",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string",
                "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
                "example": "fRyt67D3eRss3RrXa"
              },
              {
                "name": "profileId",
                "type": "string",
                "description": "Unique identifier with a length of 66 characters",
                "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
              },
              {
                "name": "message",
                "type": "string",
                "description": "Message that needs to be signed by the end user",
                "example": "defi.finance wants you to sign in with your Aptos account:\n0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d\n\nPlease confirm\n\nURI: https://defi.finance/\nVersion: 1\nChain ID: 1\nNonce: DbU1DCTmdzR4lg3wi\nIssued At: 2022-06-12T12:15:31.290Z\nExpiration Time: 2020-01-01T00:00:00.000Z\nNot Before: 2020-01-01T00:00:00.000Z\nResources:\n- https://docs.moralis.io/"
              }
            ]
          }
        }
      ]
    },
    "verifyChallengeAptos": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Verify Aptos challenge",
      "method": "POST",
      "path": "/challenge/verify/aptos",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Verify Aptos challenge message.",
        "type": "object",
        "fields": [
          {
            "name": "message",
            "type": "string",
            "required": true,
            "description": "Message that needs to be signed by the end user.",
            "example": "defi.finance wants you to sign in with your Aptos account:\n0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d\n\n\nURI: https://defi.finance\nVersion: 1\nChain ID: 1\nNonce: Px7Nh1RPzlCLwqgOb\nIssued At: 2022-11-30T10:20:00.262Z"
          },
          {
            "name": "signature",
            "type": "string",
            "required": true,
            "description": "EIP-191 compliant signature signed by the Aptos account address requesting authentication.",
            "example": "0xa8f89a58bf9b433d3100f9e41ee35b5e31fb8c7cd62547acb113162ec6f2e4140207e2dfbd4e387e1801ebc7f08a9dd105ac1d22b2e2ff0df5fa8b6d9bdcfe491c"
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The token to be used to call the third party API from the client",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string",
                "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
                "example": "fRyt67D3eRss3RrX"
              },
              {
                "name": "domain",
                "type": "string",
                "description": "RFC 4501 dns authority that is requesting the signing.",
                "example": "defi.finance"
              },
              {
                "name": "statement",
                "type": "string",
                "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
                "example": "Please confirm"
              },
              {
                "name": "uri",
                "type": "string",
                "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
                "example": "https://defi.finance/"
              },
              {
                "name": "expirationTime",
                "type": "string",
                "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
                "example": "2020-01-01T00:00:00.000Z"
              },
              {
                "name": "notBefore",
                "type": "string",
                "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
                "example": "2020-01-01T00:00:00.000Z"
              },
              {
                "name": "resources",
                "type": "array",
                "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by `\n- `.",
                "example": [
                  "https://docs.moralis.io/"
                ],
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "version",
                "type": "string",
                "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
                "example": "1.0"
              },
              {
                "name": "nonce",
                "type": "string",
                "example": "0x1234567890abcdef0123456789abcdef1234567890abcdef"
              },
              {
                "name": "profileId",
                "type": "string",
                "description": "Unique identifier with a length of 66 characters",
                "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
              },
              {
                "name": "chainId",
                "type": "string",
                "description": "Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
                "example": 1
              },
              {
                "name": "address",
                "type": "string",
                "description": "Aptos address performing the signing conformant.",
                "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
              },
              {
                "name": "publicKey",
                "type": "string",
                "description": "Aptos public key performing the signing conformant.",
                "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
              }
            ]
          }
        }
      ]
    },
    "getAddresses": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Get addresses that are bound to the specific profileId",
      "method": "GET",
      "path": "/profile/:profileId/addresses",
      "pathParams": [
        {
          "name": "profileId",
          "description": "Unique identifier with a length of 66 characters",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "201",
          "description": "The addresses that are bound to the speicifc profileId"
        }
      ]
    },
    "requestBind": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Request bind between profile of two addresses",
      "description": "Request for message to bind profile that is belong to the two addresses<br>\n        All profiles under the addresses will be bound and new profile will be generated.",
      "method": "POST",
      "path": "/bind/request",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The two addresses that are required to be bind.",
        "type": "object",
        "fields": [
          {
            "name": "addresses",
            "type": "object",
            "required": true,
            "description": "An array of addresses that needs to be bind",
            "fields": [
              {
                "name": "blockchainType",
                "type": "string",
                "required": true,
                "description": "The chain in which the address belongs to",
                "example": "evm"
              },
              {
                "name": "address",
                "type": "string",
                "required": true,
                "description": "Address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.",
                "example": "0x57af6B90c2237d2F888bf4CAe56f25FE1b14e531"
              },
              {
                "name": "publicKey",
                "type": "string",
                "description": "Public key performing the signing conformant. (This is only needed for Aptos address)",
                "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The messages that is required to be signed by each of the address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "messages",
                "type": "array",
                "description": "Message that needs to be signed by the end user",
                "example": [
                  "Please sign this message to bind:\nProfile Ids:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\n\nwith\n\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nNonce: 5pXWu7aGkY2J7II0X",
                  "Please sign this message to bind:\nProfile Ids:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\n\nwith\n\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nNonce: 5pXWu7aGkY2J7II0X"
                ],
                "field": {
                  "type": "string"
                }
              }
            ]
          }
        }
      ]
    },
    "verifyRequestBind": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Verify bind request",
      "method": "POST",
      "path": "/bind/request/verify",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Messages and its signatures that is used for verification",
        "type": "object",
        "fields": [
          {
            "name": "verifications",
            "type": "object",
            "required": true,
            "description": "Message that needs to be signed by the end user",
            "fields": [
              {
                "name": "message",
                "type": "string",
                "required": true,
                "description": "Message that needs to be signed by the end user",
                "example": "Please sign this message to bind:\nProfile Ids:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\n\nwith\n\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nNonce: 5pXWu7aGkY2J7II0X"
              },
              {
                "name": "signature",
                "type": "string",
                "required": true,
                "description": "EIP-191 compliant signature signed by the Ethereum account address requesting authentication.",
                "example": "0xc4f2f59d80e036ecab4eaaac5d4ee713ab94264ca584839c98b5743c4f6777322038225a4bc1e0f13b8382166816737369f26bd66f0479cfa80d4c52c02eb2cb1b"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The profileId that all the addresses have been bind into.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "profileId",
                "type": "string",
                "description": "Unique identifier with a length of 66 characters",
                "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
              }
            ]
          }
        }
      ]
    },
    "removeBind": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Request to remove bind of an address from a profile",
      "method": "POST",
      "path": "/bind/remove",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The address that is required to be removed from the bind of the profileId.",
        "type": "object",
        "fields": [
          {
            "name": "blockchainType",
            "type": "string",
            "required": true,
            "description": "The chain in which the address belongs to",
            "example": "evm"
          },
          {
            "name": "address",
            "type": "string",
            "required": true,
            "description": "Address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.",
            "example": "0x57af6B90c2237d2F888bf4CAe56f25FE1b14e531"
          },
          {
            "name": "publicKey",
            "type": "string",
            "description": "Public key performing the signing conformant. (This is only needed for Aptos address)",
            "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
          },
          {
            "name": "profileId",
            "type": "string",
            "required": true,
            "description": "Unique identifier with a length of 66 characters",
            "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The messages that is required to be signed by each of the address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "message",
                "type": "string",
                "description": "Message that needs to be signed by the end user",
                "example": "Please sign this message to unbind:\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nfrom\nProfile Id:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\nNonce: 5pXWu7aGkY2J7II0X"
              }
            ]
          }
        }
      ]
    },
    "verifyRemoveBind": {
      "apiHost": "https://authapi.moralis.io",
      "summary": "Verify remove bind request",
      "method": "POST",
      "path": "/bind/remove/verify",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Messages and its signatures that is used for verification",
        "type": "object",
        "fields": [
          {
            "name": "message",
            "type": "string",
            "required": true,
            "description": "Message that needs to be signed by the end user",
            "example": "Please sign this message to unbind:\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nfrom\nProfile Id:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\nNonce: 5pXWu7aGkY2J7II0X"
          },
          {
            "name": "signature",
            "type": "string",
            "required": true,
            "description": "EIP-191 compliant signature signed by the Ethereum account address requesting authentication.",
            "example": "0xc4f2f59d80e036ecab4eaaac5d4ee713ab94264ca584839c98b5743c4f6777322038225a4bc1e0f13b8382166816737369f26bd66f0479cfa80d4c52c02eb2cb1b"
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": "The new profileId that is being generated for this address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "profileId",
                "type": "string",
                "description": "Unique identifier with a length of 66 characters",
                "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
              }
            ]
          }
        }
      ]
    }
  },
  "streams": {
    "GetStreams": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get streams",
      "description": "Get all the evm streams for the current project based on the project api-key .",
      "method": "GET",
      "path": "/streams/evm",
      "pathParams": [],
      "queryParams": [
        {
          "name": "limit",
          "description": "Limit response results max value 100",
          "required": true,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "Cursor for fetching next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "status",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "object",
                "description": "Array of project Streams",
                "fields": [
                  {
                    "name": "webhookUrl",
                    "type": "string",
                    "description": "Webhook URL where moralis will send the POST request."
                  },
                  {
                    "name": "description",
                    "type": "string",
                    "description": "A description for this stream"
                  },
                  {
                    "name": "tag",
                    "type": "string",
                    "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                  },
                  {
                    "name": "topic0",
                    "type": "array",
                    "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
                    "field": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "allAddresses",
                    "type": "boolean",
                    "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                  },
                  {
                    "name": "includeNativeTxs",
                    "type": "boolean",
                    "description": "Include or not native transactions defaults to false"
                  },
                  {
                    "name": "includeContractLogs",
                    "type": "boolean",
                    "description": "Include or not logs of contract interactions defaults to false"
                  },
                  {
                    "name": "includeInternalTxs",
                    "type": "boolean",
                    "description": "Include or not include internal transactions defaults to false"
                  },
                  {
                    "name": "includeAllTxLogs",
                    "type": "boolean",
                    "description": "Include all logs if atleast one value in tx or log matches stream config"
                  },
                  {
                    "name": "getNativeBalances",
                    "type": "object",
                    "description": "Include native balances for each address in the webhook",
                    "fields": [
                      {
                        "name": "selectors",
                        "type": "array",
                        "field": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "type",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "abi"
                  },
                  {
                    "name": "advancedOptions"
                  },
                  {
                    "name": "chainIds",
                    "type": "array",
                    "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
                    "field": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "filterPossibleSpamAddresses",
                    "type": "boolean",
                    "description": "Indicator if it is a demo stream"
                  },
                  {
                    "name": "demo",
                    "type": "boolean",
                    "description": "Filter possible spam addresses"
                  },
                  {
                    "name": "triggers",
                    "type": "object",
                    "description": "triggers",
                    "fields": [
                      {
                        "name": "type",
                        "type": "string"
                      },
                      {
                        "name": "contractAddress",
                        "type": "string"
                      },
                      {
                        "name": "inputs",
                        "type": "array",
                        "field": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "items": {},
                              "type": "array"
                            }
                          ]
                        }
                      },
                      {
                        "name": "functionAbi",
                        "type": "object",
                        "description": "The abi to parse the log object of the contract",
                        "properties": {
                          "anonymous": {
                            "type": "boolean"
                          },
                          "constant": {
                            "type": "boolean"
                          },
                          "inputs": {
                            "items": {
                              "$ref": "#/components/schemas/AbiInput"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          },
                          "outputs": {
                            "items": {
                              "$ref": "#/components/schemas/AbiOutput"
                            },
                            "type": "array"
                          },
                          "payable": {
                            "type": "boolean"
                          },
                          "stateMutability": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "gas": {
                            "type": "number",
                            "format": "double"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false,
                        "example": {}
                      },
                      {
                        "name": "topic0",
                        "type": "string"
                      },
                      {
                        "name": "callFrom",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "id",
                    "type": "string",
                    "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                    "format": "uuid",
                    "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                  },
                  {
                    "name": "status",
                    "type": "string",
                    "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                    "enum": [
                      "active",
                      "paused",
                      "error",
                      "terminated"
                    ],
                    "example": {}
                  },
                  {
                    "name": "statusMessage",
                    "type": "string",
                    "description": "Description of current status of stream."
                  },
                  {
                    "name": "updatedAt",
                    "type": "string",
                    "description": "Last Updated Date."
                  },
                  {
                    "name": "amountOfAddresses",
                    "type": "number",
                    "description": "Amount of Addresses."
                  }
                ]
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "Cursor for fetching next page"
              },
              {
                "name": "total",
                "type": "number",
                "description": "Total count of streams on the project"
              }
            ]
          }
        }
      ]
    },
    "CreateStream": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Create stream",
      "description": "Creates a new evm stream.",
      "method": "PUT",
      "path": "/streams/evm",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide a Stream Model",
        "type": "object",
        "fields": [
          {
            "name": "webhookUrl",
            "type": "string",
            "description": "Webhook URL where moralis will send the POST request."
          },
          {
            "name": "description",
            "type": "string",
            "description": "A description for this stream"
          },
          {
            "name": "tag",
            "type": "string",
            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
          },
          {
            "name": "topic0",
            "type": "array",
            "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
            "field": {
              "type": "string"
            }
          },
          {
            "name": "allAddresses",
            "type": "boolean",
            "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
          },
          {
            "name": "includeNativeTxs",
            "type": "boolean",
            "description": "Include or not native transactions defaults to false"
          },
          {
            "name": "includeContractLogs",
            "type": "boolean",
            "description": "Include or not logs of contract interactions defaults to false"
          },
          {
            "name": "includeInternalTxs",
            "type": "boolean",
            "description": "Include or not include internal transactions defaults to false"
          },
          {
            "name": "includeAllTxLogs",
            "type": "boolean",
            "description": "Include all logs if atleast one value in tx or log matches stream config"
          },
          {
            "name": "getNativeBalances",
            "type": "object",
            "description": "Include native balances for each address in the webhook",
            "fields": [
              {
                "name": "selectors",
                "type": "array",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "abi"
          },
          {
            "name": "advancedOptions"
          },
          {
            "name": "chainIds",
            "type": "array",
            "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
            "field": {
              "type": "string"
            }
          },
          {
            "name": "filterPossibleSpamAddresses",
            "type": "boolean",
            "description": "Indicator if it is a demo stream"
          },
          {
            "name": "demo",
            "type": "boolean",
            "description": "Filter possible spam addresses"
          },
          {
            "name": "triggers",
            "type": "object",
            "description": "triggers",
            "fields": [
              {
                "name": "type",
                "type": "string"
              },
              {
                "name": "contractAddress",
                "type": "string"
              },
              {
                "name": "inputs",
                "type": "array",
                "field": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "items": {},
                      "type": "array"
                    }
                  ]
                }
              },
              {
                "name": "functionAbi",
                "type": "object",
                "description": "The abi to parse the log object of the contract",
                "properties": {
                  "anonymous": {
                    "type": "boolean"
                  },
                  "constant": {
                    "type": "boolean"
                  },
                  "inputs": {
                    "items": {
                      "$ref": "#/components/schemas/AbiInput"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  },
                  "outputs": {
                    "items": {
                      "$ref": "#/components/schemas/AbiOutput"
                    },
                    "type": "array"
                  },
                  "payable": {
                    "type": "boolean"
                  },
                  "stateMutability": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "gas": {
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false,
                "example": {}
              },
              {
                "name": "topic0",
                "type": "string"
              },
              {
                "name": "callFrom",
                "type": "string"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "webhookUrl",
                "type": "string",
                "description": "Webhook URL where moralis will send the POST request."
              },
              {
                "name": "description",
                "type": "string",
                "description": "A description for this stream"
              },
              {
                "name": "tag",
                "type": "string",
                "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
              },
              {
                "name": "topic0",
                "type": "array",
                "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "allAddresses",
                "type": "boolean",
                "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
              },
              {
                "name": "includeNativeTxs",
                "type": "boolean",
                "description": "Include or not native transactions defaults to false"
              },
              {
                "name": "includeContractLogs",
                "type": "boolean",
                "description": "Include or not logs of contract interactions defaults to false"
              },
              {
                "name": "includeInternalTxs",
                "type": "boolean",
                "description": "Include or not include internal transactions defaults to false"
              },
              {
                "name": "includeAllTxLogs",
                "type": "boolean",
                "description": "Include all logs if atleast one value in tx or log matches stream config"
              },
              {
                "name": "getNativeBalances",
                "type": "object",
                "description": "Include native balances for each address in the webhook",
                "fields": [
                  {
                    "name": "selectors",
                    "type": "array",
                    "field": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "type",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "abi"
              },
              {
                "name": "advancedOptions"
              },
              {
                "name": "chainIds",
                "type": "array",
                "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "filterPossibleSpamAddresses",
                "type": "boolean",
                "description": "Indicator if it is a demo stream"
              },
              {
                "name": "demo",
                "type": "boolean",
                "description": "Filter possible spam addresses"
              },
              {
                "name": "triggers",
                "type": "object",
                "description": "triggers",
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "contractAddress",
                    "type": "string"
                  },
                  {
                    "name": "inputs",
                    "type": "array",
                    "field": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {},
                          "type": "array"
                        }
                      ]
                    }
                  },
                  {
                    "name": "functionAbi",
                    "type": "object",
                    "description": "The abi to parse the log object of the contract",
                    "properties": {
                      "anonymous": {
                        "type": "boolean"
                      },
                      "constant": {
                        "type": "boolean"
                      },
                      "inputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiInput"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "outputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiOutput"
                        },
                        "type": "array"
                      },
                      "payable": {
                        "type": "boolean"
                      },
                      "stateMutability": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "gas": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "example": {}
                  },
                  {
                    "name": "topic0",
                    "type": "string"
                  },
                  {
                    "name": "callFrom",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "type": "string",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "format": "uuid",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
              },
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string",
                "description": "Description of current status of stream."
              },
              {
                "name": "updatedAt",
                "type": "string",
                "description": "Last Updated Date."
              },
              {
                "name": "amountOfAddresses",
                "type": "number",
                "description": "Amount of Addresses."
              }
            ]
          }
        }
      ]
    },
    "GetStream": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get a specific evm stream.",
      "description": "Get a specific evm stream.",
      "method": "GET",
      "path": "/streams/evm/:id",
      "pathParams": [
        {
          "name": "id",
          "description": "The id of the stream to get",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "webhookUrl",
                "type": "string",
                "description": "Webhook URL where moralis will send the POST request."
              },
              {
                "name": "description",
                "type": "string",
                "description": "A description for this stream"
              },
              {
                "name": "tag",
                "type": "string",
                "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
              },
              {
                "name": "topic0",
                "type": "array",
                "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "allAddresses",
                "type": "boolean",
                "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
              },
              {
                "name": "includeNativeTxs",
                "type": "boolean",
                "description": "Include or not native transactions defaults to false"
              },
              {
                "name": "includeContractLogs",
                "type": "boolean",
                "description": "Include or not logs of contract interactions defaults to false"
              },
              {
                "name": "includeInternalTxs",
                "type": "boolean",
                "description": "Include or not include internal transactions defaults to false"
              },
              {
                "name": "includeAllTxLogs",
                "type": "boolean",
                "description": "Include all logs if atleast one value in tx or log matches stream config"
              },
              {
                "name": "getNativeBalances",
                "type": "object",
                "description": "Include native balances for each address in the webhook",
                "fields": [
                  {
                    "name": "selectors",
                    "type": "array",
                    "field": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "type",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "abi"
              },
              {
                "name": "advancedOptions"
              },
              {
                "name": "chainIds",
                "type": "array",
                "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "filterPossibleSpamAddresses",
                "type": "boolean",
                "description": "Indicator if it is a demo stream"
              },
              {
                "name": "demo",
                "type": "boolean",
                "description": "Filter possible spam addresses"
              },
              {
                "name": "triggers",
                "type": "object",
                "description": "triggers",
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "contractAddress",
                    "type": "string"
                  },
                  {
                    "name": "inputs",
                    "type": "array",
                    "field": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {},
                          "type": "array"
                        }
                      ]
                    }
                  },
                  {
                    "name": "functionAbi",
                    "type": "object",
                    "description": "The abi to parse the log object of the contract",
                    "properties": {
                      "anonymous": {
                        "type": "boolean"
                      },
                      "constant": {
                        "type": "boolean"
                      },
                      "inputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiInput"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "outputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiOutput"
                        },
                        "type": "array"
                      },
                      "payable": {
                        "type": "boolean"
                      },
                      "stateMutability": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "gas": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "example": {}
                  },
                  {
                    "name": "topic0",
                    "type": "string"
                  },
                  {
                    "name": "callFrom",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "type": "string",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "format": "uuid",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
              },
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string",
                "description": "Description of current status of stream."
              },
              {
                "name": "updatedAt",
                "type": "string",
                "description": "Last Updated Date."
              },
              {
                "name": "amountOfAddresses",
                "type": "number",
                "description": "Amount of Addresses."
              }
            ]
          }
        }
      ]
    },
    "UpdateStream": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Update stream",
      "description": "Updates a specific evm stream.",
      "method": "POST",
      "path": "/streams/evm/:id",
      "pathParams": [
        {
          "name": "id",
          "description": "The id of the stream to update",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide a Stream Model",
        "type": "object",
        "fields": [
          {
            "name": "webhookUrl",
            "type": "string",
            "description": "Webhook URL where moralis will send the POST request."
          },
          {
            "name": "description",
            "type": "string",
            "description": "A description for this stream"
          },
          {
            "name": "tag",
            "type": "string",
            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
          },
          {
            "name": "topic0",
            "type": "array",
            "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
            "field": {
              "type": "string"
            }
          },
          {
            "name": "allAddresses",
            "type": "boolean",
            "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
          },
          {
            "name": "includeNativeTxs",
            "type": "boolean",
            "description": "Include or not native transactions defaults to false"
          },
          {
            "name": "includeContractLogs",
            "type": "boolean",
            "description": "Include or not logs of contract interactions defaults to false"
          },
          {
            "name": "includeInternalTxs",
            "type": "boolean",
            "description": "Include or not include internal transactions defaults to false"
          },
          {
            "name": "includeAllTxLogs",
            "type": "boolean",
            "description": "Include all logs if atleast one value in tx or log matches stream config"
          },
          {
            "name": "getNativeBalances",
            "type": "object",
            "description": "Include native balances for each address in the webhook",
            "fields": [
              {
                "name": "selectors",
                "type": "array",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "abi"
          },
          {
            "name": "advancedOptions"
          },
          {
            "name": "chainIds",
            "type": "array",
            "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
            "field": {
              "type": "string"
            }
          },
          {
            "name": "filterPossibleSpamAddresses",
            "type": "boolean",
            "description": "Indicator if it is a demo stream"
          },
          {
            "name": "demo",
            "type": "boolean",
            "description": "Filter possible spam addresses"
          },
          {
            "name": "triggers",
            "type": "object",
            "description": "triggers",
            "fields": [
              {
                "name": "type",
                "type": "string"
              },
              {
                "name": "contractAddress",
                "type": "string"
              },
              {
                "name": "inputs",
                "type": "array",
                "field": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "items": {},
                      "type": "array"
                    }
                  ]
                }
              },
              {
                "name": "functionAbi",
                "type": "object",
                "description": "The abi to parse the log object of the contract",
                "properties": {
                  "anonymous": {
                    "type": "boolean"
                  },
                  "constant": {
                    "type": "boolean"
                  },
                  "inputs": {
                    "items": {
                      "$ref": "#/components/schemas/AbiInput"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  },
                  "outputs": {
                    "items": {
                      "$ref": "#/components/schemas/AbiOutput"
                    },
                    "type": "array"
                  },
                  "payable": {
                    "type": "boolean"
                  },
                  "stateMutability": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "gas": {
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false,
                "example": {}
              },
              {
                "name": "topic0",
                "type": "string"
              },
              {
                "name": "callFrom",
                "type": "string"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "webhookUrl",
                "type": "string",
                "description": "Webhook URL where moralis will send the POST request."
              },
              {
                "name": "description",
                "type": "string",
                "description": "A description for this stream"
              },
              {
                "name": "tag",
                "type": "string",
                "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
              },
              {
                "name": "topic0",
                "type": "array",
                "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "allAddresses",
                "type": "boolean",
                "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
              },
              {
                "name": "includeNativeTxs",
                "type": "boolean",
                "description": "Include or not native transactions defaults to false"
              },
              {
                "name": "includeContractLogs",
                "type": "boolean",
                "description": "Include or not logs of contract interactions defaults to false"
              },
              {
                "name": "includeInternalTxs",
                "type": "boolean",
                "description": "Include or not include internal transactions defaults to false"
              },
              {
                "name": "includeAllTxLogs",
                "type": "boolean",
                "description": "Include all logs if atleast one value in tx or log matches stream config"
              },
              {
                "name": "getNativeBalances",
                "type": "object",
                "description": "Include native balances for each address in the webhook",
                "fields": [
                  {
                    "name": "selectors",
                    "type": "array",
                    "field": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "type",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "abi"
              },
              {
                "name": "advancedOptions"
              },
              {
                "name": "chainIds",
                "type": "array",
                "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "filterPossibleSpamAddresses",
                "type": "boolean",
                "description": "Indicator if it is a demo stream"
              },
              {
                "name": "demo",
                "type": "boolean",
                "description": "Filter possible spam addresses"
              },
              {
                "name": "triggers",
                "type": "object",
                "description": "triggers",
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "contractAddress",
                    "type": "string"
                  },
                  {
                    "name": "inputs",
                    "type": "array",
                    "field": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {},
                          "type": "array"
                        }
                      ]
                    }
                  },
                  {
                    "name": "functionAbi",
                    "type": "object",
                    "description": "The abi to parse the log object of the contract",
                    "properties": {
                      "anonymous": {
                        "type": "boolean"
                      },
                      "constant": {
                        "type": "boolean"
                      },
                      "inputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiInput"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "outputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiOutput"
                        },
                        "type": "array"
                      },
                      "payable": {
                        "type": "boolean"
                      },
                      "stateMutability": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "gas": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "example": {}
                  },
                  {
                    "name": "topic0",
                    "type": "string"
                  },
                  {
                    "name": "callFrom",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "type": "string",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "format": "uuid",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
              },
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string",
                "description": "Description of current status of stream."
              },
              {
                "name": "updatedAt",
                "type": "string",
                "description": "Last Updated Date."
              },
              {
                "name": "amountOfAddresses",
                "type": "number",
                "description": "Amount of Addresses."
              }
            ]
          }
        }
      ]
    },
    "DeleteStream": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Delete stream",
      "description": "Delete a specific evm stream.",
      "method": "DELETE",
      "path": "/streams/evm/:id",
      "pathParams": [
        {
          "name": "id",
          "description": "The id of the stream to delete",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "webhookUrl",
                "type": "string",
                "description": "Webhook URL where moralis will send the POST request."
              },
              {
                "name": "description",
                "type": "string",
                "description": "A description for this stream"
              },
              {
                "name": "tag",
                "type": "string",
                "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
              },
              {
                "name": "topic0",
                "type": "array",
                "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "allAddresses",
                "type": "boolean",
                "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
              },
              {
                "name": "includeNativeTxs",
                "type": "boolean",
                "description": "Include or not native transactions defaults to false"
              },
              {
                "name": "includeContractLogs",
                "type": "boolean",
                "description": "Include or not logs of contract interactions defaults to false"
              },
              {
                "name": "includeInternalTxs",
                "type": "boolean",
                "description": "Include or not include internal transactions defaults to false"
              },
              {
                "name": "includeAllTxLogs",
                "type": "boolean",
                "description": "Include all logs if atleast one value in tx or log matches stream config"
              },
              {
                "name": "getNativeBalances",
                "type": "object",
                "description": "Include native balances for each address in the webhook",
                "fields": [
                  {
                    "name": "selectors",
                    "type": "array",
                    "field": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "type",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "abi"
              },
              {
                "name": "advancedOptions"
              },
              {
                "name": "chainIds",
                "type": "array",
                "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "filterPossibleSpamAddresses",
                "type": "boolean",
                "description": "Indicator if it is a demo stream"
              },
              {
                "name": "demo",
                "type": "boolean",
                "description": "Filter possible spam addresses"
              },
              {
                "name": "triggers",
                "type": "object",
                "description": "triggers",
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "contractAddress",
                    "type": "string"
                  },
                  {
                    "name": "inputs",
                    "type": "array",
                    "field": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {},
                          "type": "array"
                        }
                      ]
                    }
                  },
                  {
                    "name": "functionAbi",
                    "type": "object",
                    "description": "The abi to parse the log object of the contract",
                    "properties": {
                      "anonymous": {
                        "type": "boolean"
                      },
                      "constant": {
                        "type": "boolean"
                      },
                      "inputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiInput"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "outputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiOutput"
                        },
                        "type": "array"
                      },
                      "payable": {
                        "type": "boolean"
                      },
                      "stateMutability": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "gas": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "example": {}
                  },
                  {
                    "name": "topic0",
                    "type": "string"
                  },
                  {
                    "name": "callFrom",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "type": "string",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "format": "uuid",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
              },
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string",
                "description": "Description of current status of stream."
              },
              {
                "name": "updatedAt",
                "type": "string",
                "description": "Last Updated Date."
              },
              {
                "name": "amountOfAddresses",
                "type": "number",
                "description": "Amount of Addresses."
              }
            ]
          }
        }
      ]
    },
    "DuplicateStream": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Duplicate stream",
      "description": "Duplicate a specific evm stream.",
      "method": "POST",
      "path": "/streams/evm/:id/duplicate",
      "pathParams": [
        {
          "name": "id",
          "description": "The id of the stream to duplicate",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "webhookUrl",
                "type": "string",
                "description": "Webhook URL where moralis will send the POST request."
              },
              {
                "name": "description",
                "type": "string",
                "description": "A description for this stream"
              },
              {
                "name": "tag",
                "type": "string",
                "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
              },
              {
                "name": "topic0",
                "type": "array",
                "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "allAddresses",
                "type": "boolean",
                "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
              },
              {
                "name": "includeNativeTxs",
                "type": "boolean",
                "description": "Include or not native transactions defaults to false"
              },
              {
                "name": "includeContractLogs",
                "type": "boolean",
                "description": "Include or not logs of contract interactions defaults to false"
              },
              {
                "name": "includeInternalTxs",
                "type": "boolean",
                "description": "Include or not include internal transactions defaults to false"
              },
              {
                "name": "includeAllTxLogs",
                "type": "boolean",
                "description": "Include all logs if atleast one value in tx or log matches stream config"
              },
              {
                "name": "getNativeBalances",
                "type": "object",
                "description": "Include native balances for each address in the webhook",
                "fields": [
                  {
                    "name": "selectors",
                    "type": "array",
                    "field": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "type",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "abi"
              },
              {
                "name": "advancedOptions"
              },
              {
                "name": "chainIds",
                "type": "array",
                "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "filterPossibleSpamAddresses",
                "type": "boolean",
                "description": "Indicator if it is a demo stream"
              },
              {
                "name": "demo",
                "type": "boolean",
                "description": "Filter possible spam addresses"
              },
              {
                "name": "triggers",
                "type": "object",
                "description": "triggers",
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "contractAddress",
                    "type": "string"
                  },
                  {
                    "name": "inputs",
                    "type": "array",
                    "field": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {},
                          "type": "array"
                        }
                      ]
                    }
                  },
                  {
                    "name": "functionAbi",
                    "type": "object",
                    "description": "The abi to parse the log object of the contract",
                    "properties": {
                      "anonymous": {
                        "type": "boolean"
                      },
                      "constant": {
                        "type": "boolean"
                      },
                      "inputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiInput"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "outputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiOutput"
                        },
                        "type": "array"
                      },
                      "payable": {
                        "type": "boolean"
                      },
                      "stateMutability": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "gas": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "example": {}
                  },
                  {
                    "name": "topic0",
                    "type": "string"
                  },
                  {
                    "name": "callFrom",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "type": "string",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "format": "uuid",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
              },
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string",
                "description": "Description of current status of stream."
              },
              {
                "name": "updatedAt",
                "type": "string",
                "description": "Last Updated Date."
              },
              {
                "name": "amountOfAddresses",
                "type": "number",
                "description": "Amount of Addresses."
              }
            ]
          }
        }
      ]
    },
    "UpdateStreamStatus": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Update stream status",
      "description": "Updates the status of specific evm stream.",
      "method": "POST",
      "path": "/streams/evm/:id/status",
      "pathParams": [
        {
          "name": "id",
          "description": "The id of the stream to update",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide a Stream Model",
        "type": "object",
        "fields": [
          {
            "name": "status",
            "type": "string",
            "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
            "enum": [
              "active",
              "paused",
              "error",
              "terminated"
            ],
            "example": {}
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "webhookUrl",
                "type": "string",
                "description": "Webhook URL where moralis will send the POST request."
              },
              {
                "name": "description",
                "type": "string",
                "description": "A description for this stream"
              },
              {
                "name": "tag",
                "type": "string",
                "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
              },
              {
                "name": "topic0",
                "type": "array",
                "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "allAddresses",
                "type": "boolean",
                "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
              },
              {
                "name": "includeNativeTxs",
                "type": "boolean",
                "description": "Include or not native transactions defaults to false"
              },
              {
                "name": "includeContractLogs",
                "type": "boolean",
                "description": "Include or not logs of contract interactions defaults to false"
              },
              {
                "name": "includeInternalTxs",
                "type": "boolean",
                "description": "Include or not include internal transactions defaults to false"
              },
              {
                "name": "includeAllTxLogs",
                "type": "boolean",
                "description": "Include all logs if atleast one value in tx or log matches stream config"
              },
              {
                "name": "getNativeBalances",
                "type": "object",
                "description": "Include native balances for each address in the webhook",
                "fields": [
                  {
                    "name": "selectors",
                    "type": "array",
                    "field": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "type",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "abi"
              },
              {
                "name": "advancedOptions"
              },
              {
                "name": "chainIds",
                "type": "array",
                "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "filterPossibleSpamAddresses",
                "type": "boolean",
                "description": "Indicator if it is a demo stream"
              },
              {
                "name": "demo",
                "type": "boolean",
                "description": "Filter possible spam addresses"
              },
              {
                "name": "triggers",
                "type": "object",
                "description": "triggers",
                "fields": [
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "contractAddress",
                    "type": "string"
                  },
                  {
                    "name": "inputs",
                    "type": "array",
                    "field": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {},
                          "type": "array"
                        }
                      ]
                    }
                  },
                  {
                    "name": "functionAbi",
                    "type": "object",
                    "description": "The abi to parse the log object of the contract",
                    "properties": {
                      "anonymous": {
                        "type": "boolean"
                      },
                      "constant": {
                        "type": "boolean"
                      },
                      "inputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiInput"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "outputs": {
                        "items": {
                          "$ref": "#/components/schemas/AbiOutput"
                        },
                        "type": "array"
                      },
                      "payable": {
                        "type": "boolean"
                      },
                      "stateMutability": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "gas": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "example": {}
                  },
                  {
                    "name": "topic0",
                    "type": "string"
                  },
                  {
                    "name": "callFrom",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "type": "string",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "format": "uuid",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
              },
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string",
                "description": "Description of current status of stream."
              },
              {
                "name": "updatedAt",
                "type": "string",
                "description": "Last Updated Date."
              },
              {
                "name": "amountOfAddresses",
                "type": "number",
                "description": "Amount of Addresses."
              }
            ]
          }
        }
      ]
    },
    "GetAddresses": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get addresses by stream",
      "description": "Get all addresses associated with a specific stream.",
      "method": "GET",
      "path": "/streams/evm/:id/address",
      "pathParams": [
        {
          "name": "id",
          "description": "the id of the stream to get the addresses from",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "limit",
          "description": "Limit response results max value 100",
          "required": true,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "Cursor for fetching next page",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "object",
                "description": "Array of project Streams",
                "fields": [
                  {
                    "name": "address",
                    "type": "string",
                    "description": "Address"
                  }
                ]
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "Cursor for fetching next page"
              },
              {
                "name": "total",
                "type": "number",
                "description": "Total count of streams on the project"
              }
            ]
          }
        }
      ]
    },
    "AddAddressToStream": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Add address to stream",
      "description": "Adds an address to a Stream.",
      "method": "POST",
      "path": "/streams/evm/:id/address",
      "pathParams": [
        {
          "name": "id",
          "description": "The id of the stream to add the address to",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide a Address Model",
        "type": "object",
        "fields": [
          {
            "name": "address",
            "description": "The address or a list of addresses to be added to the Stream."
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "streamId",
                "type": "string",
                "description": "The streamId"
              },
              {
                "name": "address",
                "description": "Address"
              }
            ]
          }
        }
      ]
    },
    "ReplaceAddressFromStream": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Replaces address from stream",
      "description": "Replaces address from a Stream.",
      "method": "PATCH",
      "path": "/streams/evm/:id/address",
      "pathParams": [
        {
          "name": "id",
          "description": "The id of the stream to replace the address from",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide a Address Model",
        "type": "object",
        "fields": [
          {
            "name": "address",
            "description": "The address or a list of addresses to be removed from the Stream."
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "streamId",
                "type": "string",
                "description": "The streamId"
              },
              {
                "name": "address",
                "description": "Address"
              }
            ]
          }
        }
      ]
    },
    "DeleteAddressFromStream": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Delete address from stream",
      "description": "Deletes an address from a Stream.",
      "method": "DELETE",
      "path": "/streams/evm/:id/address",
      "pathParams": [
        {
          "name": "id",
          "description": "The id of the stream to delete the address from",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide a Address Model",
        "type": "object",
        "fields": [
          {
            "name": "address",
            "description": "The address or a list of addresses to be removed from the Stream."
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "streamId",
                "type": "string",
                "description": "The streamId"
              },
              {
                "name": "address",
                "description": "Address"
              }
            ]
          }
        }
      ]
    },
    "GetStreamBlockDataByNumber": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get webhook data returned on the block number with provided stream config",
      "description": "Get webhook data returned on the block number with provided stream config.",
      "method": "POST",
      "path": "/streams/evm/:chainId/block/:blockNumber",
      "pathParams": [
        {
          "name": "chainId",
          "required": true,
          "type": "string"
        },
        {
          "name": "blockNumber",
          "required": true,
          "type": "number"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "streams config and block number",
        "type": "object",
        "fields": [
          {
            "name": "tag",
            "type": "string",
            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
          },
          {
            "name": "topic0",
            "type": "array",
            "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
            "field": {
              "type": "string"
            }
          },
          {
            "name": "allAddresses",
            "type": "boolean",
            "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
          },
          {
            "name": "includeNativeTxs",
            "type": "boolean",
            "description": "Include or not native transactions defaults to false"
          },
          {
            "name": "includeContractLogs",
            "type": "boolean",
            "description": "Include or not logs of contract interactions defaults to false"
          },
          {
            "name": "includeInternalTxs",
            "type": "boolean",
            "description": "Include or not include internal transactions defaults to false"
          },
          {
            "name": "includeAllTxLogs",
            "type": "boolean",
            "description": "Include all logs if atleast one value in tx or log matches stream config"
          },
          {
            "name": "filterPossibleSpamAddresses",
            "type": "boolean"
          },
          {
            "name": "abi"
          },
          {
            "name": "advancedOptions"
          },
          {
            "name": "addresses",
            "type": "array",
            "field": {
              "type": "string"
            }
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok"
        }
      ]
    },
    "GetStreamBlockDataToWebhookByNumber": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Send webhook based on a specific block number using stream config and addresses.",
      "description": "Execute.",
      "method": "POST",
      "path": "/streams/evm/:chainId/block-to-webhook/:blockNumber/:streamId",
      "pathParams": [
        {
          "name": "chainId",
          "required": true,
          "type": "string"
        },
        {
          "name": "blockNumber",
          "required": true,
          "type": "number"
        },
        {
          "name": "streamId",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok"
        }
      ]
    },
    "GetStats": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get project stats",
      "description": "Get the global stats for the account.",
      "method": "GET",
      "path": "/stats",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "totalWebhooksDelivered",
                "type": "number",
                "description": "The total amount of webhooks delivered across all streams"
              },
              {
                "name": "totalWebhooksFailed",
                "type": "number",
                "description": "The total amount of failed webhooks across all streams"
              },
              {
                "name": "totalLogsProcessed",
                "type": "number",
                "description": "The total amount of logs processed across all streams, this includes failed webhooks"
              },
              {
                "name": "totalTxsProcessed",
                "type": "number",
                "description": "The total amount of txs processed across all streams, this includes failed webhooks"
              },
              {
                "name": "totalTxsInternalProcessed",
                "type": "number",
                "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
              },
              {
                "name": "streams",
                "type": "object",
                "description": "Array of stream stats",
                "fields": [
                  {
                    "name": "totalWebhooksDelivered",
                    "type": "number",
                    "description": "The total amount of webhooks delivered across all streams"
                  },
                  {
                    "name": "totalWebhooksFailed",
                    "type": "number",
                    "description": "The total amount of failed webhooks across all streams"
                  },
                  {
                    "name": "totalLogsProcessed",
                    "type": "number",
                    "description": "The total amount of logs processed across all streams, this includes failed webhooks"
                  },
                  {
                    "name": "totalTxsProcessed",
                    "type": "number",
                    "description": "The total amount of txs processed across all streams, this includes failed webhooks"
                  },
                  {
                    "name": "totalTxsInternalProcessed",
                    "type": "number",
                    "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
                  },
                  {
                    "name": "streamId",
                    "type": "string",
                    "description": "The stream id"
                  }
                ]
              },
              {
                "name": "createdAt",
                "type": "string",
                "description": "The date since this stats are being counted"
              },
              {
                "name": "updatedAt",
                "type": "string",
                "description": "The date since this stats were last updated"
              }
            ]
          }
        }
      ]
    },
    "GetStatsByStreamId": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get project stats by Stream ID",
      "description": "Get the stats for the streamId specified",
      "method": "GET",
      "path": "/stats/:streamId",
      "pathParams": [
        {
          "name": "streamId",
          "description": "The id of the stream to get the stats",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "totalWebhooksDelivered",
                "type": "number",
                "description": "The total amount of webhooks delivered across all streams"
              },
              {
                "name": "totalWebhooksFailed",
                "type": "number",
                "description": "The total amount of failed webhooks across all streams"
              },
              {
                "name": "totalLogsProcessed",
                "type": "number",
                "description": "The total amount of logs processed across all streams, this includes failed webhooks"
              },
              {
                "name": "totalTxsProcessed",
                "type": "number",
                "description": "The total amount of txs processed across all streams, this includes failed webhooks"
              },
              {
                "name": "totalTxsInternalProcessed",
                "type": "number",
                "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
              },
              {
                "name": "streams",
                "type": "object",
                "description": "Array of stream stats",
                "fields": [
                  {
                    "name": "totalWebhooksDelivered",
                    "type": "number",
                    "description": "The total amount of webhooks delivered across all streams"
                  },
                  {
                    "name": "totalWebhooksFailed",
                    "type": "number",
                    "description": "The total amount of failed webhooks across all streams"
                  },
                  {
                    "name": "totalLogsProcessed",
                    "type": "number",
                    "description": "The total amount of logs processed across all streams, this includes failed webhooks"
                  },
                  {
                    "name": "totalTxsProcessed",
                    "type": "number",
                    "description": "The total amount of txs processed across all streams, this includes failed webhooks"
                  },
                  {
                    "name": "totalTxsInternalProcessed",
                    "type": "number",
                    "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
                  },
                  {
                    "name": "streamId",
                    "type": "string",
                    "description": "The stream id"
                  }
                ]
              },
              {
                "name": "createdAt",
                "type": "string",
                "description": "The date since this stats are being counted"
              },
              {
                "name": "updatedAt",
                "type": "string",
                "description": "The date since this stats were last updated"
              }
            ]
          }
        }
      ]
    },
    "SetSettings": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Set project settings",
      "description": "Set the settings for the current project based on the project api-key.",
      "method": "POST",
      "path": "/settings",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "type": "object",
        "fields": [
          {
            "name": "region",
            "type": "string",
            "description": "The region from where all the webhooks will be posted for this project",
            "enum": [
              "us-east-1",
              "us-west-2",
              "eu-central-1",
              "ap-southeast-1"
            ]
          },
          {
            "name": "secretKey",
            "type": "string",
            "description": "The secret key to validate the webhooks"
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "region",
                "type": "string",
                "description": "The region from where all the webhooks will be posted for this project",
                "enum": [
                  "us-east-1",
                  "us-west-2",
                  "eu-central-1",
                  "ap-southeast-1"
                ]
              },
              {
                "name": "secretKey",
                "type": "string",
                "description": "The secret key to validate the webhooks"
              }
            ]
          }
        }
      ]
    },
    "GetSettings": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get project settings",
      "description": "Get the settings for the current project based on the project api-key.",
      "method": "GET",
      "path": "/settings",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "region",
                "type": "string",
                "description": "The region from where all the webhooks will be posted for this project",
                "enum": [
                  "us-east-1",
                  "us-west-2",
                  "eu-central-1",
                  "ap-southeast-1"
                ]
              },
              {
                "name": "secretKey",
                "type": "string",
                "description": "The secret key to validate the webhooks"
              }
            ]
          }
        }
      ]
    },
    "GetHistory": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get history",
      "description": "Get all history",
      "method": "GET",
      "path": "/history",
      "pathParams": [],
      "queryParams": [
        {
          "name": "limit",
          "required": true,
          "type": "number"
        },
        {
          "name": "cursor",
          "required": false,
          "type": "string"
        },
        {
          "name": "transactionHash",
          "required": false,
          "type": "string"
        },
        {
          "name": "excludePayload",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "streamId",
          "required": false,
          "type": "string"
        },
        {
          "name": "chainId",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "blockNumber",
          "required": false,
          "type": "array",
          "field": {
            "type": "number",
            "format": "double"
          }
        },
        {
          "name": "fromTimestamp",
          "required": false,
          "type": "number"
        },
        {
          "name": "toTimestamp",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "id",
                    "type": "string",
                    "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                    "format": "uuid",
                    "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                  },
                  {
                    "name": "date",
                    "type": "string"
                  },
                  {
                    "name": "payload"
                  },
                  {
                    "name": "tinyPayload",
                    "type": "object",
                    "properties": {
                      "chainId": {
                        "type": "string"
                      },
                      "confirmed": {
                        "type": "boolean"
                      },
                      "block": {
                        "type": "string"
                      },
                      "records": {
                        "type": "number",
                        "format": "double"
                      },
                      "retries": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": [
                      "chainId",
                      "confirmed",
                      "block",
                      "records",
                      "retries"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "name": "errorMessage",
                    "type": "string"
                  },
                  {
                    "name": "webhookUrl",
                    "type": "string"
                  },
                  {
                    "name": "streamId",
                    "type": "string"
                  },
                  {
                    "name": "tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "cursor",
                "type": "string"
              },
              {
                "name": "total",
                "type": "number"
              }
            ]
          }
        }
      ]
    },
    "ReplayHistory": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Replay history",
      "description": "Replay a specific history.",
      "method": "POST",
      "path": "/history/replay/:streamId/:id",
      "pathParams": [
        {
          "name": "streamId",
          "description": "The id of the stream the history will be replayed",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "description": "The id of the history to replay",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "format": "uuid",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
              },
              {
                "name": "date",
                "type": "string"
              },
              {
                "name": "payload"
              },
              {
                "name": "tinyPayload",
                "type": "object",
                "properties": {
                  "chainId": {
                    "type": "string"
                  },
                  "confirmed": {
                    "type": "boolean"
                  },
                  "block": {
                    "type": "string"
                  },
                  "records": {
                    "type": "number",
                    "format": "double"
                  },
                  "retries": {
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "chainId",
                  "confirmed",
                  "block",
                  "records",
                  "retries"
                ],
                "additionalProperties": false
              },
              {
                "name": "errorMessage",
                "type": "string"
              },
              {
                "name": "webhookUrl",
                "type": "string"
              },
              {
                "name": "streamId",
                "type": "string"
              },
              {
                "name": "tag",
                "type": "string"
              }
            ]
          }
        }
      ]
    },
    "GetLogs": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get logs",
      "description": "Get All logs.",
      "method": "GET",
      "path": "/history/logs",
      "pathParams": [],
      "queryParams": [
        {
          "name": "limit",
          "required": true,
          "type": "number"
        },
        {
          "name": "cursor",
          "required": false,
          "type": "string"
        },
        {
          "name": "streamId",
          "required": false,
          "type": "string"
        },
        {
          "name": "transactionHash",
          "required": false,
          "type": "string"
        },
        {
          "name": "deliveryStatus",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "chainId",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "blockNumber",
          "required": false,
          "type": "array",
          "field": {
            "type": "number",
            "format": "double"
          }
        },
        {
          "name": "fromTimestamp",
          "required": false,
          "type": "number"
        },
        {
          "name": "toTimestamp",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "id",
                    "type": "string",
                    "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                    "format": "uuid",
                    "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                  },
                  {
                    "name": "streamId",
                    "type": "string"
                  },
                  {
                    "name": "chain",
                    "type": "string"
                  },
                  {
                    "name": "webhookUrl",
                    "type": "string"
                  },
                  {
                    "name": "tag",
                    "type": "string"
                  },
                  {
                    "name": "retries",
                    "type": "number"
                  },
                  {
                    "name": "deliveryStatus",
                    "type": "string"
                  },
                  {
                    "name": "blockNumber",
                    "type": "number"
                  },
                  {
                    "name": "errorMessage",
                    "type": "string"
                  },
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "createdAt",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "cursor",
                "type": "string"
              },
              {
                "name": "total",
                "type": "number"
              }
            ]
          }
        }
      ]
    },
    "aptosStreamsGetAll": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Gets all aptos streams.",
      "description": "Get all aptos streams.",
      "method": "GET",
      "path": "/streams/aptos",
      "pathParams": [],
      "queryParams": [
        {
          "name": "limit",
          "description": "Limit response results max value 100",
          "required": true,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "Cursor for fetching next page",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Ok"
        }
      ]
    },
    "aptosStreamsCreate": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Create stream",
      "description": "Creates a new aptos stream.",
      "method": "PUT",
      "path": "/streams/aptos",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide a valid Aptos Stream Model",
        "type": "object",
        "fields": [
          {
            "name": "webhookUrl",
            "type": "string",
            "description": "Webhook URL where moralis will send the POST request."
          },
          {
            "name": "tag",
            "type": "string",
            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
          },
          {
            "name": "functions",
            "type": "array",
            "description": "An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']",
            "field": {
              "type": "string"
            }
          },
          {
            "name": "events",
            "type": "array",
            "description": "An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']",
            "field": {
              "type": "string"
            }
          },
          {
            "name": "network",
            "type": "array",
            "description": "The network to listen to",
            "items": {
              "type": "string",
              "enum": [
                "mainnet",
                "testnet"
              ]
            }
          },
          {
            "name": "includePayload",
            "type": "boolean",
            "description": "Include or not payload for every transaction in webhook defaults to false"
          },
          {
            "name": "includeEvents",
            "type": "boolean",
            "description": "Include or not events in webhook defaults to false"
          },
          {
            "name": "includeChanges",
            "type": "boolean",
            "description": "Include or not raw changes for every transaction in webhook defaults to false"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A description for this stream"
          },
          {
            "name": "demo",
            "type": "boolean",
            "description": "Indicator if it is a demo stream"
          },
          {
            "name": "allAddresses",
            "type": "boolean",
            "description": "Include events for all addresses (only applied when at least one event or function is provided)"
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "allAddresses",
                "type": "boolean"
              },
              {
                "name": "demo",
                "type": "boolean"
              },
              {
                "name": "description",
                "type": "string"
              },
              {
                "name": "includeChanges",
                "type": "boolean"
              },
              {
                "name": "includeEvents",
                "type": "boolean"
              },
              {
                "name": "includePayload",
                "type": "boolean"
              },
              {
                "name": "isErrorSince",
                "type": "string"
              },
              {
                "name": "network",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "mainnet",
                    "testnet"
                  ]
                }
              },
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string"
              },
              {
                "name": "events",
                "type": "array",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "functions",
                "type": "array",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "tag",
                "type": "string"
              },
              {
                "name": "webhookUrl",
                "type": "string"
              },
              {
                "name": "amountOfAddresses",
                "type": "number"
              }
            ]
          }
        }
      ]
    },
    "aptosStreamsGet": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get a specific aptos stream.",
      "description": "Get a specific aptos stream.",
      "method": "GET",
      "path": "/streams/aptos/:id",
      "pathParams": [
        {
          "name": "id",
          "description": "The id of the stream to get",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "allAddresses",
                "type": "boolean"
              },
              {
                "name": "demo",
                "type": "boolean"
              },
              {
                "name": "description",
                "type": "string"
              },
              {
                "name": "includeChanges",
                "type": "boolean"
              },
              {
                "name": "includeEvents",
                "type": "boolean"
              },
              {
                "name": "includePayload",
                "type": "boolean"
              },
              {
                "name": "isErrorSince",
                "type": "string"
              },
              {
                "name": "network",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "mainnet",
                    "testnet"
                  ]
                }
              },
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string"
              },
              {
                "name": "events",
                "type": "array",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "functions",
                "type": "array",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "tag",
                "type": "string"
              },
              {
                "name": "webhookUrl",
                "type": "string"
              },
              {
                "name": "amountOfAddresses",
                "type": "number"
              }
            ]
          }
        }
      ]
    },
    "aptosStreamsUpdate": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Update stream",
      "description": "Updates a new aptos stream.",
      "method": "POST",
      "path": "/streams/aptos/:id",
      "pathParams": [
        {
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide valid values of a Aptos Stream Model",
        "type": "object",
        "fields": [
          {
            "name": "allAddresses",
            "type": "boolean",
            "description": "Include events for all addresses (only applied when at least one event or function is provided)"
          },
          {
            "name": "demo",
            "type": "boolean",
            "description": "Indicator if it is a demo stream"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A description for this stream"
          },
          {
            "name": "includeChanges",
            "type": "boolean",
            "description": "Include or not raw changes for every transaction in webhook defaults to false"
          },
          {
            "name": "includeEvents",
            "type": "boolean",
            "description": "Include or not events in webhook defaults to false"
          },
          {
            "name": "includePayload",
            "type": "boolean",
            "description": "Include or not payload for every transaction in webhook defaults to false"
          },
          {
            "name": "network",
            "type": "array",
            "description": "The network to listen to",
            "items": {
              "type": "string",
              "enum": [
                "mainnet",
                "testnet"
              ]
            }
          },
          {
            "name": "events",
            "type": "array",
            "description": "An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']",
            "field": {
              "type": "string"
            }
          },
          {
            "name": "functions",
            "type": "array",
            "description": "An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']",
            "field": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "type": "string",
            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
          },
          {
            "name": "webhookUrl",
            "type": "string",
            "description": "Webhook URL where moralis will send the POST request."
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "allAddresses",
                "type": "boolean"
              },
              {
                "name": "demo",
                "type": "boolean"
              },
              {
                "name": "description",
                "type": "string"
              },
              {
                "name": "includeChanges",
                "type": "boolean"
              },
              {
                "name": "includeEvents",
                "type": "boolean"
              },
              {
                "name": "includePayload",
                "type": "boolean"
              },
              {
                "name": "isErrorSince",
                "type": "string"
              },
              {
                "name": "network",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "mainnet",
                    "testnet"
                  ]
                }
              },
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string"
              },
              {
                "name": "events",
                "type": "array",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "functions",
                "type": "array",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "tag",
                "type": "string"
              },
              {
                "name": "webhookUrl",
                "type": "string"
              },
              {
                "name": "amountOfAddresses",
                "type": "number"
              }
            ]
          }
        }
      ]
    },
    "aptosStreamsDelete": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Delete a stream",
      "description": "Deletes a aptos stream.",
      "method": "DELETE",
      "path": "/streams/aptos/:id",
      "pathParams": [
        {
          "name": "id",
          "description": "the id of the aptos stream to delete",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Ok"
        }
      ]
    },
    "aptosStreamsAddAddresses": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Add addresses to an aptos stream",
      "description": "Adds addresses to an existing aptos stream",
      "method": "POST",
      "path": "/streams/aptos/:id/address",
      "pathParams": [
        {
          "name": "id",
          "description": "the id of the aptos stream to get the addresses from",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide a list of valid Aptos addresses, or a single address",
        "type": "json"
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok"
        }
      ]
    },
    "aptosStreamsDeleteAddresses": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Delete addresses of an aptos stream",
      "description": "Deletes addresses of an existing aptos stream",
      "method": "DELETE",
      "path": "/streams/aptos/:id/address",
      "pathParams": [
        {
          "name": "id",
          "description": "the id of the aptos stream to get the addresses from",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide a list of valid Aptos addresses, or a single address",
        "type": "json"
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok"
        }
      ]
    },
    "aptosStreamsGetAddresses": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Get addresses by aptos stream id",
      "description": "Get all addresses associated with a specific aptos stream.",
      "method": "GET",
      "path": "/streams/aptos/:id/address",
      "pathParams": [
        {
          "name": "id",
          "description": "the id of the aptos stream to get the addresses from",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "limit",
          "description": "Limit response results max value 100",
          "required": true,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "Cursor for fetching next page",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Ok"
        }
      ]
    },
    "aptosStreamsUpdateStatus": {
      "apiHost": "https://api.moralis-streams.com",
      "summary": "Update a Stream Status",
      "description": "Update a Stream Status",
      "method": "POST",
      "path": "/streams/aptos/:id/status",
      "pathParams": [
        {
          "name": "id",
          "description": "the id of the aptos stream to update the status",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Provide an object with the status to update can be 'active' or 'paused'",
        "type": "object",
        "fields": [
          {
            "name": "status",
            "type": "string",
            "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
            "enum": [
              "active",
              "paused",
              "error",
              "terminated"
            ],
            "example": {}
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Ok",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                  "active",
                  "paused",
                  "error",
                  "terminated"
                ],
                "example": {}
              },
              {
                "name": "statusMessage",
                "type": "string"
              }
            ]
          }
        }
      ]
    }
  },
  "solana": {
    "getAggregatedTokenPairStats": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get aggregated token pair statistics by address",
      "description": "Get aggregated statistics across supported pairs of a token.",
      "method": "GET",
      "path": "/token/:network/:address/pairs/stats",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "So11111111111111111111111111111111111111112",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "totalLiquidityUsd",
                "type": "number"
              },
              {
                "name": "totalActivePairs",
                "type": "number"
              },
              {
                "name": "totalActiveDexes",
                "type": "number"
              },
              {
                "name": "totalSwaps",
                "type": "object",
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 5 minutes timeframe data"
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 1 hour timeframe data"
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 4 hours timeframe data"
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 24 hours timeframe data"
                  }
                },
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ]
              },
              {
                "name": "totalVolume",
                "type": "object",
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 5 minutes timeframe data"
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 1 hour timeframe data"
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 4 hours timeframe data"
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 24 hours timeframe data"
                  }
                },
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ]
              },
              {
                "name": "totalBuyVolume",
                "type": "object",
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 5 minutes timeframe data"
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 1 hour timeframe data"
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 4 hours timeframe data"
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 24 hours timeframe data"
                  }
                },
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ]
              },
              {
                "name": "totalSellVolume",
                "type": "object",
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 5 minutes timeframe data"
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 1 hour timeframe data"
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 4 hours timeframe data"
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 24 hours timeframe data"
                  }
                },
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ]
              },
              {
                "name": "totalBuyers",
                "type": "object",
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 5 minutes timeframe data"
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 1 hour timeframe data"
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 4 hours timeframe data"
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 24 hours timeframe data"
                  }
                },
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ]
              },
              {
                "name": "totalSellers",
                "type": "object",
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 5 minutes timeframe data"
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 1 hour timeframe data"
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 4 hours timeframe data"
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true,
                    "description": "The 24 hours timeframe data"
                  }
                },
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ]
              }
            ]
          }
        }
      ]
    },
    "getCandleSticks": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get candlesticks for a pair address",
      "description": "Gets the candlesticks for a specific pair address",
      "method": "GET",
      "path": "/token/:network/pairs/:address/ohlcv",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "So11111111111111111111111111111111111111112",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)",
          "required": true,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)",
          "required": true,
          "type": "string"
        },
        {
          "name": "timeframe",
          "description": "The interval of the candle stick",
          "required": true,
          "type": "string"
        },
        {
          "name": "currency",
          "description": "The currency format",
          "required": true,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The limit per page",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to the next page"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The page number"
              },
              {
                "name": "pairAddress",
                "type": "string",
                "description": "The pair address"
              },
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address"
              },
              {
                "name": "timeframe",
                "type": "string",
                "description": "The interval of the candle stick"
              },
              {
                "name": "currency",
                "type": "string",
                "description": "The currency format"
              },
              {
                "name": "result",
                "type": "object",
                "description": "An array of candlesticks",
                "fields": [
                  {
                    "name": "timestamp",
                    "type": "string",
                    "description": ""
                  },
                  {
                    "name": "open",
                    "type": "number",
                    "description": ""
                  },
                  {
                    "name": "close",
                    "type": "number",
                    "description": ""
                  },
                  {
                    "name": "high",
                    "type": "number",
                    "description": ""
                  },
                  {
                    "name": "low",
                    "type": "number",
                    "description": ""
                  },
                  {
                    "name": "volume",
                    "type": "number",
                    "description": ""
                  },
                  {
                    "name": "trades",
                    "type": "number",
                    "description": ""
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTMetadata": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get the global metadata for a given contract",
      "description": "Gets the contract level metadata (mint, standard, name, symbol, metaplex) for the given contract",
      "method": "GET",
      "path": "/nft/:network/:address/metadata",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "So11111111111111111111111111111111111111112",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "mediaItems",
          "description": "Should return media items",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "mint",
                "type": "string"
              },
              {
                "name": "address",
                "type": "string"
              },
              {
                "name": "standard",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "symbol",
                "type": "string"
              },
              {
                "name": "tokenStandard",
                "type": "number"
              },
              {
                "name": "description",
                "type": "string"
              },
              {
                "name": "imageOriginalUrl",
                "type": "string"
              },
              {
                "name": "externalUrl",
                "type": "string"
              },
              {
                "name": "metadataOriginalUrl",
                "type": "string"
              },
              {
                "name": "totalSupply",
                "type": "string"
              },
              {
                "name": "metaplex",
                "type": "object",
                "properties": {
                  "metadataUri": {
                    "type": "string",
                    "nullable": true
                  },
                  "masterEdition": {
                    "type": "boolean"
                  },
                  "isMutable": {
                    "type": "boolean"
                  },
                  "primarySaleHappened": {
                    "type": "number"
                  },
                  "sellerFeeBasisPoints": {
                    "type": "number"
                  },
                  "updateAuthority": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "metadataUri",
                  "masterEdition",
                  "isMutable",
                  "primarySaleHappened",
                  "sellerFeeBasisPoints",
                  "updateAuthority"
                ]
              },
              {
                "name": "attributes",
                "type": "object",
                "fields": [
                  {
                    "name": "traitType",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "type": "object",
                    "fields": []
                  }
                ]
              },
              {
                "name": "contract",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "symbol": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "type",
                  "name",
                  "symbol"
                ]
              },
              {
                "name": "collection",
                "type": "object",
                "properties": {
                  "collectionAddress": {
                    "type": "string",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "description": {
                    "type": "string",
                    "nullable": true
                  },
                  "imageOriginalUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "externalUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "metaplexMint": {
                    "type": "string",
                    "nullable": true
                  },
                  "sellerFeeBasisPoints": {
                    "type": "number",
                    "nullable": true
                  }
                },
                "required": [
                  "collectionAddress",
                  "name",
                  "description",
                  "imageOriginalUrl",
                  "externalUrl",
                  "metaplexMint",
                  "sellerFeeBasisPoints"
                ]
              },
              {
                "name": "firstCreated",
                "type": "object",
                "properties": {
                  "mintTimestamp": {
                    "type": "number",
                    "nullable": true
                  },
                  "mintBlockNumber": {
                    "type": "number",
                    "nullable": true
                  },
                  "mintTransaction": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "mintTimestamp",
                  "mintBlockNumber",
                  "mintTransaction"
                ]
              },
              {
                "name": "creators",
                "type": "object",
                "fields": [
                  {
                    "name": "address",
                    "type": "string"
                  },
                  {
                    "name": "share",
                    "type": "number"
                  },
                  {
                    "name": "verified",
                    "type": "boolean"
                  }
                ]
              },
              {
                "name": "properties",
                "type": "object",
                "fields": []
              },
              {
                "name": "media"
              },
              {
                "name": "possibleSpam",
                "type": "boolean"
              }
            ]
          }
        }
      ]
    },
    "getNFTs": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Gets NFTs owned by the given address",
      "description": "Gets NFTs owned by the given address",
      "method": "GET",
      "path": "/account/:network/:address/nft",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "kXB7FfzdrfZpAZEW3TZcp8a8CwQbsowa6BdfAHZ4gVs",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "nftMetadata",
          "description": "Should return the full NFT metadata",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "mediaItems",
          "description": "Should return media items",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "excludeSpam",
          "description": "Should exclude spam NFTs",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "includeFungibleAssets",
          "description": "Should include fungible assets (tokenStandard:1)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": ""
        }
      ]
    },
    "getPairStats": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get stats for a pair address",
      "description": "Gets the stats for a specific pair address",
      "method": "GET",
      "path": "/token/:network/pairs/:pairAddress/stats",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "pairAddress",
          "description": "The address of the pair to query",
          "required": true,
          "example": "Czfq3xZZDmsdGdUyrNLtRhGc47cXcZtLG4crryfu44zE",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address"
              },
              {
                "name": "tokenName",
                "type": "string",
                "description": "The token name"
              },
              {
                "name": "tokenSymbol",
                "type": "string",
                "description": "The token symbol"
              },
              {
                "name": "tokenLogo",
                "type": "string",
                "description": "The token logo"
              },
              {
                "name": "pairCreated",
                "type": "string",
                "description": "The timestamp when pair is created"
              },
              {
                "name": "pairLabel",
                "type": "string",
                "description": "The pair label"
              },
              {
                "name": "pairAddress",
                "type": "string",
                "description": "The pair address"
              },
              {
                "name": "exchange",
                "type": "string",
                "description": "The exchange name"
              },
              {
                "name": "exchangeAddress",
                "type": "string",
                "description": "The exchange address"
              },
              {
                "name": "exchangeLogo",
                "type": "string",
                "description": "The exchange logo"
              },
              {
                "name": "exchangeUrl",
                "type": "string",
                "description": "The exchange url"
              },
              {
                "name": "currentUsdPrice",
                "type": "string",
                "description": "The current usd price of the token"
              },
              {
                "name": "currentNativePrice",
                "type": "string",
                "description": "The current native price of the token"
              },
              {
                "name": "totalLiquidityUsd",
                "type": "string",
                "description": "The total liquidity of the pair in USD"
              },
              {
                "name": "pricePercentChange",
                "description": "The price percent change stats"
              },
              {
                "name": "liquidityPercentChange",
                "description": "The liquidity change stats"
              },
              {
                "name": "buys",
                "description": "The total buys stats"
              },
              {
                "name": "sells",
                "description": "The total sells stats"
              },
              {
                "name": "totalVolume",
                "description": "The total volume stats"
              },
              {
                "name": "buyVolume",
                "description": "The total buy volume stats"
              },
              {
                "name": "sellVolume",
                "description": "The total sell volume stats"
              },
              {
                "name": "buyers",
                "description": "The total unique buyers stats"
              },
              {
                "name": "sellers",
                "description": "The total unique sellers stats"
              }
            ]
          }
        }
      ]
    },
    "getPortfolio": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Gets the portfolio of the given address",
      "description": "Gets all the native and token balances of the given address",
      "method": "GET",
      "path": "/account/:network/:address/portfolio",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "kXB7FfzdrfZpAZEW3TZcp8a8CwQbsowa6BdfAHZ4gVs",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "nftMetadata",
          "description": "Should return the full NFT metadata",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "mediaItems",
          "description": "Should return media items",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "excludeSpam",
          "description": "Should exclude spam NFTs",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "nativeBalance",
                "type": "object",
                "properties": {
                  "solana": {
                    "type": "string"
                  },
                  "lamports": {
                    "type": "string"
                  }
                },
                "required": [
                  "solana",
                  "lamports"
                ]
              },
              {
                "name": "nfts",
                "type": "object",
                "fields": [
                  {
                    "name": "associatedTokenAddress",
                    "type": "string"
                  },
                  {
                    "name": "mint",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "name": "symbol",
                    "type": "string"
                  },
                  {
                    "name": "tokenStandard",
                    "type": "number"
                  },
                  {
                    "name": "amount",
                    "type": "string"
                  },
                  {
                    "name": "amountRaw",
                    "type": "string"
                  },
                  {
                    "name": "decimals",
                    "type": "number"
                  },
                  {
                    "name": "possibleSpam",
                    "type": "boolean"
                  },
                  {
                    "name": "totalSupply",
                    "type": "string"
                  },
                  {
                    "name": "attributes",
                    "type": "object",
                    "fields": [
                      {
                        "name": "traitType",
                        "type": "string"
                      },
                      {
                        "name": "value",
                        "type": "object",
                        "fields": []
                      }
                    ]
                  },
                  {
                    "name": "contract",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "symbol": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "type",
                      "name",
                      "symbol"
                    ]
                  },
                  {
                    "name": "collection",
                    "type": "object",
                    "properties": {
                      "collectionAddress": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "imageOriginalUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "externalUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "metaplexMint": {
                        "type": "string",
                        "nullable": true
                      },
                      "sellerFeeBasisPoints": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "required": [
                      "collectionAddress",
                      "name",
                      "description",
                      "imageOriginalUrl",
                      "externalUrl",
                      "metaplexMint",
                      "sellerFeeBasisPoints"
                    ]
                  },
                  {
                    "name": "firstCreated",
                    "type": "object",
                    "properties": {
                      "mintTimestamp": {
                        "type": "number",
                        "nullable": true
                      },
                      "mintBlockNumber": {
                        "type": "number",
                        "nullable": true
                      },
                      "mintTransaction": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "mintTimestamp",
                      "mintBlockNumber",
                      "mintTransaction"
                    ]
                  },
                  {
                    "name": "creators",
                    "type": "object",
                    "fields": [
                      {
                        "name": "address",
                        "type": "string"
                      },
                      {
                        "name": "share",
                        "type": "number"
                      },
                      {
                        "name": "verified",
                        "type": "boolean"
                      }
                    ]
                  },
                  {
                    "name": "properties",
                    "type": "object",
                    "fields": []
                  },
                  {
                    "name": "media"
                  }
                ]
              },
              {
                "name": "tokens",
                "type": "object",
                "fields": [
                  {
                    "name": "associatedTokenAddress",
                    "type": "string"
                  },
                  {
                    "name": "mint",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "name": "symbol",
                    "type": "string"
                  },
                  {
                    "name": "tokenStandard",
                    "type": "number"
                  },
                  {
                    "name": "amount",
                    "type": "string"
                  },
                  {
                    "name": "amountRaw",
                    "type": "string"
                  },
                  {
                    "name": "decimals",
                    "type": "number"
                  },
                  {
                    "name": "logo",
                    "type": "string"
                  },
                  {
                    "name": "isVerifiedContract",
                    "type": "boolean"
                  },
                  {
                    "name": "possibleSpam",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getSnipersByPairAddress": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get snipers by pair address.",
      "description": "Get all snipers.",
      "method": "GET",
      "path": "/token/:network/pairs/:pairAddress/snipers",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "pairAddress",
          "description": "The address of the pair to query",
          "required": true,
          "example": "Czfq3xZZDmsdGdUyrNLtRhGc47cXcZtLG4crryfu44zE",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "blocksAfterCreation",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "transactionHash",
                "type": "string"
              },
              {
                "name": "blockNumber",
                "type": "number"
              },
              {
                "name": "blockTimestamp",
                "type": "string"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "walletAddress",
                    "type": "string"
                  },
                  {
                    "name": "totalTokensSniped",
                    "type": "number"
                  },
                  {
                    "name": "totalSnipedUsd",
                    "type": "number"
                  },
                  {
                    "name": "totalSnipedTransactions",
                    "type": "number"
                  },
                  {
                    "name": "snipedTransactions",
                    "type": "object",
                    "fields": [
                      {
                        "name": "transactionHash",
                        "type": "string"
                      },
                      {
                        "name": "transactionTimestamp",
                        "type": "string"
                      },
                      {
                        "name": "blocksAfterCreation",
                        "type": "number"
                      }
                    ]
                  },
                  {
                    "name": "totalTokensSold",
                    "type": "number"
                  },
                  {
                    "name": "totalSoldUsd",
                    "type": "number"
                  },
                  {
                    "name": "totalSellTransactions",
                    "type": "number"
                  },
                  {
                    "name": "sellTransactions",
                    "type": "object",
                    "fields": [
                      {
                        "name": "transactionHash",
                        "type": "string"
                      },
                      {
                        "name": "transactionTimestamp",
                        "type": "string"
                      },
                      {
                        "name": "blocksAfterCreation",
                        "type": "number"
                      }
                    ]
                  },
                  {
                    "name": "currentBalance",
                    "type": "number"
                  },
                  {
                    "name": "currentBalanceUsdValue",
                    "type": "number"
                  },
                  {
                    "name": "realizedProfitPercentage",
                    "type": "number"
                  },
                  {
                    "name": "realizedProfitUsd",
                    "type": "number"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getSPL": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Gets token balances owned by the given address",
      "description": "Gets token balances owned by the given address",
      "method": "GET",
      "path": "/account/:network/:address/tokens",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "kXB7FfzdrfZpAZEW3TZcp8a8CwQbsowa6BdfAHZ4gVs",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "excludeSpam",
          "description": "Should exclude spam tokens",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": ""
        }
      ]
    },
    "getSwapsByPairAddress": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get all swap related transactions (buy, sell, add liquidity & remove liquidity)",
      "description": "Get all swap related transactions (buy, sell, add liquidity & remove liquidity) for a specific pair address.",
      "method": "GET",
      "path": "/token/:network/pairs/:pairAddress/swaps",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "pairAddress",
          "description": "The address of the pair to query",
          "required": true,
          "example": "Czfq3xZZDmsdGdUyrNLtRhGc47cXcZtLG4crryfu44zE",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "limit",
          "description": "The limit per page",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of items",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)",
          "required": false,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)",
          "required": false,
          "type": "string"
        },
        {
          "name": "transactionTypes",
          "description": "Transaction types to fetch. Possible values: 'buy', 'sell', 'addLiquidity' or 'removeLiquidity' separated by comma",
          "required": false,
          "example": "buy,sell,addLiquidity,removeLiquidity",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "example": 1
              },
              {
                "name": "pageSize",
                "type": "number",
                "example": 100
              },
              {
                "name": "cursor",
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...kJ8E_653QrA4Q8zb_9OCn6opE9aBo8PjqLeQU_VCaaw"
              },
              {
                "name": "exchangeName",
                "type": "string",
                "example": "Raydium AMM v4"
              },
              {
                "name": "exchangeLogo",
                "type": "string",
                "example": "https://entities-logos.s3.amazonaws.com/raydium.png"
              },
              {
                "name": "exchangeAddress",
                "type": "string",
                "example": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8"
              },
              {
                "name": "pairLabel",
                "type": "string",
                "example": "BREAD/SOL"
              },
              {
                "name": "pairAddress",
                "type": "string",
                "example": "ALeyWh7zN979ZHUWY6YTMJC8wWowzdYqi8RRPRyB3LAd"
              },
              {
                "name": "baseToken",
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "nullable": true,
                    "example": "madHpjRn6bd8t78Rsy7NuSuNwWa2HU8ByPobZprHbHv"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "example": "MAD"
                  },
                  "symbol": {
                    "type": "string",
                    "nullable": true,
                    "example": "MAD"
                  },
                  "logo": {
                    "type": "string",
                    "nullable": true,
                    "example": "https://ipfs.io/ipfs/QmeCR6o1FrYjczPdDDDm4623usKksjj9BQLu89WqV8jFZW?filename=MAD.jpg"
                  },
                  "decimals": {
                    "type": "string",
                    "nullable": true,
                    "example": "18"
                  }
                },
                "required": [
                  "address",
                  "name",
                  "symbol",
                  "logo",
                  "decimals"
                ]
              },
              {
                "name": "quoteToken",
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "nullable": true,
                    "example": "madHpjRn6bd8t78Rsy7NuSuNwWa2HU8ByPobZprHbHv"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "example": "MAD"
                  },
                  "symbol": {
                    "type": "string",
                    "nullable": true,
                    "example": "MAD"
                  },
                  "logo": {
                    "type": "string",
                    "nullable": true,
                    "example": "https://ipfs.io/ipfs/QmeCR6o1FrYjczPdDDDm4623usKksjj9BQLu89WqV8jFZW?filename=MAD.jpg"
                  },
                  "decimals": {
                    "type": "string",
                    "nullable": true,
                    "example": "18"
                  }
                },
                "required": [
                  "address",
                  "name",
                  "symbol",
                  "logo",
                  "decimals"
                ]
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transactionHash",
                    "type": "string",
                    "example": "3o9NfCBWaDEb8JLJGdp8tfWwXURNokanCvUJf9A9f5nFqmZkRvWcfhkek4t47UhRDSGKHsSzi8MBusin8H7x7YYD"
                  },
                  {
                    "name": "transactionType",
                    "type": "string",
                    "example": "sell"
                  },
                  {
                    "name": "transactionIndex",
                    "type": "number",
                    "example": 250
                  },
                  {
                    "name": "subCategory",
                    "type": "string",
                    "example": "sellAll"
                  },
                  {
                    "name": "blockTimestamp",
                    "type": "string",
                    "example": "2024-11-28T09:44:55.000Z"
                  },
                  {
                    "name": "blockNumber",
                    "type": "number",
                    "example": 304108120
                  },
                  {
                    "name": "walletAddress",
                    "type": "string",
                    "example": "A8GVZWGMxRAouFQymPoMKx527JhHKrBRuqFx7NET4j22"
                  },
                  {
                    "name": "baseTokenAmount",
                    "type": "string",
                    "example": "199255.444466200"
                  },
                  {
                    "name": "quoteTokenAmount",
                    "type": "string",
                    "example": "0.007374998"
                  },
                  {
                    "name": "baseTokenPriceUsd",
                    "type": "number",
                    "example": 0.000008794
                  },
                  {
                    "name": "quoteTokenPriceUsd",
                    "type": "number",
                    "example": 237.60336565
                  },
                  {
                    "name": "baseQuotePrice",
                    "type": "string",
                    "example": "0.0000000370127"
                  },
                  {
                    "name": "totalValueUsd",
                    "type": "number",
                    "example": 1.752324346
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getSwapsByTokenAddress": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get all swap related transactions (buy, sell)",
      "description": "Get all swap related transactions (buy, sell) for a specific token address.",
      "method": "GET",
      "path": "/token/:network/:address/swaps",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "So11111111111111111111111111111111111111112",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "limit",
          "description": "The limit per page",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)",
          "required": false,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of the results, in ascending (ASC) or descending (DESC).",
          "required": false,
          "example": "DESC",
          "type": "string"
        },
        {
          "name": "transactionTypes",
          "description": "Transaction types to fetch. Possible values: 'buy','sell' or both separated by comma",
          "required": false,
          "example": "buy,sell",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "example": 1
              },
              {
                "name": "pageSize",
                "type": "number",
                "example": 100
              },
              {
                "name": "cursor",
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...Caaw"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transactionHash",
                    "type": "string",
                    "example": "0xafc66b9b1802618f560be5244395f0fc0b95a1f1fdeee7a206acbb546c9e8a72"
                  },
                  {
                    "name": "transactionIndex",
                    "type": "number",
                    "example": 5
                  },
                  {
                    "name": "transactionType",
                    "type": "string",
                    "example": "buy"
                  },
                  {
                    "name": "blockNumber",
                    "type": "number",
                    "example": 12345678
                  },
                  {
                    "name": "blockTimestamp",
                    "type": "string",
                    "example": "2024-11-21T09:22:28.000Z"
                  },
                  {
                    "name": "subCategory",
                    "type": "string",
                    "example": "ACCUMULATION"
                  },
                  {
                    "name": "walletAddress",
                    "type": "string",
                    "example": "0x1c584a6baecb7c5d51caa0ef3a579e08bd49d4e5"
                  },
                  {
                    "name": "pairAddress",
                    "type": "string",
                    "example": "0xdded227d71a096c6b5d87807c1b5c456771aaa94"
                  },
                  {
                    "name": "pairLabel",
                    "type": "string",
                    "example": "USDC/WETH"
                  },
                  {
                    "name": "exchangeAddress",
                    "type": "string",
                    "example": "0x1080ee857d165186af7f8d63e8ec510c28a6d1ea"
                  },
                  {
                    "name": "exchangeName",
                    "type": "string",
                    "example": "Uniswap"
                  },
                  {
                    "name": "exchangeLogo",
                    "type": "string",
                    "example": "https://logo.moralis.io/0xe708_0xe5d7c2a44ffddf6b295a15c148167daaaf5cf34f_769a0b766bd3d6d1830f0a95d7b3e313"
                  },
                  {
                    "name": "baseToken",
                    "type": "string",
                    "example": "ETH"
                  },
                  {
                    "name": "quoteToken",
                    "type": "string",
                    "example": "USDT"
                  },
                  {
                    "name": "bought",
                    "example": {
                      "address": "0xe5d7c2a44ffddf6b295a15c148167daaaf5cf34f",
                      "name": "Wrapped Ether",
                      "symbol": "SYM",
                      "logo": "https://example.com/logo-token1.png",
                      "amount": "0.000014332429005002",
                      "usdPrice": 3148.1828278180296,
                      "usdAmount": 1230,
                      "tokenType": "token1"
                    }
                  },
                  {
                    "name": "sold",
                    "example": {
                      "address": "0x176211869ca2b568f2a7d4ee941e073a821ee1ff",
                      "name": "USDC",
                      "symbol": "SYM",
                      "logo": "https://example.com/logo-token2.png",
                      "amount": "1000",
                      "usdPrice": 0.9999999999999986,
                      "usdAmount": -0.045138999999999936,
                      "tokenType": "token0"
                    }
                  },
                  {
                    "name": "baseQuotePrice",
                    "type": "string",
                    "example": "0.01"
                  },
                  {
                    "name": "totalValueUsd",
                    "type": "number",
                    "example": 1230
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getSwapsByWalletAddress": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get all swap related transactions (buy, sell) for a specific wallet address.",
      "description": "Get all swap related transactions (buy, sell) for a specific wallet address.",
      "method": "GET",
      "path": "/account/:network/:address/swaps",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "kXB7FfzdrfZpAZEW3TZcp8a8CwQbsowa6BdfAHZ4gVs",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "limit",
          "description": "The limit per page",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of items",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)",
          "required": false,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)",
          "required": false,
          "type": "string"
        },
        {
          "name": "transactionTypes",
          "description": "Transaction types to fetch. Possible values: 'buy','sell' or both separated by comma",
          "required": false,
          "example": "buy,sell",
          "type": "string"
        },
        {
          "name": "tokenAddress",
          "description": "Token address to get transactions for",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number"
              },
              {
                "name": "pageSize",
                "type": "number"
              },
              {
                "name": "cursor",
                "type": "string"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transactionHash",
                    "type": "string",
                    "example": "0xafc66b9b1802618f560be5244395f0fc0b95a1f1fdeee7a206acbb546c9e8a72"
                  },
                  {
                    "name": "transactionIndex",
                    "type": "number",
                    "example": 5
                  },
                  {
                    "name": "transactionType",
                    "type": "string",
                    "example": "buy"
                  },
                  {
                    "name": "blockNumber",
                    "type": "number",
                    "example": 12345678
                  },
                  {
                    "name": "blockTimestamp",
                    "type": "string",
                    "example": "2024-11-21T09:22:28.000Z"
                  },
                  {
                    "name": "subCategory",
                    "type": "string",
                    "example": "ACCUMULATION"
                  },
                  {
                    "name": "walletAddress",
                    "type": "string",
                    "example": "0x1c584a6baecb7c5d51caa0ef3a579e08bd49d4e5"
                  },
                  {
                    "name": "pairAddress",
                    "type": "string",
                    "example": "0xdded227d71a096c6b5d87807c1b5c456771aaa94"
                  },
                  {
                    "name": "pairLabel",
                    "type": "string",
                    "example": "USDC/WETH"
                  },
                  {
                    "name": "exchangeAddress",
                    "type": "string",
                    "example": "0x1080ee857d165186af7f8d63e8ec510c28a6d1ea"
                  },
                  {
                    "name": "exchangeName",
                    "type": "string",
                    "example": "Uniswap"
                  },
                  {
                    "name": "exchangeLogo",
                    "type": "string",
                    "example": "https://logo.moralis.io/0xe708_0xe5d7c2a44ffddf6b295a15c148167daaaf5cf34f_769a0b766bd3d6d1830f0a95d7b3e313"
                  },
                  {
                    "name": "baseToken",
                    "type": "string",
                    "example": "ETH"
                  },
                  {
                    "name": "quoteToken",
                    "type": "string",
                    "example": "USDT"
                  },
                  {
                    "name": "bought",
                    "example": {
                      "address": "0xe5d7c2a44ffddf6b295a15c148167daaaf5cf34f",
                      "name": "Wrapped Ether",
                      "symbol": "SYM",
                      "logo": "https://example.com/logo-token1.png",
                      "amount": "0.000014332429005002",
                      "usdPrice": 3148.1828278180296,
                      "usdAmount": 1230,
                      "tokenType": "token1"
                    }
                  },
                  {
                    "name": "sold",
                    "example": {
                      "address": "0x176211869ca2b568f2a7d4ee941e073a821ee1ff",
                      "name": "USDC",
                      "symbol": "SYM",
                      "logo": "https://example.com/logo-token2.png",
                      "amount": "1000",
                      "usdPrice": 0.9999999999999986,
                      "usdAmount": -0.045138999999999936,
                      "tokenType": "token0"
                    }
                  },
                  {
                    "name": "baseQuotePrice",
                    "type": "string",
                    "example": "0.01"
                  },
                  {
                    "name": "totalValueUsd",
                    "type": "number",
                    "example": 1230
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenMetadata": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get Token metadata",
      "description": "Get the global token metadata for a given network and contract (mint, standard, name, symbol, metaplex).",
      "method": "GET",
      "path": "/token/:network/:address/metadata",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "So11111111111111111111111111111111111111112",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": ""
        },
        {
          "status": "default",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "mint",
                "type": "string"
              },
              {
                "name": "standard",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "symbol",
                "type": "string"
              },
              {
                "name": "logo",
                "type": "string"
              },
              {
                "name": "decimals",
                "type": "string"
              },
              {
                "name": "tokenStandard",
                "type": "number"
              },
              {
                "name": "totalSupply",
                "type": "string"
              },
              {
                "name": "totalSupplyFormatted",
                "type": "string"
              },
              {
                "name": "fullyDilutedValue",
                "type": "string"
              },
              {
                "name": "metaplex",
                "type": "object",
                "properties": {
                  "metadataUri": {
                    "type": "string",
                    "nullable": true
                  },
                  "masterEdition": {
                    "type": "boolean"
                  },
                  "isMutable": {
                    "type": "boolean"
                  },
                  "primarySaleHappened": {
                    "type": "number"
                  },
                  "sellerFeeBasisPoints": {
                    "type": "number"
                  },
                  "updateAuthority": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "metadataUri",
                  "masterEdition",
                  "isMutable",
                  "primarySaleHappened",
                  "sellerFeeBasisPoints",
                  "updateAuthority"
                ]
              },
              {
                "name": "links",
                "type": "object",
                "fields": []
              },
              {
                "name": "description",
                "type": "string"
              },
              {
                "name": "isVerifiedContract",
                "type": "boolean"
              },
              {
                "name": "possibleSpam",
                "type": "boolean"
              }
            ]
          }
        }
      ]
    },
    "getTokenPairs": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get token pairs by address",
      "description": "Get the supported pairs for a specific token address.",
      "method": "GET",
      "path": "/token/:network/:address/pairs",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "So11111111111111111111111111111111111111112",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The limit per page",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string"
              },
              {
                "name": "pageSize",
                "type": "number"
              },
              {
                "name": "page",
                "type": "number"
              },
              {
                "name": "pairs",
                "type": "object",
                "fields": [
                  {
                    "name": "exchangeAddress",
                    "type": "string"
                  },
                  {
                    "name": "exchangeName",
                    "type": "string"
                  },
                  {
                    "name": "exchangeLogo",
                    "type": "string"
                  },
                  {
                    "name": "pairAddress",
                    "type": "string"
                  },
                  {
                    "name": "pairLabel",
                    "type": "string"
                  },
                  {
                    "name": "usdPrice",
                    "type": "number"
                  },
                  {
                    "name": "usdPrice24hrPercentChange",
                    "type": "number"
                  },
                  {
                    "name": "usdPrice24hrUsdChange",
                    "type": "number"
                  },
                  {
                    "name": "volume24hrNative",
                    "type": "number"
                  },
                  {
                    "name": "volume24hrUsd",
                    "type": "number"
                  },
                  {
                    "name": "liquidityUsd",
                    "type": "number"
                  },
                  {
                    "name": "inactivePair",
                    "type": "boolean"
                  },
                  {
                    "name": "baseToken",
                    "type": "string"
                  },
                  {
                    "name": "quoteToken",
                    "type": "string"
                  },
                  {
                    "name": "pair",
                    "type": "object",
                    "fields": [
                      {
                        "name": "tokenAddress",
                        "type": "string"
                      },
                      {
                        "name": "tokenName",
                        "type": "string"
                      },
                      {
                        "name": "tokenSymbol",
                        "type": "string"
                      },
                      {
                        "name": "tokenLogo",
                        "type": "string"
                      },
                      {
                        "name": "tokenDecimals",
                        "type": "string"
                      },
                      {
                        "name": "pairTokenType",
                        "type": "string"
                      },
                      {
                        "name": "liquidityUsd",
                        "type": "number"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenPrice": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get token price",
      "description": "Gets the token price (usd and native) for a given contract address and network.",
      "method": "GET",
      "path": "/token/:network/:address/price",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "So11111111111111111111111111111111111111112",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": ""
        },
        {
          "status": "default",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "tokenAddress",
                "type": "string"
              },
              {
                "name": "pairAddress",
                "type": "string"
              },
              {
                "name": "nativePrice",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "decimals": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "decimals",
                  "name",
                  "symbol"
                ]
              },
              {
                "name": "usdPrice",
                "type": "number"
              },
              {
                "name": "exchangeAddress",
                "type": "string"
              },
              {
                "name": "exchangeName",
                "type": "string"
              },
              {
                "name": "logo",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "symbol",
                "type": "string"
              },
              {
                "name": "usdPrice24h",
                "type": "number"
              },
              {
                "name": "usdPrice24hrUsdChange",
                "type": "number"
              },
              {
                "name": "usdPrice24hrPercentChange",
                "type": "number"
              },
              {
                "name": "isVerifiedContract",
                "type": "boolean"
              }
            ]
          }
        }
      ]
    },
    "getMultipleTokenPrices": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get token price",
      "description": "Gets the token price (usd and native) for a given contract address and network.",
      "method": "POST",
      "path": "/token/:network/prices",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "type": "object",
        "fields": [
          {
            "name": "addresses",
            "type": "array",
            "field": {
              "type": "string"
            }
          }
        ]
      },
      "responses": [
        {
          "status": "201",
          "description": ""
        },
        {
          "status": "default",
          "description": ""
        }
      ]
    },
    "balance": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Gets native balance owned by the given address",
      "description": "Gets native balance owned by the given address",
      "method": "GET",
      "path": "/account/:network/:address/balance",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "kXB7FfzdrfZpAZEW3TZcp8a8CwQbsowa6BdfAHZ4gVs",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "solana",
                "type": "string"
              },
              {
                "name": "lamports",
                "type": "string"
              }
            ]
          }
        }
      ]
    },
    "getNewTokensByExchange": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get new tokens by exchange",
      "description": "Get the list of new tokens by given exchange.",
      "method": "GET",
      "path": "/token/:network/exchange/:exchange/new",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "exchange",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The limit per page",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string"
              },
              {
                "name": "pageSize",
                "type": "number"
              },
              {
                "name": "page",
                "type": "number"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "tokenAddress",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "name": "symbol",
                    "type": "string"
                  },
                  {
                    "name": "logo",
                    "type": "string"
                  },
                  {
                    "name": "decimals",
                    "type": "string"
                  },
                  {
                    "name": "priceNative",
                    "type": "string"
                  },
                  {
                    "name": "priceUsd",
                    "type": "string"
                  },
                  {
                    "name": "liquidity",
                    "type": "string"
                  },
                  {
                    "name": "fullyDilutedValuation",
                    "type": "string"
                  },
                  {
                    "name": "createdAt",
                    "type": "string",
                    "example": "2024-11-28T09:44:55.000Z"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getBondingTokensByExchange": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get bonding tokens by exchange",
      "description": "Get the list of bonding tokens by given exchange.",
      "method": "GET",
      "path": "/token/:network/exchange/:exchange/bonding",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "exchange",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The limit per page",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string"
              },
              {
                "name": "pageSize",
                "type": "number"
              },
              {
                "name": "page",
                "type": "number"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "tokenAddress",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "name": "symbol",
                    "type": "string"
                  },
                  {
                    "name": "logo",
                    "type": "string"
                  },
                  {
                    "name": "decimals",
                    "type": "string"
                  },
                  {
                    "name": "priceNative",
                    "type": "string"
                  },
                  {
                    "name": "priceUsd",
                    "type": "string"
                  },
                  {
                    "name": "liquidity",
                    "type": "string"
                  },
                  {
                    "name": "fullyDilutedValuation",
                    "type": "string"
                  },
                  {
                    "name": "bondingCurveProgress",
                    "type": "number"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getGraduatedTokensByExchange": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get graduated tokens by exchange",
      "description": "Get the list of graduated tokens by given exchange.",
      "method": "GET",
      "path": "/token/:network/exchange/:exchange/graduated",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "exchange",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The limit per page",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string"
              },
              {
                "name": "pageSize",
                "type": "number"
              },
              {
                "name": "page",
                "type": "number"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "tokenAddress",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "name": "symbol",
                    "type": "string"
                  },
                  {
                    "name": "logo",
                    "type": "string"
                  },
                  {
                    "name": "decimals",
                    "type": "string"
                  },
                  {
                    "name": "priceNative",
                    "type": "string"
                  },
                  {
                    "name": "priceUsd",
                    "type": "string"
                  },
                  {
                    "name": "liquidity",
                    "type": "string"
                  },
                  {
                    "name": "fullyDilutedValuation",
                    "type": "string"
                  },
                  {
                    "name": "graduatedAt",
                    "type": "string",
                    "example": "2024-11-28T09:44:55.000Z"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getHistoricalTokenHolders": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get token holders overtime for a given tokens",
      "method": "GET",
      "path": "/token/:network/holders/:address/historical",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "6p6xgHyF7AeE6TZkSmFsko444wqoP15icUSqi2jfGiPN",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "timeFrame",
          "description": "The interval of the holders data",
          "required": true,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)",
          "required": true,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)",
          "required": true,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The limit per page depending on the plan",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "timestamp",
                    "type": "string",
                    "example": "2025-02-25T00:00:00Z"
                  },
                  {
                    "name": "totalHolders",
                    "type": "number",
                    "example": 2000
                  },
                  {
                    "name": "netHolderChange",
                    "type": "number",
                    "example": 50
                  },
                  {
                    "name": "holderPercentChange",
                    "type": "number",
                    "example": 2.5
                  },
                  {
                    "name": "newHoldersByAcquisition",
                    "type": "object",
                    "properties": {
                      "swap": {
                        "type": "number",
                        "example": 150
                      },
                      "transfer": {
                        "type": "number",
                        "example": 50
                      },
                      "airdrop": {
                        "type": "number",
                        "example": 20
                      }
                    },
                    "required": [
                      "swap",
                      "transfer",
                      "airdrop"
                    ]
                  },
                  {
                    "name": "holdersIn",
                    "type": "object",
                    "properties": {
                      "whales": {
                        "type": "number",
                        "example": 5
                      },
                      "sharks": {
                        "type": "number",
                        "example": 12
                      },
                      "dolphins": {
                        "type": "number",
                        "example": 20
                      },
                      "fish": {
                        "type": "number",
                        "example": 100
                      },
                      "octopus": {
                        "type": "number",
                        "example": 50
                      },
                      "crabs": {
                        "type": "number",
                        "example": 200
                      },
                      "shrimps": {
                        "type": "number",
                        "example": 1000
                      }
                    },
                    "required": [
                      "whales",
                      "sharks",
                      "dolphins",
                      "fish",
                      "octopus",
                      "crabs",
                      "shrimps"
                    ]
                  },
                  {
                    "name": "holdersOut",
                    "type": "object",
                    "properties": {
                      "whales": {
                        "type": "number",
                        "example": 5
                      },
                      "sharks": {
                        "type": "number",
                        "example": 12
                      },
                      "dolphins": {
                        "type": "number",
                        "example": 20
                      },
                      "fish": {
                        "type": "number",
                        "example": 100
                      },
                      "octopus": {
                        "type": "number",
                        "example": 50
                      },
                      "crabs": {
                        "type": "number",
                        "example": 200
                      },
                      "shrimps": {
                        "type": "number",
                        "example": 1000
                      }
                    },
                    "required": [
                      "whales",
                      "sharks",
                      "dolphins",
                      "fish",
                      "octopus",
                      "crabs",
                      "shrimps"
                    ]
                  }
                ]
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page number"
              }
            ]
          }
        }
      ]
    },
    "getTokenBondingStatus": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get Token Bonding Status",
      "description": "Get the token bonding status for a given network and contract (if relevant).",
      "method": "GET",
      "path": "/token/:network/:address/bonding-status",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "So11111111111111111111111111111111111111112",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": ""
        },
        {
          "status": "default",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "mint",
                "type": "string",
                "example": "So11111111111111111111111111111111111111112"
              },
              {
                "name": "bondingProgress",
                "type": "number",
                "example": 50
              },
              {
                "name": "graduatedAt",
                "type": "string",
                "example": "2024-11-28T09:44:55.000Z"
              }
            ]
          }
        }
      ]
    },
    "getTokenHolders": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get the summary of holders for a given token token.",
      "method": "GET",
      "path": "/token/:network/holders/:address",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "6p6xgHyF7AeE6TZkSmFsko444wqoP15icUSqi2jfGiPN",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "totalHolders",
                "type": "number",
                "example": 5000
              },
              {
                "name": "holdersByAcquisition",
                "type": "object",
                "properties": {
                  "swap": {
                    "type": "number",
                    "example": 150
                  },
                  "transfer": {
                    "type": "number",
                    "example": 50
                  },
                  "airdrop": {
                    "type": "number",
                    "example": 20
                  }
                },
                "required": [
                  "swap",
                  "transfer",
                  "airdrop"
                ]
              },
              {
                "name": "holderChange",
                "type": "object",
                "properties": {
                  "5min": {
                    "$ref": "#/components/schemas/HolderChangeDto"
                  },
                  "1h": {
                    "$ref": "#/components/schemas/HolderChangeDto"
                  },
                  "6h": {
                    "$ref": "#/components/schemas/HolderChangeDto"
                  },
                  "24h": {
                    "$ref": "#/components/schemas/HolderChangeDto"
                  },
                  "3d": {
                    "$ref": "#/components/schemas/HolderChangeDto"
                  },
                  "7d": {
                    "$ref": "#/components/schemas/HolderChangeDto"
                  },
                  "30d": {
                    "$ref": "#/components/schemas/HolderChangeDto"
                  }
                },
                "required": [
                  "5min",
                  "1h",
                  "6h",
                  "24h",
                  "3d",
                  "7d",
                  "30d"
                ]
              },
              {
                "name": "holderDistribution",
                "type": "object",
                "properties": {
                  "whales": {
                    "type": "number",
                    "example": 150
                  },
                  "sharks": {
                    "type": "number",
                    "example": 150
                  },
                  "dolphins": {
                    "type": "number",
                    "example": 150
                  },
                  "fish": {
                    "type": "number",
                    "example": 150
                  },
                  "octopus": {
                    "type": "number",
                    "example": 150
                  },
                  "crabs": {
                    "type": "number",
                    "example": 150
                  },
                  "shrimps": {
                    "type": "number",
                    "example": 150
                  }
                },
                "required": [
                  "whales",
                  "sharks",
                  "dolphins",
                  "fish",
                  "octopus",
                  "crabs",
                  "shrimps"
                ]
              },
              {
                "name": "holderSupply",
                "type": "object",
                "properties": {
                  "top10": {
                    "$ref": "#/components/schemas/HolderSupplyChangeDto"
                  },
                  "top25": {
                    "$ref": "#/components/schemas/HolderSupplyChangeDto"
                  },
                  "top50": {
                    "$ref": "#/components/schemas/HolderSupplyChangeDto"
                  },
                  "top100": {
                    "$ref": "#/components/schemas/HolderSupplyChangeDto"
                  },
                  "top250": {
                    "$ref": "#/components/schemas/HolderSupplyChangeDto"
                  },
                  "top500": {
                    "$ref": "#/components/schemas/HolderSupplyChangeDto"
                  }
                },
                "required": [
                  "top10",
                  "top25",
                  "top50",
                  "top100",
                  "top250",
                  "top500"
                ]
              }
            ]
          }
        }
      ]
    },
    "getTopHolders": {
      "apiHost": "https://solana-gateway.moralis.io",
      "summary": "Get paginated top holders for a given token.",
      "method": "GET",
      "path": "/token/:network/:address/top-holders",
      "pathParams": [
        {
          "name": "network",
          "description": "The network to query",
          "required": true,
          "type": "string"
        },
        {
          "name": "address",
          "description": "The address to query",
          "required": true,
          "example": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "cursor",
          "description": "The cursor to the next page",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The limit per page",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "object",
                "description": "The list of top holders",
                "fields": [
                  {
                    "name": "balance",
                    "type": "string"
                  },
                  {
                    "name": "balanceFormatted",
                    "type": "string"
                  },
                  {
                    "name": "isContract",
                    "type": "boolean"
                  },
                  {
                    "name": "ownerAddress",
                    "type": "string"
                  },
                  {
                    "name": "usdValue",
                    "type": "string"
                  },
                  {
                    "name": "percentageRelativeToTotalSupply",
                    "type": "number"
                  }
                ]
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to fetch the next page"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The page number"
              },
              {
                "name": "pageSize",
                "type": "number",
                "description": "The page size"
              },
              {
                "name": "totalSupply",
                "type": "string",
                "description": "The total supply of the token"
              }
            ]
          }
        }
      ]
    }
  },
  "market": {
    "news": {
      "summary": "news",
      "description": "Returns all news between 2 dates, sorted by date, oldest to newest",
      "method": "GET",
      "apiHost": "https://wdim.moralis.io/api/v1",
      "path": "/news",
      "pathParams": [],
      "queryParams": [
        {
          "name": "from_date",
          "description": "The first date to fetch news for",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "The last date to fetch news for",
          "required": false,
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "Cursor pointing to the next page of results",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "How many results to return in each page",
          "required": false,
          "type": "number",
          "example": 20
        },
        {
          "name": "order",
          "required": false,
          "type": "string",
          "description": "Order the news by date",
          "example": "desc_date",
          "enum": [
            "asc_date",
            "desc_date"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a paginated collection of news items",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page_size",
                "type": "string",
                "description": "The size of the page being returned",
                "example": "100",
                "required": true
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "Cursor pointing to the next page of results",
                "example": "string",
                "required": true
              },
              {
                "name": "page",
                "type": "string",
                "description": "Current page of results",
                "example": "1",
                "required": true
              },
              {
                "name": "result",
                "type": "array",
                "description": "Contains the result of the news query",
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "id",
                      "type": "number",
                      "description": "The ID of the news item",
                      "example": 152,
                      "required": true
                    },
                    {
                      "name": "tokens",
                      "type": "array",
                      "description": "The tokens associated with the news item",
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "token_address",
                            "type": "string",
                            "description": "The address of the token",
                            "example": "NA",
                            "required": true
                          },
                          {
                            "name": "token_symbol",
                            "type": "string",
                            "description": "The symbol of the token",
                            "example": "AR",
                            "required": true
                          },
                          {
                            "name": "token_name",
                            "type": "string",
                            "description": "The name of the token",
                            "example": "Arweave",
                            "required": true
                          },
                          {
                            "name": "chain",
                            "type": "string",
                            "description": "The blockchain of the token",
                            "example": "Arweave",
                            "required": true
                          },
                          {
                            "name": "change_in_percent",
                            "type": "number",
                            "description": "The change in percent of the token price",
                            "example": 8.4,
                            "required": true
                          }
                        ]
                      },
                      "required": true
                    },
                    {
                      "name": "headline",
                      "type": "string",
                      "description": "The headline of the news item",
                      "example": "AR increased by 8.4%, Binance will support the Arweave $AR network upgrade and hard fork.",
                      "required": true
                    },
                    {
                      "name": "time_of_price_movement",
                      "type": "string",
                      "description": "The time of the price movement",
                      "example": "2023-12-01T10:36:00.000Z",
                      "required": true
                    },
                    {
                      "name": "movement",
                      "type": "string",
                      "description": "The type of price movement",
                      "example": "Positive",
                      "required": true
                    },
                    {
                      "name": "updated_at",
                      "type": "string",
                      "description": "The timestamp when the news item was last updated",
                      "example": "2023-12-18T21:58:08.552Z",
                      "required": true
                    },
                    {
                      "name": "created_at",
                      "type": "string",
                      "description": "The timestamp when the news item was created",
                      "example": "2023-12-01T15:32:00.927Z",
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  },
  "discovery": {
    "getRisingLiquidityTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Identifies the top tokens with rising liquidity.",
      "description": "Identifies the top tokens with rising liquidity.",
      "method": "GET",
      "path": "/discovery/tokens/rising-liquidity",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171"
          ]
        },
        {
          "name": "one_month_liquidity_change_usd",
          "description": "The minimum one month liquidity change in usd of a token",
          "required": false,
          "example": 500000,
          "type": "number"
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 100000000,
          "type": "number"
        },
        {
          "name": "twitter_followers",
          "description": "The minimum twitter followers of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 70,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 1,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns market data for the specified token addresses, including metrics and statistics.",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain_id",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "token_address",
                  "type": "string",
                  "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Maker",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "MKR",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "string",
                  "description": "URL to the token's logo image",
                  "required": true
                },
                {
                  "name": "price_usd",
                  "type": "number",
                  "example": 1,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "security_score",
                  "type": "number",
                  "example": 88,
                  "description": "Security score assigned to the token",
                  "required": true
                },
                {
                  "name": "market_cap",
                  "type": "number",
                  "example": 1351767630.85,
                  "description": "Market capitalization of the token",
                  "required": true
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "number",
                  "example": 1363915420.28,
                  "description": "Fully diluted market cap of the token",
                  "required": true
                },
                {
                  "name": "twitter_followers",
                  "type": "number",
                  "example": 255217,
                  "description": "Number of followers for the token's official Twitter account",
                  "required": true
                },
                {
                  "name": "holders_change",
                  "type": "object",
                  "description": "Changes in the number of token holders over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "liquidity_change_usd",
                  "type": "object",
                  "description": "Changes in liquidity over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "experienced_net_buyers_change",
                  "type": "object",
                  "description": "Changes in the count of experienced net buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "volume_change_usd",
                  "type": "object",
                  "description": "Changes in trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "net_volume_change_usd",
                  "type": "object",
                  "description": "Changes in net trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "price_percent_change_usd",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last month",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getBuyingPressureTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Identifies the top tokens with buying pressure.",
      "description": "Identifies the top tokens with buying pressure.",
      "method": "GET",
      "path": "/discovery/tokens/buying-pressure",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171"
          ]
        },
        {
          "name": "one_month_net_volume_change_usd",
          "description": "The minimum one month net volume change in usd of a token",
          "required": false,
          "example": 1000000,
          "type": "number"
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 100000000,
          "type": "number"
        },
        {
          "name": "twitter_followers",
          "description": "The minimum twitter followers of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 70,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 1,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns market data for the specified token addresses, including metrics and statistics.",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain_id",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "token_address",
                  "type": "string",
                  "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Maker",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "MKR",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "string",
                  "description": "URL to the token's logo image",
                  "required": true
                },
                {
                  "name": "price_usd",
                  "type": "number",
                  "example": 1,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "security_score",
                  "type": "number",
                  "example": 88,
                  "description": "Security score assigned to the token",
                  "required": true
                },
                {
                  "name": "market_cap",
                  "type": "number",
                  "example": 1351767630.85,
                  "description": "Market capitalization of the token",
                  "required": true
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "number",
                  "example": 1363915420.28,
                  "description": "Fully diluted market cap of the token",
                  "required": true
                },
                {
                  "name": "twitter_followers",
                  "type": "number",
                  "example": 255217,
                  "description": "Number of followers for the token's official Twitter account",
                  "required": true
                },
                {
                  "name": "holders_change",
                  "type": "object",
                  "description": "Changes in the number of token holders over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "liquidity_change_usd",
                  "type": "object",
                  "description": "Changes in liquidity over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "experienced_net_buyers_change",
                  "type": "object",
                  "description": "Changes in the count of experienced net buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "volume_change_usd",
                  "type": "object",
                  "description": "Changes in trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "net_volume_change_usd",
                  "type": "object",
                  "description": "Changes in net trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "price_percent_change_usd",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last month",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getSolidPerformersTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Identifies solid-performing tokens.",
      "description": "Identifies solid-performing tokens.",
      "method": "GET",
      "path": "/discovery/tokens/solid-performers",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171"
          ]
        },
        {
          "name": "one_month_net_volume_change_usd",
          "description": "The minimum one month net volume change in usd of a token",
          "required": false,
          "example": 100000,
          "type": "number"
        },
        {
          "name": "one_week_net_volume_change_usd",
          "description": "The minimum one week net volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "one_day_net_volume_change_usd",
          "description": "The minimum one day net volume change in usd of a token",
          "required": false,
          "example": 1,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 80,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 1,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns market data for the specified token addresses, including metrics and statistics.",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain_id",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "token_address",
                  "type": "string",
                  "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Maker",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "MKR",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "string",
                  "description": "URL to the token's logo image",
                  "required": true
                },
                {
                  "name": "price_usd",
                  "type": "number",
                  "example": 1,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "security_score",
                  "type": "number",
                  "example": 88,
                  "description": "Security score assigned to the token",
                  "required": true
                },
                {
                  "name": "market_cap",
                  "type": "number",
                  "example": 1351767630.85,
                  "description": "Market capitalization of the token",
                  "required": true
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "number",
                  "example": 1363915420.28,
                  "description": "Fully diluted market cap of the token",
                  "required": true
                },
                {
                  "name": "twitter_followers",
                  "type": "number",
                  "example": 255217,
                  "description": "Number of followers for the token's official Twitter account",
                  "required": true
                },
                {
                  "name": "holders_change",
                  "type": "object",
                  "description": "Changes in the number of token holders over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "liquidity_change_usd",
                  "type": "object",
                  "description": "Changes in liquidity over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "experienced_net_buyers_change",
                  "type": "object",
                  "description": "Changes in the count of experienced net buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "volume_change_usd",
                  "type": "object",
                  "description": "Changes in trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "net_volume_change_usd",
                  "type": "object",
                  "description": "Changes in net trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "price_percent_change_usd",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last month",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getExperiencedBuyersTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Identifies tokens that experienced buyers are purchasing.",
      "description": "Identifies tokens that experienced buyers are purchasing.",
      "method": "GET",
      "path": "/discovery/tokens/experienced-buyers",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171"
          ]
        },
        {
          "name": "one_week_experienced_net_buyers_change",
          "description": "The minimum one week experienced buyers change of a token",
          "required": false,
          "example": 10,
          "type": "number"
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 100000000,
          "type": "number"
        },
        {
          "name": "twitter_followers",
          "description": "The minimum twitter followers of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 70,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 1,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns market data for the specified token addresses, including metrics and statistics.",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain_id",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "token_address",
                  "type": "string",
                  "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Maker",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "MKR",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "string",
                  "description": "URL to the token's logo image",
                  "required": true
                },
                {
                  "name": "price_usd",
                  "type": "number",
                  "example": 1,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "security_score",
                  "type": "number",
                  "example": 88,
                  "description": "Security score assigned to the token",
                  "required": true
                },
                {
                  "name": "market_cap",
                  "type": "number",
                  "example": 1351767630.85,
                  "description": "Market capitalization of the token",
                  "required": true
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "number",
                  "example": 1363915420.28,
                  "description": "Fully diluted market cap of the token",
                  "required": true
                },
                {
                  "name": "twitter_followers",
                  "type": "number",
                  "example": 255217,
                  "description": "Number of followers for the token's official Twitter account",
                  "required": true
                },
                {
                  "name": "holders_change",
                  "type": "object",
                  "description": "Changes in the number of token holders over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "liquidity_change_usd",
                  "type": "object",
                  "description": "Changes in liquidity over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "experienced_net_buyers_change",
                  "type": "object",
                  "description": "Changes in the count of experienced net buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "volume_change_usd",
                  "type": "object",
                  "description": "Changes in trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "net_volume_change_usd",
                  "type": "object",
                  "description": "Changes in net trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "price_percent_change_usd",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last month",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getRiskyBetsTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Identifies tokens with risky characteristics.",
      "description": "Identifies tokens with risky characteristics.",
      "method": "GET",
      "path": "/discovery/tokens/risky-bets",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171"
          ]
        },
        {
          "name": "max_market_cap",
          "description": "The maximum market cap in usd of a token",
          "required": false,
          "example": 10000000,
          "type": "number"
        },
        {
          "name": "one_week_holders_change",
          "description": "The minimum one week holders change of a token",
          "required": false,
          "example": 25,
          "type": "number"
        },
        {
          "name": "one_week_net_volume_change_usd",
          "description": "The minimum one week net volume change in usd of a token",
          "required": false,
          "example": 500,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 70,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 1,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns market data for the specified token addresses, including metrics and statistics.",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain_id",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "token_address",
                  "type": "string",
                  "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Maker",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "MKR",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "string",
                  "description": "URL to the token's logo image",
                  "required": true
                },
                {
                  "name": "price_usd",
                  "type": "number",
                  "example": 1,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "security_score",
                  "type": "number",
                  "example": 88,
                  "description": "Security score assigned to the token",
                  "required": true
                },
                {
                  "name": "market_cap",
                  "type": "number",
                  "example": 1351767630.85,
                  "description": "Market capitalization of the token",
                  "required": true
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "number",
                  "example": 1363915420.28,
                  "description": "Fully diluted market cap of the token",
                  "required": true
                },
                {
                  "name": "twitter_followers",
                  "type": "number",
                  "example": 255217,
                  "description": "Number of followers for the token's official Twitter account",
                  "required": true
                },
                {
                  "name": "holders_change",
                  "type": "object",
                  "description": "Changes in the number of token holders over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "liquidity_change_usd",
                  "type": "object",
                  "description": "Changes in liquidity over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "experienced_net_buyers_change",
                  "type": "object",
                  "description": "Changes in the count of experienced net buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "volume_change_usd",
                  "type": "object",
                  "description": "Changes in trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "net_volume_change_usd",
                  "type": "object",
                  "description": "Changes in net trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "price_percent_change_usd",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last month",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getBlueChipTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Identifies blue-chip tokens.",
      "description": "Identifies blue-chip tokens.",
      "method": "GET",
      "path": "/discovery/tokens/blue-chip",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171"
          ]
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 250000000,
          "type": "number"
        },
        {
          "name": "one_week_price_percent_change_usd",
          "description": "The minimum one week price percentage change of a token",
          "required": false,
          "example": 2,
          "type": "number"
        },
        {
          "name": "one_day_price_percent_change_usd",
          "description": "The minimum one day price percentage change of a token",
          "required": false,
          "example": 2,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 70,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 1,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns market data for the specified token addresses, including metrics and statistics.",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain_id",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "token_address",
                  "type": "string",
                  "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Maker",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "MKR",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "string",
                  "description": "URL to the token's logo image",
                  "required": true
                },
                {
                  "name": "price_usd",
                  "type": "number",
                  "example": 1,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "security_score",
                  "type": "number",
                  "example": 88,
                  "description": "Security score assigned to the token",
                  "required": true
                },
                {
                  "name": "market_cap",
                  "type": "number",
                  "example": 1351767630.85,
                  "description": "Market capitalization of the token",
                  "required": true
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "number",
                  "example": 1363915420.28,
                  "description": "Fully diluted market cap of the token",
                  "required": true
                },
                {
                  "name": "twitter_followers",
                  "type": "number",
                  "example": 255217,
                  "description": "Number of followers for the token's official Twitter account",
                  "required": true
                },
                {
                  "name": "holders_change",
                  "type": "object",
                  "description": "Changes in the number of token holders over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "liquidity_change_usd",
                  "type": "object",
                  "description": "Changes in liquidity over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "experienced_net_buyers_change",
                  "type": "object",
                  "description": "Changes in the count of experienced net buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "volume_change_usd",
                  "type": "object",
                  "description": "Changes in trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "net_volume_change_usd",
                  "type": "object",
                  "description": "Changes in net trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "price_percent_change_usd",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last month",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getDiscoveryToken": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get token details",
      "description": "Get token details",
      "method": "GET",
      "path": "/discovery/token",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": true,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171",
            "base",
            "0x2105"
          ]
        },
        {
          "name": "token_address",
          "description": "The address of the token",
          "required": true,
          "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain_id",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "token_address",
                  "type": "string",
                  "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Maker",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "MKR",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "string",
                  "description": "URL to the token's logo image",
                  "required": false
                },
                {
                  "name": "price_usd",
                  "type": "number",
                  "example": 1,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "token_age_in_days",
                  "type": "number",
                  "example": 1,
                  "description": "Age of the token in days",
                  "required": true
                },
                {
                  "name": "on_chain_strength_index",
                  "type": "number",
                  "example": 1,
                  "description": "Index representing the on-chain strength of the token",
                  "required": true
                },
                {
                  "name": "security_score",
                  "type": "number",
                  "example": 88,
                  "description": "Security score assigned to the token",
                  "required": true
                },
                {
                  "name": "market_cap",
                  "type": "number",
                  "example": 1351767630.85,
                  "description": "Market capitalization of the token",
                  "required": true
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "number",
                  "example": 1363915420.28,
                  "description": "Fully diluted market cap of the token",
                  "required": true
                },
                {
                  "name": "twitter_followers",
                  "type": "number",
                  "example": 255217,
                  "description": "Number of followers for the token's official Twitter account",
                  "required": true
                },
                {
                  "name": "holders_change",
                  "type": "object",
                  "description": "Changes in the number of token holders over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "liquidity_change_usd",
                  "type": "object",
                  "description": "Changes in liquidity over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "experienced_net_buyers_change",
                  "type": "object",
                  "description": "Changes in the count of experienced net buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "volume_change_usd",
                  "type": "object",
                  "description": "Changes in trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "net_volume_change_usd",
                  "type": "object",
                  "description": "Changes in net trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "price_percent_change_usd",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last month",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getTopGainersTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with top gainers",
      "description": "Get tokens with top gainers",
      "method": "GET",
      "path": "/discovery/tokens/top-gainers",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171",
            "base",
            "0x2105"
          ]
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 50000000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 80,
          "type": "number"
        },
        {
          "name": "time_frame",
          "description": "The time frame used for price percent change ordering in response",
          "required": false,
          "example": "1d",
          "type": "string",
          "enum": [
            "1h",
            "1d",
            "1w",
            "1M"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain_id",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "token_address",
                  "type": "string",
                  "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Maker",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "MKR",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "string",
                  "description": "URL to the token's logo image",
                  "required": false
                },
                {
                  "name": "price_usd",
                  "type": "number",
                  "example": 1,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "token_age_in_days",
                  "type": "number",
                  "example": 1,
                  "description": "Age of the token in days",
                  "required": true
                },
                {
                  "name": "on_chain_strength_index",
                  "type": "number",
                  "example": 1,
                  "description": "Index representing the on-chain strength of the token",
                  "required": true
                },
                {
                  "name": "security_score",
                  "type": "number",
                  "example": 88,
                  "description": "Security score assigned to the token",
                  "required": true
                },
                {
                  "name": "market_cap",
                  "type": "number",
                  "example": 1351767630.85,
                  "description": "Market capitalization of the token",
                  "required": true
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "number",
                  "example": 1363915420.28,
                  "description": "Fully diluted market cap of the token",
                  "required": true
                },
                {
                  "name": "twitter_followers",
                  "type": "number",
                  "example": 255217,
                  "description": "Number of followers for the token's official Twitter account",
                  "required": true
                },
                {
                  "name": "holders_change",
                  "type": "object",
                  "description": "Changes in the number of token holders over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "liquidity_change_usd",
                  "type": "object",
                  "description": "Changes in liquidity over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "experienced_net_buyers_change",
                  "type": "object",
                  "description": "Changes in the count of experienced net buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "volume_change_usd",
                  "type": "object",
                  "description": "Changes in trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "net_volume_change_usd",
                  "type": "object",
                  "description": "Changes in net trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "price_percent_change_usd",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last month",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getTopLosersTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with top losers",
      "description": "Get tokens with top losers",
      "method": "GET",
      "path": "/discovery/tokens/top-losers",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "pulsechain",
            "0x171",
            "base",
            "0x2105"
          ]
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 50000000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 80,
          "type": "number"
        },
        {
          "name": "time_frame",
          "description": "The time frame used for price percent change ordering in response",
          "required": false,
          "example": "1d",
          "type": "string",
          "enum": [
            "1h",
            "1d",
            "1w",
            "1M"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "chain_id",
                  "type": "string",
                  "example": "0x1",
                  "description": "The blockchain identifier the token is on",
                  "required": true
                },
                {
                  "name": "token_address",
                  "type": "string",
                  "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
                  "description": "The contract address of the token",
                  "required": true
                },
                {
                  "name": "token_name",
                  "type": "string",
                  "example": "Maker",
                  "description": "The official name of the token",
                  "required": true
                },
                {
                  "name": "token_symbol",
                  "type": "string",
                  "example": "MKR",
                  "description": "The abbreviated symbol of the token",
                  "required": true
                },
                {
                  "name": "token_logo",
                  "type": "string",
                  "example": "string",
                  "description": "URL to the token's logo image",
                  "required": false
                },
                {
                  "name": "price_usd",
                  "type": "number",
                  "example": 1,
                  "description": "Current price of the token in USD",
                  "required": true
                },
                {
                  "name": "token_age_in_days",
                  "type": "number",
                  "example": 1,
                  "description": "Age of the token in days",
                  "required": true
                },
                {
                  "name": "on_chain_strength_index",
                  "type": "number",
                  "example": 1,
                  "description": "Index representing the on-chain strength of the token",
                  "required": true
                },
                {
                  "name": "security_score",
                  "type": "number",
                  "example": 88,
                  "description": "Security score assigned to the token",
                  "required": true
                },
                {
                  "name": "market_cap",
                  "type": "number",
                  "example": 1351767630.85,
                  "description": "Market capitalization of the token",
                  "required": true
                },
                {
                  "name": "fully_diluted_valuation",
                  "type": "number",
                  "example": 1363915420.28,
                  "description": "Fully diluted market cap of the token",
                  "required": true
                },
                {
                  "name": "twitter_followers",
                  "type": "number",
                  "example": 255217,
                  "description": "Number of followers for the token's official Twitter account",
                  "required": true
                },
                {
                  "name": "holders_change",
                  "type": "object",
                  "description": "Changes in the number of token holders over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "liquidity_change_usd",
                  "type": "object",
                  "description": "Changes in liquidity over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in liquidity in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in liquidity in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "experienced_net_buyers_change",
                  "type": "object",
                  "description": "Changes in the count of experienced net buyers over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in experienced net buyers in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in experienced net buyers in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "volume_change_usd",
                  "type": "object",
                  "description": "Changes in trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "net_volume_change_usd",
                  "type": "object",
                  "description": "Changes in net trading volume over various time periods, in USD",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Change in net volume in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Change in net volume in the last month",
                      "required": true
                    }
                  ]
                },
                {
                  "name": "price_percent_change_usd",
                  "type": "object",
                  "description": "Percentage changes in token price over various time periods",
                  "required": true,
                  "fields": [
                    {
                      "name": "1h",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last hour",
                      "required": true
                    },
                    {
                      "name": "1d",
                      "type": "number",
                      "example": 14,
                      "description": "Percentage price change in the last day",
                      "required": true
                    },
                    {
                      "name": "1w",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last week",
                      "required": true
                    },
                    {
                      "name": "1M",
                      "type": "number",
                      "example": 162,
                      "description": "Percentage price change in the last month",
                      "required": true
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    "getFilteredTokens": {
      "apiHost": "https://deep-index.moralis.io",
      "summary": "Get Filtered Tokens",
      "description": "Returns filtered tokens based on specified metrics and criteria.",
      "method": "POST",
      "path": "/api/v2.2/discovery/tokens",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for filtering tokens",
        "type": "object",
        "fields": [
          {
            "name": "chain",
            "type": "string",
            "required": true,
            "description": "The chain ID in hex format for EVM chains else solana",
            "example": "0x1"
          },
          {
            "name": "filters",
            "type": "array",
            "required": true,
            "description": "Array of filter criteria",
            "example": [
              {
                "metric": "experiencedBuyers",
                "timeFrame": "oneMonth",
                "gt": "10"
              }
            ],
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "metric",
                  "type": "string",
                  "description": "The metric to filter on",
                  "example": "experiencedBuyers"
                },
                {
                  "name": "timeFrame",
                  "type": "string",
                  "description": "The time frame for the filter",
                  "example": "oneMonth"
                },
                {
                  "name": "gt",
                  "type": "string",
                  "description": "Greater-than value for the filter.",
                  "required": false,
                  "example": "10"
                },
                {
                  "name": "lt",
                  "type": "string",
                  "description": "Less-than value for the filter.",
                  "required": false
                },
                {
                  "name": "eq",
                  "type": "string",
                  "description": "Equal to value for the filter.",
                  "required": false
                }
              ]
            }
          },
          {
            "name": "sortBy",
            "type": "object",
            "required": false,
            "description": "Sorting criteria",
            "fields": [
              {
                "name": "metric",
                "type": "string",
                "required": true,
                "description": "Metric to sort by",
                "example": "experiencedBuyers"
              },
              {
                "name": "timeFrame",
                "type": "string",
                "required": true,
                "description": "Time frame for the metric",
                "example": "oneMonth"
              },
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "Sort direction (ASC or DESC)",
                "example": "DESC"
              }
            ]
          },
          {
            "name": "timeFramesToReturn",
            "type": "array",
            "required": false,
            "description": "List of time frames to include in the response.",
            "field": {
              "type": "string",
              "example": "oneDay"
            }
          },
          {
            "name": "metricsToReturn",
            "type": "array",
            "required": false,
            "description": "Metrics to include in response",
            "field": {
              "type": "string",
              "example": "marketCap"
            }
          },
          {
            "name": "limit",
            "type": "number",
            "required": false,
            "description": "Maximum number of results to return",
            "example": 5
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns filtered token data",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "metadata",
                "type": "object",
                "required": true,
                "description": "Token metadata",
                "fields": [
                  {
                    "name": "tokenAddress",
                    "type": "string",
                    "required": true,
                    "description": "The token contract address",
                    "example": "0x55d398326f99059ff775485246999027b3197955"
                  },
                  {
                    "name": "chainId",
                    "type": "string",
                    "required": true,
                    "description": "The chain ID in hex format",
                    "example": "0x1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "required": true,
                    "description": "Token name",
                    "example": "Tether USD"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "required": true,
                    "description": "Token symbol",
                    "example": "USDT"
                  },
                  {
                    "name": "decimals",
                    "type": "number",
                    "required": true,
                    "description": "Token decimals",
                    "example": 18
                  },
                  {
                    "name": "logo",
                    "type": "string",
                    "required": true,
                    "description": "URL to token logo",
                    "example": "https://example.com/logo.png"
                  },
                  {
                    "name": "blockNumberMinted",
                    "type": "number",
                    "required": true,
                    "description": "Block number when token was minted",
                    "example": 176416
                  },
                  {
                    "name": "usdPrice",
                    "type": "number",
                    "required": true,
                    "description": "Current USD price of token",
                    "example": 0.9982436729635321
                  },
                  {
                    "name": "security",
                    "type": "object",
                    "required": true,
                    "description": "Security information about the token",
                    "fields": [
                      {
                        "name": "isOpenSource",
                        "type": "boolean",
                        "required": true,
                        "description": "Whether contract is open source",
                        "example": true
                      },
                      {
                        "name": "isProxy",
                        "type": "boolean",
                        "required": true,
                        "description": "Whether contract is a proxy",
                        "example": false
                      },
                      {
                        "name": "isMintable",
                        "type": "boolean",
                        "required": true,
                        "description": "Whether token is mintable",
                        "example": true
                      },
                      {
                        "name": "hiddenOwner",
                        "type": "boolean",
                        "required": true,
                        "description": "Whether contract has hidden owner",
                        "example": false
                      },
                      {
                        "name": "buyTax",
                        "type": "string",
                        "required": true,
                        "description": "Buy tax percentage",
                        "example": "0"
                      },
                      {
                        "name": "sellTax",
                        "type": "string",
                        "required": true,
                        "description": "Sell tax percentage",
                        "example": "0"
                      },
                      {
                        "name": "cannotBuy",
                        "type": "boolean",
                        "required": true,
                        "description": "Whether token cannot be bought",
                        "example": false
                      },
                      {
                        "name": "cannotSellAll",
                        "type": "boolean",
                        "required": true,
                        "description": "Whether all tokens cannot be sold",
                        "example": false
                      },
                      {
                        "name": "isHoneyPot",
                        "type": "boolean",
                        "required": true,
                        "description": "Whether token is a honeypot",
                        "example": false
                      }
                    ]
                  }
                ]
              },
              {
                "name": "metrics",
                "type": "object",
                "required": true,
                "description": "Token metrics data",
                "example": {}
              }
            ]
          }
        }
      ]
    }
  },
  "rpc": {
    "evmRpc": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Retrieve Ethereum Accounts",
      "description": "Executes a JSON-RPC 2.0 call to retrieve Ethereum account addresses that are available on the node. This method does not require any additional parameters.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "JSON-RPC 2.0 request body",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "Version of the JSON-RPC protocol.",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "Identifier for the request, must be unique for each request.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The name of the RPC method to be invoked.",
            "example": "eth_estimateGas",
            "enum": [
              "eth_blockNumber",
              "eth_call",
              "eth_chainId",
              "eth_createAccessList",
              "eth_estimateGas",
              "eth_feeHistory",
              "eth_gasPrice",
              "eth_getBalance",
              "eth_getBlockByHash",
              "eth_getBlockByNumber",
              "eth_getBlockTransactionCountByHash",
              "eth_getBlockTransactionCountByNumber",
              "eth_getBlockReceipts",
              "eth_getCode",
              "eth_getLogs",
              "eth_getProof",
              "eth_getStorageAt",
              "eth_getTransactionByHash",
              "eth_getTransactionByBlockHashAndIndex",
              "eth_getTransactionByBlockNumberAndIndex",
              "eth_getTransactionCount",
              "eth_getTransactionReceipt",
              "eth_getUncleByBlockHashAndIndex",
              "eth_getUncleByBlockNumberAndIndex",
              "eth_getUncleCountByBlockHash",
              "eth_getUncleCountByBlockNumber",
              "eth_maxPriorityFeePerGas",
              "eth_sendRawTransaction"
            ]
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the RPC method.",
            "example": [
              {
                "from": "0x4838B106FCe9647Bdf1E7877BF73cE8B0BAD5f97",
                "to": "0xd4E96eF8eee8678dBFf4d535E033Ed1a4F7605b7",
                "value": "0x132a0"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the response from RPC nodes.",
          "body": {
            "type": "object",
            "description": "Refer to the RPC schema docs for more details on the resposne definitions of each RPC method.",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "description": "Version of the JSON-RPC protocol. Will be \"2.0\".",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "integer",
                "description": "Identifier for the response, matching the request id.",
                "example": 1
              },
              {
                "name": "result",
                "type": "array",
                "description": "Refer to RPC schema docs for more details on the resposne definitions of each RPC method."
              }
            ]
          }
        }
      ]
    },
    "eth_blockNumber": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Current Block Number",
      "description": "Returns the number of the most recent block on the chain.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for the eth_blockNumber method.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_blockNumber"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters to be passed to the method (empty for eth_blockNumber).",
            "example": []
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the current block number as a hex code.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The current block number in hexadecimal.",
                "example": "0x5b8d80"
              }
            ]
          }
        }
      ]
    },
    "eth_call": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Executes a new message call immediately without creating a transaction on the block chain.",
      "description": "The eth_call method allows for the execution of a message call to a contract. It can be used to call functions on contracts without sending a transaction. This means it doesn't alter the blockchain and is executed only locally to return a response.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for the eth_call method.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_call"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the call, including the transaction call object and optionally the block number.",
            "example": [
              {
                "to": "0x407d73d8a49eeb85d32cf465507dd71d507100c1",
                "data": "0x06fdde03"
              },
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the result of the contract function call.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The returned data from the contract function, encoded.",
                "example": "0x"
              }
            ]
          }
        }
      ]
    },
    "eth_chainId": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get the current chain ID",
      "description": "Returns the current chain ID, identifying the current blockchain. The chain ID is a unique identifier for each blockchain and is used for transaction signing to prevent replay attacks across chains.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for the eth_chainId method.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_chainId"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method (empty for eth_chainId).",
            "example": []
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the chain ID of the current blockchain.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The current chain ID, as a hexadecimal.",
                "example": "0x1"
              }
            ]
          }
        }
      ]
    },
    "eth_createAccessList": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Create Access List",
      "description": "This example demonstrates generating an access list for a hypothetical transaction that interacts with a contract. The access list helps in optimizing gas costs for transactions by pre-specifying accounts and storage keys the transaction intends to access.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with. In this example, 'eth' is used to denote Ethereum Mainnet.",
          "example": "eth",
          "enum": [
            "eth",
            "holesky",
            "polygon",
            "polygon amoy",
            "bsc",
            "bsc testnet",
            "arbitrum",
            "arbitrum sepolia",
            "optimism",
            "optimism testnet",
            "base",
            "base sepolia"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication. Replace 'YOUR_API_KEY' with your actual Moralis API key.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for generating an access list based on a transaction object.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "Specifies the JSON-RPC protocol version, which is 2.0 for this example.",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "A unique identifier for the request.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being called. For creating an access list, 'eth_createAccessList' is used.",
            "example": "eth_createAccessList"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "An array containing the transaction object for which to generate the access list, and optionally the block number.",
            "example": [
              {
                "from": "0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe",
                "to": "0x4e6f6D7edB5CBD081670C1F898BBF721c4a24695",
                "gas": "0x76c0",
                "gasPrice": "0x9184e72a000",
                "value": "0x0",
                "data": "0x3c11dde50000000000000000000000000000000000000000000000000000000000000003"
              },
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Successful response with the generated access list and gas used.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC protocol version.",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier matching the request.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "Contains the access list and the gas used for the transaction.",
                "fields": [
                  {
                    "name": "accessList",
                    "type": "array",
                    "description": "Generated access list detailing accounts and storage keys the transaction will access.",
                    "example": [
                      {
                        "address": "0x4e6f6D7edB5CBD081670C1F898BBF721c4a24695",
                        "storageKeys": [
                          "0x0000000000000000000000000000000000000000000000000000000000000000"
                        ]
                      }
                    ]
                  },
                  {
                    "name": "gasUsed",
                    "type": "string",
                    "description": "The gas used for generating the access list.",
                    "example": "0x5208"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "eth_estimateGas": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Estimate Gas",
      "description": "Estimates the amount of gas required to execute a transaction. This method does not execute the transaction but simulates its execution to estimate the gas amount. It's useful for adjusting gas limits before sending transactions to ensure they succeed without running out of gas.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for estimating gas required for a transaction.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_estimateGas"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the transaction to estimate gas for, including details like the sender, receiver, gas price, and value.",
            "example": [
              {
                "from": "0xa83114A443dA1CecEFC50368531cACE9F37fCCcb",
                "to": "0x354f3eD35Ae1a182aF933b793e49d3c86CFcDc63",
                "gasPrice": "0x4a817c800",
                "value": "0x0",
                "data": "0xa9059cbb000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c10000000000000000000000000000000000000000000000000000000000000064"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the estimated gas required for the transaction.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The estimated gas amount as a hexadecimal.",
                "example": "0x5208"
              }
            ]
          }
        }
      ]
    },
    "eth_feeHistory": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Retrieve Fee History",
      "description": "Retrieves historical data about transaction fees. The method returns the base fee per gas and reward (priority fee) ranges paid in each block for the requested block range. Useful for estimating appropriate fees for future transactions.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving fee history.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_feeHistory"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the fee history request, including the number of blocks to include, the target block, and the percentile ranges of transaction fees.",
            "example": [
              "0x10",
              "latest",
              [
                25,
                50,
                75
              ]
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns historical fee data for the requested block range.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "Contains the fee history data.",
                "fields": [
                  {
                    "name": "oldestBlock",
                    "type": "string",
                    "description": "The oldest block (in hexadecimal) in the requested range.",
                    "example": "0x9cace7"
                  },
                  {
                    "name": "baseFeePerGas",
                    "type": "array",
                    "field": {
                      "type": "string",
                      "description": "Base fee per gas for each block, in hexadecimal.",
                      "example": "0x4c4b40"
                    },
                    "description": "Array of base fee per gas for each block, in hexadecimal."
                  },
                  {
                    "name": "gasUsedRatio",
                    "type": "array",
                    "field": {
                      "type": "number",
                      "description": "Ratio of gas used to gas limit for the block.",
                      "example": 1.5
                    },
                    "description": "Array of ratios of gas used to gas limit for each block."
                  },
                  {
                    "name": "reward",
                    "type": "array",
                    "field": {
                      "type": "array",
                      "field": {
                        "type": "string",
                        "description": "Reward (priority fee) paid for the percentile.",
                        "example": "0x34630b8a00"
                      },
                      "description": "Array containing the reward (priority fee) paid for each percentile."
                    },
                    "description": "Array of arrays containing the reward (priority fee) paid for each percentile."
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "eth_gasPrice": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Current Gas Price",
      "description": "Returns the current gas price in wei, which is the median gas price of the latest blocks. This value can be used to set the gas price for new transactions.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the current gas price.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_gasPrice"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the gas price request (empty for eth_gasPrice).",
            "example": []
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the current gas price in wei.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The current gas price in wei, as a hexadecimal.",
                "example": "0x3b9aca00"
              }
            ]
          }
        }
      ]
    },
    "eth_getBalance": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Account Balance",
      "description": "Returns the balance of the account of a given address at a specific block number.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the account balance.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getBalance"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the balance request, including the address and the block number.",
            "example": [
              "0x407d73d8a49eeb85d32cf465507dd71d507100c1",
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the balance of the account in wei.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The balance of the account in wei, as a hexadecimal.",
                "example": "0xde0b6b3a7640000"
              }
            ]
          }
        }
      ]
    },
    "eth_getBlockByHash": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Block by Hash",
      "description": "Returns information about a block by hash. Optionally, it can also return the full transaction objects if the second parameter is set to `true`; otherwise, only the transaction hashes are returned.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving block information by hash.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getBlockByHash"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the block query, including the block hash and a boolean indicating whether to return full transaction objects.",
            "example": [
              "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f",
              true
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns detailed information about the requested block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "Object containing the block information.",
                "fields": [
                  {
                    "name": "number",
                    "type": "string",
                    "description": "The block number.",
                    "example": "0x10d4f"
                  },
                  {
                    "name": "hash",
                    "type": "string",
                    "description": "The hash of the block.",
                    "example": "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f"
                  },
                  {
                    "name": "transactions",
                    "type": "array",
                    "description": "Array of transaction objects or hashes included in the block.",
                    "field": {
                      "type": "object",
                      "fields": [
                        {
                          "name": "blockHash",
                          "type": "string",
                          "description": "The hash of the block.",
                          "example": "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f"
                        },
                        {
                          "name": "blockNumber",
                          "type": "string",
                          "description": "The number of the block.",
                          "example": "0x15df"
                        },
                        {
                          "name": "from",
                          "type": "string",
                          "description": "The sender address.",
                          "example": "0x354f3eD35Ae1a182aF933b793e49d3c86CFcDc63"
                        },
                        {
                          "name": "to",
                          "type": "string",
                          "description": "The receiver address.",
                          "example": "0x354f3eD35Ae1a182aF933b793e49d3c86CFcDc63"
                        }
                      ]
                    }
                  },
                  {
                    "name": "parentHash",
                    "type": "string",
                    "description": "The hash of the parent block.",
                    "example": "0xd584c5509e3a3d4b2d3bbde4c8e8c0adec7f5c560e9d42b8f12f3c039dd40e92"
                  },
                  {
                    "name": "nonce",
                    "type": "string",
                    "description": "The nonce that was used to generate the block.",
                    "example": "0x0000000000000000"
                  },
                  {
                    "name": "sha3Uncles",
                    "type": "string",
                    "description": "SHA3 of the uncles data in the block.",
                    "example": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"
                  },
                  {
                    "name": "logsBloom",
                    "type": "string",
                    "description": "The bloom filter for the logs of the block.",
                    "example": "0x00000000..."
                  },
                  {
                    "name": "transactionsRoot",
                    "type": "string",
                    "description": "The root of the transaction trie of the block.",
                    "example": "0x3a1b2c..."
                  },
                  {
                    "name": "stateRoot",
                    "type": "string",
                    "description": "The root of the final state trie of the block.",
                    "example": "0xf1132b..."
                  },
                  {
                    "name": "receiptsRoot",
                    "type": "string",
                    "description": "The root of the receipts trie of the block.",
                    "example": "0x140f3e..."
                  },
                  {
                    "name": "miner",
                    "type": "string",
                    "description": "The address of the miner who mined the block.",
                    "example": "0x4e65fda2159562a496f9f3522f89122a3088497a"
                  },
                  {
                    "name": "difficulty",
                    "type": "string",
                    "description": "The difficulty level of the block.",
                    "example": "0xffffffff"
                  },
                  {
                    "name": "totalDifficulty",
                    "type": "string",
                    "description": "The total difficulty of the chain up to this block.",
                    "example": "0x222e4800"
                  },
                  {
                    "name": "extraData",
                    "type": "string",
                    "description": "Extra data related to the block.",
                    "example": "0xd783010703846765746887676f312e392e34856c696e7578"
                  },
                  {
                    "name": "size",
                    "type": "string",
                    "description": "The size of the block in bytes.",
                    "example": "0x280"
                  },
                  {
                    "name": "gasLimit",
                    "type": "string",
                    "description": "The maximum gas allowed in this block.",
                    "example": "0x47e7c4"
                  },
                  {
                    "name": "gasUsed",
                    "type": "string",
                    "description": "The total used gas by all transactions in this block.",
                    "example": "0x45f3"
                  },
                  {
                    "name": "timestamp",
                    "type": "string",
                    "description": "The timestamp for when the block was collated.",
                    "example": "0x5a5b8d80"
                  },
                  {
                    "name": "uncles",
                    "type": "array",
                    "description": "List of uncle hashes.",
                    "field": {
                      "type": "string",
                      "description": "The hash of each uncle.",
                      "example": "0x1602e3..."
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "eth_getBlockByNumber": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Block by Number",
      "description": "Retrieves information about a block by its block number. The method can optionally return full transaction objects within the block if the second parameter is set to true; otherwise, it returns only the transaction hashes.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving block information by number.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getBlockByNumber"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the block query, including the block number (in hexadecimal or predefined tags like 'latest', 'earliest', 'pending') and a boolean indicating whether to return full transaction objects.",
            "example": [
              "latest",
              true
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns detailed information about the requested block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "Object containing detailed block information.",
                "fields": [
                  {
                    "name": "number",
                    "type": "string",
                    "description": "The block number.",
                    "example": "0x10d4f"
                  },
                  {
                    "name": "hash",
                    "type": "string",
                    "description": "The hash of the block.",
                    "example": "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f"
                  },
                  {
                    "name": "transactions",
                    "type": "array",
                    "description": "Array of transaction objects or hashes included in the block.",
                    "field": {
                      "type": "object",
                      "fields": [
                        {
                          "name": "blockHash",
                          "type": "string",
                          "description": "The hash of the block.",
                          "example": "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f"
                        },
                        {
                          "name": "blockNumber",
                          "type": "string",
                          "description": "The number of the block.",
                          "example": "0x15df"
                        },
                        {
                          "name": "from",
                          "type": "string",
                          "description": "The sender address.",
                          "example": "0x354f3eD35Ae1a182aF933b793e49d3c86CFcDc63"
                        },
                        {
                          "name": "to",
                          "type": "string",
                          "description": "The receiver address.",
                          "example": "0x354f3eD35Ae1a182aF933b793e49d3c86CFcDc63"
                        }
                      ]
                    }
                  },
                  {
                    "name": "parentHash",
                    "type": "string",
                    "description": "The hash of the parent block.",
                    "example": "0xd584c5509e3a3d4b2d3bbde4c8e8c0adec7f5c560e9d42b8f12f3c039dd40e92"
                  },
                  {
                    "name": "nonce",
                    "type": "string",
                    "description": "The nonce that was used to generate the block.",
                    "example": "0x0000000000000000"
                  },
                  {
                    "name": "sha3Uncles",
                    "type": "string",
                    "description": "SHA3 of the uncles data in the block.",
                    "example": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"
                  },
                  {
                    "name": "logsBloom",
                    "type": "string",
                    "description": "The bloom filter for the logs of the block.",
                    "example": "0x00000000..."
                  },
                  {
                    "name": "transactionsRoot",
                    "type": "string",
                    "description": "The root of the transaction trie of the block.",
                    "example": "0x3a1b2c..."
                  },
                  {
                    "name": "stateRoot",
                    "type": "string",
                    "description": "The root of the final state trie of the block.",
                    "example": "0xf1132b..."
                  },
                  {
                    "name": "receiptsRoot",
                    "type": "string",
                    "description": "The root of the receipts trie of the block.",
                    "example": "0x140f3e..."
                  },
                  {
                    "name": "miner",
                    "type": "string",
                    "description": "The address of the miner who mined the block.",
                    "example": "0x4e65fda2159562a496f9f3522f89122a3088497a"
                  },
                  {
                    "name": "difficulty",
                    "type": "string",
                    "description": "The difficulty level of the block.",
                    "example": "0xffffffff"
                  },
                  {
                    "name": "totalDifficulty",
                    "type": "string",
                    "description": "The total difficulty of the chain up to this block.",
                    "example": "0x222e4800"
                  },
                  {
                    "name": "extraData",
                    "type": "string",
                    "description": "Extra data related to the block.",
                    "example": "0xd783010703846765746887676f312e392e34856c696e7578"
                  },
                  {
                    "name": "size",
                    "type": "string",
                    "description": "The size of the block in bytes.",
                    "example": "0x280"
                  },
                  {
                    "name": "gasLimit",
                    "type": "string",
                    "description": "The maximum gas allowed in this block.",
                    "example": "0x47e7c4"
                  },
                  {
                    "name": "gasUsed",
                    "type": "string",
                    "description": "The total used gas by all transactions in this block.",
                    "example": "0x45f3"
                  },
                  {
                    "name": "timestamp",
                    "type": "string",
                    "description": "The timestamp for when the block was collated.",
                    "example": "0x5a5b8d80"
                  },
                  {
                    "name": "uncles",
                    "type": "array",
                    "description": "List of uncle hashes.",
                    "field": {
                      "type": "string",
                      "description": "The hash of each uncle.",
                      "example": "0x1602e3..."
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "eth_getBlockTransactionCountByHash": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Block Transaction Count by Hash",
      "description": "Returns the number of transactions in a block from a block matching the given hash.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the transaction count by block hash.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getBlockTransactionCountByHash"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the block hash.",
            "example": [
              "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the number of transactions in the specified block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The number of transactions in the block, as a hexadecimal.",
                "example": "0x5"
              }
            ]
          }
        }
      ]
    },
    "eth_getBlockTransactionCountByNumber": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Block Transaction Count by Number",
      "description": "Returns the number of transactions in a block from a block matching the given number. The block number can be specified as a hexadecimal value or as one of the special strings 'latest', 'earliest', or 'pending'.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the transaction count by block number.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getBlockTransactionCountByNumber"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the block number.",
            "example": [
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the number of transactions in the specified block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The number of transactions in the block, as a hexadecimal.",
                "example": "0xa"
              }
            ]
          }
        }
      ]
    },
    "eth_getBlockReceipts": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Transaction Receipts by Block",
      "description": "Hypothetically retrieves all transaction receipts for a given block. This method would return detailed receipt information for each transaction contained within the specified block.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving transaction receipts by block.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getBlockReceipts"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the block identifier (number or hash).",
            "example": [
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns all transaction receipts for the specified block.",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "blockHash",
                  "type": "string",
                  "description": "Hash of the block where the transaction was included.",
                  "example": "0x..."
                },
                {
                  "name": "blockNumber",
                  "type": "string",
                  "description": "Block number where the transaction was included.",
                  "example": "0x..."
                },
                {
                  "name": "contractAddress",
                  "type": "string",
                  "description": "The contract address created, if the transaction was a contract creation, otherwise null.",
                  "example": null
                },
                {
                  "name": "cumulativeGasUsed",
                  "type": "string",
                  "description": "The total amount of gas used when this transaction was executed in the block.",
                  "example": "0x..."
                },
                {
                  "name": "effectiveGasPrice",
                  "type": "string",
                  "description": "The effective gas price paid by the transaction.",
                  "example": "0x..."
                },
                {
                  "name": "from",
                  "type": "string",
                  "description": "Address of the sender.",
                  "example": "0x..."
                },
                {
                  "name": "gasUsed",
                  "type": "string",
                  "description": "The amount of gas used by this transaction alone.",
                  "example": "0x..."
                },
                {
                  "name": "logs",
                  "type": "array",
                  "description": "Array of log objects, which this transaction generated.",
                  "field": {
                    "type": "object",
                    "fields": [
                      {
                        "name": "address",
                        "type": "string",
                        "description": "Address from which the log originated.",
                        "example": "0x..."
                      },
                      {
                        "name": "topics",
                        "type": "array",
                        "description": "Array of topics associated with the log.",
                        "field": {
                          "type": "string",
                          "description": "Specific log topic.",
                          "example": "0x..."
                        }
                      },
                      {
                        "name": "data",
                        "type": "string",
                        "description": "The data contained in the log.",
                        "example": "0x..."
                      },
                      {
                        "name": "blockNumber",
                        "type": "string",
                        "description": "The block number where this log was in.",
                        "example": "0x..."
                      },
                      {
                        "name": "transactionHash",
                        "type": "string",
                        "description": "Hash of the transactions this log was created from.",
                        "example": "0x..."
                      },
                      {
                        "name": "transactionIndex",
                        "type": "string",
                        "description": "Integer of the transaction's index position in the block.",
                        "example": "0x..."
                      },
                      {
                        "name": "blockHash",
                        "type": "string",
                        "description": "Hash of the block where this log was in.",
                        "example": "0x..."
                      },
                      {
                        "name": "logIndex",
                        "type": "string",
                        "description": "Integer of the log's index position in the block.",
                        "example": "0x..."
                      },
                      {
                        "name": "removed",
                        "type": "boolean",
                        "description": "Indicates if the log was removed due to a chain reorganization.",
                        "example": false
                      }
                    ]
                  }
                },
                {
                  "name": "logsBloom",
                  "type": "string",
                  "description": "The bloom filter for the logs of the block.",
                  "example": "0x..."
                },
                {
                  "name": "status",
                  "type": "string",
                  "description": "The status of the transaction (0x1 for success, 0x0 for failure).",
                  "example": "0x1"
                },
                {
                  "name": "to",
                  "type": "string",
                  "description": "Address of the receiver. null when its a contract creation transaction.",
                  "example": "0x..."
                },
                {
                  "name": "transactionHash",
                  "type": "string",
                  "description": "Hash of the transaction.",
                  "example": "0x..."
                },
                {
                  "name": "transactionIndex",
                  "type": "string",
                  "description": "Integer of the transaction's index position in the block.",
                  "example": "0x..."
                },
                {
                  "name": "type",
                  "type": "string",
                  "description": "EIP-2718 type of the transaction.",
                  "example": "0x2"
                }
              ]
            },
            "description": "Array of transaction receipt objects."
          }
        }
      ]
    },
    "eth_getCode": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Code at Address",
      "description": "Returns the code stored at a given address. This method is commonly used to inspect the bytecode of smart contracts. The block number can be specified to retrieve the code at the time of that block.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the code at a given address.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getCode"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the code retrieval request, including the address of the account and the block number.",
            "example": [
              "0xd5677cf67b5aa051bb40496e68ad359eb97cfbf8",
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the bytecode of the contract at the specified address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The bytecode of the contract at the given address, or 0x if the address has no code (e.g., an EOA).",
                "example": "0x608060405234801561001057600080fd5b506040516101..."
              }
            ]
          }
        }
      ]
    },
    "eth_getLogs": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Logs",
      "description": "Returns an array of logs matching a specified filter condition. This can include logs for specific addresses, block number ranges, or topics. Logs are used by smart contracts to record events and can be queried to retrieve historical state or transaction outcomes.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving logs based on a filter.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getLogs"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "A single object representing the filter options for the logs. This can include `fromBlock`, `toBlock`, `address`, and `topics`.",
            "example": [
              {
                "fromBlock": "0x12b39a9",
                "toBlock": "latest",
                "address": "0x8888f1f195afa192cfee860698584c030f4c9db1",
                "topics": [
                  "0x0000000000000000000000000000000000000000000000000000000000000000"
                ]
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns logs matching the filter condition.",
          "body": {
            "type": "array",
            "field": {
              "type": "object",
              "fields": [
                {
                  "name": "address",
                  "type": "string",
                  "description": "Address from which this log originated.",
                  "example": "0x8888f1f195afa192cfee860698584c030f4c9db1"
                },
                {
                  "name": "topics",
                  "type": "array",
                  "description": "Array of topics associated with the log.",
                  "field": {
                    "type": "string",
                    "description": "Specific log topic.",
                    "example": "0x0000000000000000000000000000000000000000000000000000000000000000"
                  }
                },
                {
                  "name": "data",
                  "type": "string",
                  "description": "The data associated with the log entry.",
                  "example": "0x..."
                },
                {
                  "name": "blockNumber",
                  "type": "string",
                  "description": "The block number where this log was in.",
                  "example": "0x1a4"
                },
                {
                  "name": "transactionHash",
                  "type": "string",
                  "description": "Hash of the transactions this log was created from.",
                  "example": "0x..."
                },
                {
                  "name": "transactionIndex",
                  "type": "string",
                  "description": "Integer of the transaction's index position in the block.",
                  "example": "0x3"
                },
                {
                  "name": "blockHash",
                  "type": "string",
                  "description": "Hash of the block where this log was in.",
                  "example": "0x..."
                },
                {
                  "name": "logIndex",
                  "type": "string",
                  "description": "Integer of the log's index position in the block.",
                  "example": "0x1"
                },
                {
                  "name": "removed",
                  "type": "boolean",
                  "description": "Indicates if the log was removed due to a chain reorganization.",
                  "example": false
                }
              ]
            },
            "description": "Array of log entry objects."
          }
        }
      ]
    },
    "eth_getProof": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Merkle Proof for Account and Storage",
      "description": "Returns the account and storage values of the specified account address, as well as the Merkle-proof. This allows verification of account and storage data within the current state without needing the entire state.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the proof.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getProof"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the proof request, including the address, storage keys as an array, and the block number.",
            "example": [
              "0x1234567890123456789012345678901234567890",
              [
                "0x0000000000000000000000000000000000000000000000000000000000000000"
              ],
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the requested proof data.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "Contains the account proof, balance, code hash, nonce, storage hash, and storage proof.",
                "fields": [
                  {
                    "name": "accountProof",
                    "type": "array",
                    "description": "Array of hashes used to generate the Merkle proof.",
                    "field": {
                      "type": "string",
                      "description": "Individual hash part of the Merkle proof.",
                      "example": "0x..."
                    }
                  },
                  {
                    "name": "balance",
                    "type": "string",
                    "description": "The balance of the account in wei.",
                    "example": "0x1bc16d674ec80000"
                  },
                  {
                    "name": "codeHash",
                    "type": "string",
                    "description": "Hash of the code of the account.",
                    "example": "0x..."
                  },
                  {
                    "name": "nonce",
                    "type": "string",
                    "description": "The nonce of the account.",
                    "example": "0x0"
                  },
                  {
                    "name": "storageHash",
                    "type": "string",
                    "description": "Hash of the storage root.",
                    "example": "0x..."
                  },
                  {
                    "name": "storageProof",
                    "type": "array",
                    "description": "Proofs for each requested storage key.",
                    "field": {
                      "type": "object",
                      "fields": [
                        {
                          "name": "key",
                          "type": "string",
                          "description": "The requested storage key.",
                          "example": "0x..."
                        },
                        {
                          "name": "value",
                          "type": "string",
                          "description": "The value associated with the storage key.",
                          "example": "0x..."
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "eth_getStorageAt": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Storage At Address",
      "description": "Returns the value from a storage position at a given address. This method can be used to inspect the storage of smart contracts at specific slots.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for querying storage at a specific address and slot.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getStorageAt"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the storage query, including the address of the account, the index of the storage slot, and the block number to query against.",
            "example": [
              "0x407d73d8a49eeb85d32cf465507dd71d507100c1",
              "0x0",
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the value from the specified storage slot of the contract.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The data stored at the requested storage slot, in hexadecimal format.",
                "example": "0x..."
              }
            ]
          }
        }
      ]
    },
    "eth_getTransactionByHash": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Transaction by Hash",
      "description": "Retrieves a transaction by its hash. This method provides detailed information about the transaction, including the sender, receiver, gas used, and whether the transaction has been confirmed in a block.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving a transaction by its hash.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getTransactionByHash"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the transaction query, including the transaction hash.",
            "example": [
              "0xd4b2e80202cc55517c328412a7792772e1bdd925ac1a2120aeafe84316206ad3"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the specified transaction details.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The transaction object, including details such as `from`, `to`, `gas`, `gasPrice`, `nonce`, `value`, `data`, `hash`, and, if applicable, `blockHash`, `blockNumber`, and `transactionIndex`.",
                "fields": [
                  {
                    "name": "blockHash",
                    "type": "string",
                    "description": "Hash of the block where this transaction was in. null when its pending.",
                    "example": "0x..."
                  },
                  {
                    "name": "blockNumber",
                    "type": "string",
                    "description": "Block number where this transaction was in. null when its pending.",
                    "example": "0x..."
                  },
                  {
                    "name": "from",
                    "type": "string",
                    "description": "Address of the sender.",
                    "example": "0x..."
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "description": "Address of the receiver. null when its a contract creation transaction.",
                    "example": "0x..."
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "eth_getTransactionByBlockHashAndIndex": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Transaction by Block Hash and Index",
      "description": "Retrieves a single transaction by its block hash and index position within the block. This allows for precise querying of transactions when the block hash and transaction's index are known.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving a transaction by block hash and transaction index.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getTransactionByBlockHashAndIndex"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the block hash and the transaction index.",
            "example": [
              "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f",
              "0x0"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the transaction at the specified index in the given block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "blockHash",
                "type": "string",
                "description": "Hash of the block where this transaction was included.",
                "example": "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f"
              },
              {
                "name": "blockNumber",
                "type": "string",
                "description": "Block number where this transaction was included.",
                "example": "0x12b39a9"
              },
              {
                "name": "from",
                "type": "string",
                "description": "Address of the sender.",
                "example": "0xbb936e46099df268a2c6537299b75cf3609a0541"
              },
              {
                "name": "gas",
                "type": "string",
                "description": "Gas provided by the sender.",
                "example": "0x2bace"
              },
              {
                "name": "gasPrice",
                "type": "string",
                "description": "Gas price provided by the sender in wei.",
                "example": "0x3bb9d4fcb"
              },
              {
                "name": "maxPriorityFeePerGas",
                "type": "string",
                "description": "Maximum priority fee per gas provided by the sender in wei.",
                "example": "0x4c4b40"
              },
              {
                "name": "maxFeePerGas",
                "type": "string",
                "description": "Maximum fee per gas provided by the sender in wei.",
                "example": "0x5666e04ce"
              },
              {
                "name": "hash",
                "type": "string",
                "description": "Hash of the transaction.",
                "example": "0x6e760d4b659e9c68b943829b0f4adaa07f3e3c043ee8d4f4787045909ba63090"
              },
              {
                "name": "input",
                "type": "string",
                "description": "Data sent along with the transaction.",
                "example": "0xa76dfc3b..."
              },
              {
                "name": "nonce",
                "type": "string",
                "description": "Number of transactions made by the sender prior to this one.",
                "example": "0x1b00"
              },
              {
                "name": "to",
                "type": "string",
                "description": "Address of the receiver. Null when it's a contract creation transaction.",
                "example": "0x111111125421ca6dc452d289314280a0f8842a65"
              },
              {
                "name": "transactionIndex",
                "type": "string",
                "description": "Integer of the transaction's index position in the block.",
                "example": "0x0"
              },
              {
                "name": "value",
                "type": "string",
                "description": "Value transferred in wei.",
                "example": "0x214e8348c4f0000"
              },
              {
                "name": "type",
                "type": "string",
                "description": "EIP-2718 type of the transaction.",
                "example": "0x2"
              },
              {
                "name": "accessList",
                "type": "array",
                "description": "EIP-2930 access list.",
                "field": {
                  "type": "object",
                  "fields": []
                }
              },
              {
                "name": "chainId",
                "type": "string",
                "description": "Chain ID of the transaction.",
                "example": "0x1"
              },
              {
                "name": "v",
                "type": "string",
                "description": "ECDSA recovery id.",
                "example": "0x1"
              },
              {
                "name": "r",
                "type": "string",
                "description": "ECDSA signature r.",
                "example": "0xf611431e6b44cbc02c4278915d979c9034b6d37b139b8c55ae428abbe9d52d4b"
              },
              {
                "name": "s",
                "type": "string",
                "description": "ECDSA signature s.",
                "example": "0x1bc0fcf547e60d54daf313f840db039c3c1904c5b9724b9d7a8ec1f2abb46b53"
              }
            ],
            "description": "Details of the transaction at the specified index in the given block."
          }
        }
      ]
    },
    "eth_getTransactionByBlockNumberAndIndex": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Transaction by Block Number and Index",
      "description": "Retrieves a specific transaction by its block number (which can be specified as a hexadecimal or as one of the special strings 'latest', 'earliest', 'pending') and its index position within the block.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving a transaction by block number and transaction index.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getTransactionByBlockNumberAndIndex"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the block number and the transaction index.",
            "example": [
              "latest",
              "0x0"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the transaction at the specified index in the given block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "blockHash",
                "type": "string",
                "description": "Hash of the block where this transaction was included.",
                "example": "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f"
              },
              {
                "name": "blockNumber",
                "type": "string",
                "description": "Block number where this transaction was included.",
                "example": "0x12b39a9"
              },
              {
                "name": "from",
                "type": "string",
                "description": "Address of the sender.",
                "example": "0xbb936e46099df268a2c6537299b75cf3609a0541"
              },
              {
                "name": "gas",
                "type": "string",
                "description": "Gas provided by the sender.",
                "example": "0x2bace"
              },
              {
                "name": "gasPrice",
                "type": "string",
                "description": "Gas price provided by the sender in wei.",
                "example": "0x3bb9d4fcb"
              },
              {
                "name": "maxPriorityFeePerGas",
                "type": "string",
                "description": "Maximum priority fee per gas provided by the sender in wei.",
                "example": "0x4c4b40"
              },
              {
                "name": "maxFeePerGas",
                "type": "string",
                "description": "Maximum fee per gas provided by the sender in wei.",
                "example": "0x5666e04ce"
              },
              {
                "name": "hash",
                "type": "string",
                "description": "Hash of the transaction.",
                "example": "0x6e760d4b659e9c68b943829b0f4adaa07f3e3c043ee8d4f4787045909ba63090"
              },
              {
                "name": "input",
                "type": "string",
                "description": "Data sent along with the transaction.",
                "example": "0xa76dfc3b..."
              },
              {
                "name": "nonce",
                "type": "string",
                "description": "Number of transactions made by the sender prior to this one.",
                "example": "0x1b00"
              },
              {
                "name": "to",
                "type": "string",
                "description": "Address of the receiver. Null when it's a contract creation transaction.",
                "example": "0x111111125421ca6dc452d289314280a0f8842a65"
              },
              {
                "name": "transactionIndex",
                "type": "string",
                "description": "Integer of the transaction's index position in the block.",
                "example": "0x0"
              },
              {
                "name": "value",
                "type": "string",
                "description": "Value transferred in wei.",
                "example": "0x214e8348c4f0000"
              },
              {
                "name": "type",
                "type": "string",
                "description": "EIP-2718 type of the transaction.",
                "example": "0x2"
              },
              {
                "name": "accessList",
                "type": "array",
                "description": "EIP-2930 access list.",
                "field": {
                  "type": "object",
                  "fields": []
                }
              },
              {
                "name": "chainId",
                "type": "string",
                "description": "Chain ID of the transaction.",
                "example": "0x1"
              },
              {
                "name": "v",
                "type": "string",
                "description": "ECDSA recovery id.",
                "example": "0x1"
              },
              {
                "name": "r",
                "type": "string",
                "description": "ECDSA signature r.",
                "example": "0xf611431e6b44cbc02c4278915d979c9034b6d37b139b8c55ae428abbe9d52d4b"
              },
              {
                "name": "s",
                "type": "string",
                "description": "ECDSA signature s.",
                "example": "0x1bc0fcf547e60d54daf313f840db039c3c1904c5b9724b9d7a8ec1f2abb46b53"
              }
            ],
            "description": "Details of the transaction at the specified index in the given block."
          }
        }
      ]
    },
    "eth_getTransactionCount": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Transaction Count",
      "description": "Retrieves the number of transactions sent from the specified address. This includes all transactions up to the specified block number, allowing for nonce determination for new transactions.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the transaction count (nonce) for an address.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getTransactionCount"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the address to query and the block number ('latest', 'earliest', 'pending').",
            "example": [
              "0x407d73d8a49eeb85d32cf465507dd71d507100c1",
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the number of transactions sent from the specified address, as a hexadecimal.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The number of transactions sent from the address, represented as a hexadecimal value.",
                "example": "0x15"
              }
            ]
          }
        }
      ]
    },
    "eth_getTransactionReceipt": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Transaction Receipt",
      "description": "Retrieves the receipt of a transaction by its hash. Transaction receipts contain details about the transaction's execution, including the status (success or failure), gas used, and event logs.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving a transaction receipt.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getTransactionReceipt"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the transaction hash.",
            "example": [
              "0xd4b2e80202cc55517c328412a7792772e1bdd925ac1a2120aeafe84316206ad3"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the transaction at the specified index in the given block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "blockHash",
                "type": "string",
                "description": "Hash of the block where this transaction was included.",
                "example": "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f"
              },
              {
                "name": "blockNumber",
                "type": "string",
                "description": "Block number where this transaction was included.",
                "example": "0x12b39a9"
              },
              {
                "name": "from",
                "type": "string",
                "description": "Address of the sender.",
                "example": "0xbb936e46099df268a2c6537299b75cf3609a0541"
              },
              {
                "name": "gas",
                "type": "string",
                "description": "Gas provided by the sender.",
                "example": "0x2bace"
              },
              {
                "name": "gasPrice",
                "type": "string",
                "description": "Gas price provided by the sender in wei.",
                "example": "0x3bb9d4fcb"
              },
              {
                "name": "maxPriorityFeePerGas",
                "type": "string",
                "description": "Maximum priority fee per gas provided by the sender in wei.",
                "example": "0x4c4b40"
              },
              {
                "name": "maxFeePerGas",
                "type": "string",
                "description": "Maximum fee per gas provided by the sender in wei.",
                "example": "0x5666e04ce"
              },
              {
                "name": "hash",
                "type": "string",
                "description": "Hash of the transaction.",
                "example": "0x6e760d4b659e9c68b943829b0f4adaa07f3e3c043ee8d4f4787045909ba63090"
              },
              {
                "name": "input",
                "type": "string",
                "description": "Data sent along with the transaction.",
                "example": "0xa76dfc3b..."
              },
              {
                "name": "nonce",
                "type": "string",
                "description": "Number of transactions made by the sender prior to this one.",
                "example": "0x1b00"
              },
              {
                "name": "to",
                "type": "string",
                "description": "Address of the receiver. Null when it's a contract creation transaction.",
                "example": "0x111111125421ca6dc452d289314280a0f8842a65"
              },
              {
                "name": "transactionIndex",
                "type": "string",
                "description": "Integer of the transaction's index position in the block.",
                "example": "0x0"
              },
              {
                "name": "value",
                "type": "string",
                "description": "Value transferred in wei.",
                "example": "0x214e8348c4f0000"
              },
              {
                "name": "type",
                "type": "string",
                "description": "EIP-2718 type of the transaction.",
                "example": "0x2"
              },
              {
                "name": "accessList",
                "type": "array",
                "description": "EIP-2930 access list.",
                "field": {
                  "type": "object",
                  "fields": []
                }
              },
              {
                "name": "chainId",
                "type": "string",
                "description": "Chain ID of the transaction.",
                "example": "0x1"
              },
              {
                "name": "v",
                "type": "string",
                "description": "ECDSA recovery id.",
                "example": "0x1"
              },
              {
                "name": "r",
                "type": "string",
                "description": "ECDSA signature r.",
                "example": "0xf611431e6b44cbc02c4278915d979c9034b6d37b139b8c55ae428abbe9d52d4b"
              },
              {
                "name": "s",
                "type": "string",
                "description": "ECDSA signature s.",
                "example": "0x1bc0fcf547e60d54daf313f840db039c3c1904c5b9724b9d7a8ec1f2abb46b53"
              }
            ],
            "description": "Details of the transaction at the specified index in the given block."
          }
        }
      ]
    },
    "eth_getUncleByBlockHashAndIndex": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Uncle by Block Hash and Index",
      "description": "Retrieves details of an uncle block by specifying the hash of the parent block and the uncle's index position. This method is useful for examining the uncles of a given block, providing insights into block reorganizations and network security.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving an uncle by block hash and index.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getUncleByBlockHashAndIndex"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the block hash and the uncle's index.",
            "example": [
              "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f",
              "0x0"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the specified uncle block details.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The uncle block object, including details such as `parentHash`, `sha3Uncles`, `miner`, `stateRoot`, `transactionsRoot`, `receiptsRoot`, `logsBloom`, `difficulty`, `number`, `gasLimit`, `gasUsed`, `timestamp`, and more.",
                "fields": []
              }
            ]
          }
        }
      ]
    },
    "eth_getUncleByBlockNumberAndIndex": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Uncle by Block Number and Index",
      "description": "Retrieves details of an uncle block by specifying the block number (which can be a hexadecimal value or one of the special strings 'latest', 'earliest', 'pending') and the uncle's index position within the uncle list of the block.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving an uncle by block number and index.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getUncleByBlockNumberAndIndex"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the block number and the uncle's index.",
            "example": [
              "latest",
              "0x0"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the specified uncle block details.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The uncle block object, including details such as `parentHash`, `sha3Uncles`, `miner`, `stateRoot`, `transactionsRoot`, `receiptsRoot`, `logsBloom`, `difficulty`, `number`, `gasLimit`, `gasUsed`, `timestamp`, and other relevant block information.",
                "fields": []
              }
            ]
          }
        }
      ]
    },
    "eth_getUncleCountByBlockHash": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Uncle Count by Block Hash",
      "description": "Returns the number of uncle blocks included in a block, identified by the block hash. This method provides insights into the block's contributions to the network security and the overall branching behavior of the blockchain.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the number of uncles by block hash.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getUncleCountByBlockHash"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the block hash.",
            "example": [
              "0x18173058d45f8aa984181fdfbfece01a93a971ea63e008231b2e15f151e0903f"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the number of uncle blocks included in the specified block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The number of uncle blocks included in the block, represented as a hexadecimal value.",
                "example": "0x1"
              }
            ]
          }
        }
      ]
    },
    "eth_getUncleCountByBlockNumber": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Uncle Count by Block Number",
      "description": "Returns the number of uncle blocks included in a block, identified by the block number. This method sheds light on the blockchain's branching behavior and the role of uncle blocks in enhancing network security.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the number of uncles by block number.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getUncleCountByBlockNumber"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the block number. The block number can be specified as a hexadecimal value or using the tags 'latest', 'earliest', or 'pending'.",
            "example": [
              "latest"
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the number of uncle blocks included in the specified block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The number of uncle blocks included in the block, represented as a hexadecimal value.",
                "example": "0x2"
              }
            ]
          }
        }
      ]
    },
    "eth_maxPriorityFeePerGas": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Max Priority Fee Per Gas",
      "description": "Returns the maximum priority fee per gas a user is willing to pay on top of the base fee. This fee is used to expedite the transaction's inclusion in a block by compensating miners, especially during times of high network demand.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the maximum priority fee per gas.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_maxPriorityFeePerGas"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": false,
            "description": "No parameters are needed for this call.",
            "example": []
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the maximum priority fee per gas.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The maximum priority fee per gas, in wei, represented as a hexadecimal value.",
                "example": "0x3B9ACA00"
              }
            ]
          }
        }
      ]
    },
    "eth_sendRawTransaction": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Send Raw Transaction",
      "description": "Submits a pre-signed transaction to the network. This method is essential for executing transactions on the Ethereum blockchain, including transfers, contract interactions, and contract deployments. The transaction must be signed with the sender's private key before submission.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for submitting a raw, pre-signed transaction.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_sendRawTransaction"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the raw transaction data.",
            "example": [
              "0xf904808000831cfde080..."
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the hash of the transaction once it has been sent.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "string",
                "required": true,
                "description": "The hash of the submitted transaction.",
                "example": "0x..."
              }
            ]
          }
        }
      ]
    },
    "eth_getTransactions": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Native Transactions by Wallet Address",
      "description": "Retrieves native transactions for a specified wallet address. Optional parameters allow filtering by block range, limiting the number of results, and paginating through transactions using a cursor.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving transactions by wallet address.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getTransactions"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the wallet address and optional filters.",
            "example": [
              {
                "address": "0x357C52eBaDAd41B68C0950E2c103576e38D06BcC",
                "fromBlock": 19943515,
                "toBlock": 19943536,
                "limit": 100,
                "cursor": "eyJhbGciOiJIUzI1NiJ9..."
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the list of transactions and pagination details.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The transaction details and pagination data.",
                "fields": [
                  {
                    "name": "cursor",
                    "type": "string",
                    "required": false,
                    "description": "Cursor for paginating to the next set of transactions.",
                    "example": "eyJhbGciOiJIUzI1NiJ9..."
                  },
                  {
                    "name": "page_size",
                    "type": "number",
                    "required": true,
                    "description": "Number of transactions returned in the current page.",
                    "example": 100
                  },
                  {
                    "name": "page",
                    "type": "number",
                    "required": true,
                    "description": "Current page number.",
                    "example": 0
                  },
                  {
                    "name": "result",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Details of a single transaction.",
                      "fields": [
                        {
                          "name": "hash",
                          "type": "string",
                          "required": true,
                          "description": "The transaction hash.",
                          "example": "0x3a2d5156ceb80e717443cb23baebf47823a31b4ec4a96415436649af9cde0070"
                        },
                        {
                          "name": "nonce",
                          "type": "string",
                          "required": true,
                          "description": "Transaction nonce.",
                          "example": "10132"
                        },
                        {
                          "name": "transaction_index",
                          "type": "string",
                          "required": true,
                          "description": "Index of the transaction within the block.",
                          "example": "19"
                        },
                        {
                          "name": "from_address",
                          "type": "string",
                          "required": true,
                          "description": "Address of the sender.",
                          "example": "0x357c52ebadad41b68c0950e2c103576e38d06bcc"
                        },
                        {
                          "name": "to_address",
                          "type": "string",
                          "required": true,
                          "description": "Address of the recipient.",
                          "example": "0x7bcf15e64797bcf97f2dccaa5e83fe62cd2ed2b1"
                        },
                        {
                          "name": "value",
                          "type": "string",
                          "required": true,
                          "description": "Value transferred in the transaction.",
                          "example": "0"
                        },
                        {
                          "name": "gas",
                          "type": "string",
                          "required": true,
                          "description": "Gas limit provided by the sender.",
                          "example": "460671"
                        },
                        {
                          "name": "gas_price",
                          "type": "string",
                          "required": true,
                          "description": "Gas price provided by the sender in wei.",
                          "example": "10570000000"
                        },
                        {
                          "name": "input",
                          "type": "string",
                          "required": true,
                          "description": "The data sent along with the transaction.",
                          "example": "0x17c071910000000000000000000000000000000000000000000000000000000000000020..."
                        },
                        {
                          "name": "receipt_cumulative_gas_used",
                          "type": "string",
                          "required": true,
                          "description": "Total gas used when this transaction was included in the block.",
                          "example": "8032769"
                        },
                        {
                          "name": "receipt_gas_used",
                          "type": "string",
                          "required": true,
                          "description": "The amount of gas used by this specific transaction.",
                          "example": "460671"
                        },
                        {
                          "name": "receipt_status",
                          "type": "string",
                          "required": true,
                          "description": "Status of the transaction (1 = success, 0 = failure).",
                          "example": "1"
                        },
                        {
                          "name": "block_timestamp",
                          "type": "string",
                          "required": true,
                          "description": "Timestamp when the block was mined.",
                          "example": "1709214105000"
                        },
                        {
                          "name": "block_number",
                          "type": "string",
                          "required": true,
                          "description": "Number of the block that contains the transaction.",
                          "example": "8491447"
                        },
                        {
                          "name": "block_hash",
                          "type": "string",
                          "required": true,
                          "description": "Hash of the block that contains the transaction.",
                          "example": "0x3c9c8a47d2b3203bc181e493ee6caa8f6e34192646cc567303ad79aa10675b28"
                        },
                        {
                          "name": "transaction_fee",
                          "type": "string",
                          "required": true,
                          "description": "The fee paid for the transaction in ether.",
                          "example": "0.00486929247"
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "eth_getDecodedTransactions": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get Decoded Wallet Transactions by Wallet Address",
      "description": "Retrieves the transaction history of a specified wallet address with decoded transaction data. Optional parameters allow for including NFT metadata and specifying the order of results.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving decoded transactions by wallet address.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getDecodedTransactions"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the wallet address, NFT metadata option, and result order.",
            "example": [
              {
                "address": "0x737Aa707Cbca71C849e230485cAF2a7BB0ad29B8",
                "nft_metadata": true,
                "order": "desc"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the decoded transaction history for the specified wallet.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "array",
                "required": true,
                "description": "An array of decoded transactions associated with the specified wallet address.",
                "items": {
                  "type": "object",
                  "description": "Details of a single decoded transaction.",
                  "fields": [
                    {
                      "name": "hash",
                      "type": "string",
                      "required": true,
                      "description": "The transaction hash.",
                      "example": "0x3a2d5156ceb80e717443cb23baebf47823a31b4ec4a96415436649af9cde0070"
                    },
                    {
                      "name": "nonce",
                      "type": "string",
                      "required": true,
                      "description": "Transaction nonce.",
                      "example": "10132"
                    },
                    {
                      "name": "from_address",
                      "type": "string",
                      "required": true,
                      "description": "Address of the sender.",
                      "example": "0x737Aa707Cbca71C849e230485cAF2a7BB0ad29B8"
                    },
                    {
                      "name": "to_address",
                      "type": "string",
                      "required": true,
                      "description": "Address of the recipient.",
                      "example": "0x7bcf15e64797bcf97f2dccaa5e83fe62cd2ed2b1"
                    },
                    {
                      "name": "value",
                      "type": "string",
                      "required": true,
                      "description": "Value transferred in the transaction.",
                      "example": "0"
                    },
                    {
                      "name": "gas",
                      "type": "string",
                      "required": true,
                      "description": "Gas limit provided by the sender.",
                      "example": "460671"
                    },
                    {
                      "name": "gas_price",
                      "type": "string",
                      "required": true,
                      "description": "Gas price provided by the sender in wei.",
                      "example": "10570000000"
                    },
                    {
                      "name": "input",
                      "type": "string",
                      "required": true,
                      "description": "The data sent along with the transaction.",
                      "example": "0x17c071910000000000000000000000000000000000000000000000000000000000000020..."
                    },
                    {
                      "name": "receipt_status",
                      "type": "string",
                      "required": true,
                      "description": "Status of the transaction (1 = success, 0 = failure).",
                      "example": "1"
                    },
                    {
                      "name": "block_timestamp",
                      "type": "string",
                      "required": true,
                      "description": "Timestamp when the block was mined.",
                      "example": "1709214105000"
                    },
                    {
                      "name": "block_number",
                      "type": "string",
                      "required": true,
                      "description": "Number of the block that contains the transaction.",
                      "example": "8491447"
                    },
                    {
                      "name": "block_hash",
                      "type": "string",
                      "required": true,
                      "description": "Hash of the block that contains the transaction.",
                      "example": "0x3c9c8a47d2b3203bc181e493ee6caa8f6e34192646cc567303ad79aa10675b28"
                    },
                    {
                      "name": "transaction_fee",
                      "type": "string",
                      "required": true,
                      "description": "The fee paid for the transaction in ether.",
                      "example": "0.00486929247"
                    },
                    {
                      "name": "nft_metadata",
                      "type": "object",
                      "required": false,
                      "description": "Optional metadata related to NFTs involved in the transaction, if requested.",
                      "fields": [
                        {
                          "name": "token_id",
                          "type": "string",
                          "description": "The ID of the NFT token.",
                          "example": "12345"
                        },
                        {
                          "name": "token_uri",
                          "type": "string",
                          "description": "The URI pointing to the NFT metadata.",
                          "example": "https://metadata.example.com/token/12345"
                        },
                        {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the NFT.",
                          "example": "CryptoKitty #12345"
                        },
                        {
                          "name": "image",
                          "type": "string",
                          "description": "The image URI of the NFT.",
                          "example": "https://images.example.com/token/12345.png"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "eth_getTokenBalances": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get ERC20 Token Balances by Wallet",
      "description": "Retrieves the balances of ERC20 tokens for a specified wallet address. Optional parameters include filtering by specific token addresses, excluding spam tokens, and setting a specific block number.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving ERC20 token balances by wallet address.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getTokenBalances"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the wallet address, optional token addresses, exclusion of spam tokens, and block number.",
            "example": [
              {
                "address": "0xcB1C1FdE09f811B294172696404e88E658659905",
                "tokenAddresses": [],
                "excludeSpam": true,
                "toBlock": 12321
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the ERC20 token balances for the specified wallet.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "array",
                "required": true,
                "description": "An array of ERC20 token balances associated with the specified wallet address.",
                "items": {
                  "type": "object",
                  "description": "Details of a single ERC20 token balance.",
                  "fields": [
                    {
                      "name": "token_address",
                      "type": "string",
                      "required": true,
                      "description": "The contract address of the ERC20 token.",
                      "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                    },
                    {
                      "name": "name",
                      "type": "string",
                      "required": true,
                      "description": "The name of the ERC20 token.",
                      "example": "Kylin Network"
                    },
                    {
                      "name": "symbol",
                      "type": "string",
                      "required": true,
                      "description": "The symbol of the ERC20 token.",
                      "example": "KYL"
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "required": true,
                      "description": "The URL to the logo image of the token.",
                      "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                    },
                    {
                      "name": "thumbnail",
                      "type": "string",
                      "required": true,
                      "description": "The URL to the thumbnail image of the token.",
                      "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png"
                    },
                    {
                      "name": "decimals",
                      "type": "number",
                      "required": true,
                      "description": "The number of decimals the token uses.",
                      "example": 18
                    },
                    {
                      "name": "balance",
                      "type": "string",
                      "required": true,
                      "description": "The balance of the token in the wallet, as a string representation of the integer value.",
                      "example": "123456789"
                    },
                    {
                      "name": "possible_spam",
                      "type": "boolean",
                      "required": true,
                      "description": "Indicates if the token is flagged as possible spam.",
                      "example": false
                    },
                    {
                      "name": "verified_contract",
                      "type": "boolean",
                      "required": true,
                      "description": "Indicates if the token contract is verified.",
                      "example": false
                    }
                  ]
                },
                "example": [
                  {
                    "token_address": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09",
                    "name": "Kylin Network",
                    "symbol": "KYL",
                    "logo": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png",
                    "thumbnail": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png",
                    "decimals": 18,
                    "balance": "123456789",
                    "possible_spam": false,
                    "verified_contract": false
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "eth_getTokenPrice": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get ERC20 Token Price by Token Address",
      "description": "Retrieves the current price of an ERC20 token based on its contract address. Optional parameters include specifying an exchange address, retrieving data at a specific block number, and including percentage change in price over the last 24 hours.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving the price of an ERC20 token by its contract address.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getTokenPrice"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the token address, optional exchange address, block number, and additional data options.",
            "example": [
              {
                "address": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
                "exchange": "0x123",
                "toBlock": 12321,
                "include": "percent_change"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the price data for the specified ERC20 token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "An object containing price information about the ERC20 token.",
                "fields": [
                  {
                    "name": "tokenName",
                    "type": "string",
                    "required": true,
                    "description": "The name of the token.",
                    "example": "Kylin Network"
                  },
                  {
                    "name": "tokenSymbol",
                    "type": "string",
                    "required": true,
                    "description": "The symbol of the token.",
                    "example": "KYL"
                  },
                  {
                    "name": "tokenLogo",
                    "type": "string",
                    "required": true,
                    "description": "The URL to the token's logo image.",
                    "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                  },
                  {
                    "name": "tokenDecimals",
                    "type": "string",
                    "required": true,
                    "description": "The number of decimals the token uses.",
                    "example": "18"
                  },
                  {
                    "name": "nativePrice",
                    "type": "object",
                    "required": true,
                    "description": "An object containing the token's price in native currency.",
                    "fields": [
                      {
                        "name": "value",
                        "type": "string",
                        "required": true,
                        "description": "The value of the token in the native currency.",
                        "example": "8409770570506626"
                      },
                      {
                        "name": "decimals",
                        "type": "number",
                        "required": true,
                        "description": "The number of decimals for the native currency.",
                        "example": 18
                      },
                      {
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "The name of the native currency.",
                        "example": "Ether"
                      },
                      {
                        "name": "symbol",
                        "type": "string",
                        "required": true,
                        "description": "The symbol of the native currency.",
                        "example": "ETH"
                      },
                      {
                        "name": "address",
                        "type": "string",
                        "required": true,
                        "description": "The contract address of the native currency.",
                        "example": "string"
                      }
                    ]
                  },
                  {
                    "name": "usdPrice",
                    "type": "number",
                    "required": true,
                    "description": "The price of the token in USD.",
                    "example": 19.722370676
                  },
                  {
                    "name": "usdPriceFormatted",
                    "type": "string",
                    "required": true,
                    "description": "The formatted USD price of the token.",
                    "example": "19.722370676"
                  },
                  {
                    "name": "24hrPercentChange",
                    "type": "string",
                    "required": true,
                    "description": "The percentage change in price over the last 24 hours.",
                    "example": "-0.8842730258590583"
                  },
                  {
                    "name": "exchangeAddress",
                    "type": "string",
                    "required": true,
                    "description": "The address of the exchange where the token is traded.",
                    "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
                  },
                  {
                    "name": "exchangeName",
                    "type": "string",
                    "required": true,
                    "description": "The name of the exchange where the token is traded.",
                    "example": "Uniswap v3"
                  },
                  {
                    "name": "tokenAddress",
                    "type": "string",
                    "required": true,
                    "description": "The contract address of the token.",
                    "example": "0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c"
                  },
                  {
                    "name": "toBlock",
                    "type": "string",
                    "required": true,
                    "description": "The block number at which the price was retrieved.",
                    "example": "16314545"
                  },
                  {
                    "name": "possibleSpam",
                    "type": "boolean",
                    "required": true,
                    "description": "Indicates if the token is flagged as possible spam.",
                    "example": false
                  },
                  {
                    "name": "verifiedContract",
                    "type": "boolean",
                    "required": true,
                    "description": "Indicates if the token contract is verified.",
                    "example": true
                  },
                  {
                    "name": "pairAddress",
                    "type": "string",
                    "required": true,
                    "description": "The address of the liquidity pair.",
                    "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
                  },
                  {
                    "name": "pairTotalLiquidityUsd",
                    "type": "string",
                    "required": true,
                    "description": "The total liquidity of the token pair in USD.",
                    "example": "123.45"
                  }
                ],
                "example": {
                  "tokenName": "Kylin Network",
                  "tokenSymbol": "KYL",
                  "tokenLogo": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png",
                  "tokenDecimals": "18",
                  "nativePrice": {
                    "value": "8409770570506626",
                    "decimals": 18,
                    "name": "Ether",
                    "symbol": "ETH",
                    "address": "string"
                  },
                  "usdPrice": 19.722370676,
                  "usdPriceFormatted": "19.722370676",
                  "24hrPercentChange": "-0.8842730258590583",
                  "exchangeAddress": "0x1f98431c8ad98523631ae4a59f267346ea31f984",
                  "exchangeName": "Uniswap v3",
                  "tokenAddress": "0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c",
                  "toBlock": "16314545",
                  "possibleSpam": false,
                  "verifiedContract": true,
                  "pairAddress": "0x1f98431c8ad98523631ae4a59f267346ea31f984",
                  "pairTotalLiquidityUsd": "123.45"
                }
              }
            ]
          }
        }
      ]
    },
    "eth_getTokenMetadata": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get ERC20 Token Metadata by Token Address",
      "description": "Retrieves metadata information about ERC20 tokens based on their contract addresses. This includes details such as the token's name, symbol, logo, total supply, and various social media links.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia",
            "pulse"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving metadata of ERC20 tokens by their contract addresses.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getTokenMetadata"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the addresses of the tokens",
            "example": [
              {
                "addresses": [
                  "0x6982508145454ce325ddbe47a25d4ec3d2311933"
                ]
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the metadata information for the specified ERC20 tokens.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "array",
                "required": true,
                "description": "An array containing metadata information about the ERC20 tokens.",
                "items": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "address",
                      "type": "string",
                      "required": true,
                      "description": "The contract address of the token.",
                      "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933"
                    },
                    {
                      "name": "address_label",
                      "type": "string",
                      "required": true,
                      "description": "A label for the token address.",
                      "example": "Binance 1"
                    },
                    {
                      "name": "name",
                      "type": "string",
                      "required": true,
                      "description": "The name of the token.",
                      "example": "Kylin Network"
                    },
                    {
                      "name": "symbol",
                      "type": "string",
                      "required": true,
                      "description": "The symbol of the token.",
                      "example": "KYL"
                    },
                    {
                      "name": "decimals",
                      "type": "string",
                      "required": true,
                      "description": "The number of decimals the token uses.",
                      "example": "18"
                    },
                    {
                      "name": "logo",
                      "type": "string",
                      "required": true,
                      "description": "The URL to the token's logo image.",
                      "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                    },
                    {
                      "name": "logo_hash",
                      "type": "string",
                      "required": true,
                      "description": "A hash of the logo image for verification.",
                      "example": "ee7aa2cdf100649a3521a082116258e862e6971261a39b5cd4e4354fcccbc54d"
                    },
                    {
                      "name": "thumbnail",
                      "type": "string",
                      "required": true,
                      "description": "The URL to a thumbnail image of the token.",
                      "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png"
                    },
                    {
                      "name": "total_supply",
                      "type": "string",
                      "required": true,
                      "description": "The total supply of the token.",
                      "example": "420689899999994793099999999997400"
                    },
                    {
                      "name": "total_supply_formatted",
                      "type": "string",
                      "required": true,
                      "description": "The formatted total supply of the token.",
                      "example": "420689899999994.7930999999999974"
                    },
                    {
                      "name": "fully_diluted_valuation",
                      "type": "string",
                      "required": true,
                      "description": "The fully diluted valuation of the token.",
                      "example": "3407271444.05"
                    },
                    {
                      "name": "block_number",
                      "type": "string",
                      "required": true,
                      "description": "The block number at which the metadata was retrieved.",
                      "example": "string"
                    },
                    {
                      "name": "validated",
                      "type": "number",
                      "required": true,
                      "description": "Indicates if the token metadata is validated (0 or 1).",
                      "example": 0
                    },
                    {
                      "name": "created_at",
                      "type": "string",
                      "required": true,
                      "description": "The date and time when the token metadata was created.",
                      "example": "string"
                    },
                    {
                      "name": "possible_spam",
                      "type": "boolean",
                      "required": true,
                      "description": "Indicates if the token is flagged as possible spam.",
                      "example": false
                    },
                    {
                      "name": "verified_contract",
                      "type": "boolean",
                      "required": true,
                      "description": "Indicates if the token contract is verified.",
                      "example": false
                    },
                    {
                      "name": "categories",
                      "type": "array",
                      "required": true,
                      "description": "Categories the token belongs to.",
                      "items": {
                        "type": "string",
                        "example": "stablecoin"
                      }
                    },
                    {
                      "name": "links",
                      "type": "object",
                      "required": true,
                      "description": "Social media and other relevant links for the token.",
                      "fields": [
                        {
                          "name": "discord",
                          "type": "string",
                          "required": false,
                          "description": "Discord link.",
                          "example": "https://discord.com/invite/0xPolygon"
                        },
                        {
                          "name": "medium",
                          "type": "string",
                          "required": false,
                          "description": "Medium blog link.",
                          "example": "https://polygontech.medium.com"
                        },
                        {
                          "name": "reddit",
                          "type": "string",
                          "required": false,
                          "description": "Reddit link.",
                          "example": "https://www.reddit.com/r/Polygon"
                        },
                        {
                          "name": "telegram",
                          "type": "string",
                          "required": false,
                          "description": "Telegram link.",
                          "example": "https://t.me/0xPolygon"
                        },
                        {
                          "name": "twitter",
                          "type": "string",
                          "required": false,
                          "description": "Twitter link.",
                          "example": "https://twitter.com/0xPolygon"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "eth_getNFTBalances": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get NFTs by Wallet Address",
      "description": "Retrieves the list of NFTs owned by a specific wallet address, with options to limit the number of results and paginate through them.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving NFTs owned by a wallet address.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getNFTBalances"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the wallet address and optional filters.",
            "example": [
              {
                "address": "0xBCF1b029350E61D1Bd7fCCb69e545495A508dc80",
                "limit": 10,
                "cursor": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the list of NFTs owned by the specified wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "An object containing the NFT balances.",
                "fields": [
                  {
                    "name": "nfts",
                    "type": "array",
                    "required": true,
                    "description": "An array of NFTs owned by the wallet address.",
                    "items": {
                      "type": "object",
                      "fields": [
                        {
                          "name": "token_id",
                          "type": "string",
                          "required": true,
                          "description": "The unique identifier for the NFT.",
                          "example": "12345"
                        },
                        {
                          "name": "contract_address",
                          "type": "string",
                          "required": true,
                          "description": "The contract address of the NFT collection.",
                          "example": "0x7bcf15e64797bcf97f2dccaa5e83fe62cd2ed2b1"
                        },
                        {
                          "name": "metadata",
                          "type": "object",
                          "required": false,
                          "description": "Metadata associated with the NFT.",
                          "fields": [
                            {
                              "name": "name",
                              "type": "string",
                              "required": false,
                              "description": "The name of the NFT.",
                              "example": "CryptoPunk #1234"
                            },
                            {
                              "name": "image",
                              "type": "string",
                              "required": false,
                              "description": "The image URL of the NFT.",
                              "example": "https://ipfs.io/ipfs/Qm..."
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "name": "cursor",
                    "type": "string",
                    "required": false,
                    "description": "Cursor for paginating to the next set of NFTs.",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  },
                  {
                    "name": "page_size",
                    "type": "number",
                    "required": true,
                    "description": "Number of NFTs returned in the current page.",
                    "example": 10
                  },
                  {
                    "name": "page",
                    "type": "number",
                    "required": true,
                    "description": "Current page number.",
                    "example": 0
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "eth_getNFTCollections": {
      "apiHost": "https://site1.moralis-nodes.com",
      "summary": "Get NFT Collections by Wallet Address",
      "description": "Retrieves the list of NFT collections owned by a specific wallet address. Includes collection details such as the logo and count of NFTs.",
      "method": "POST",
      "path": "/:chain/:apiKey",
      "pathParams": [
        {
          "name": "chain",
          "type": "string",
          "required": true,
          "description": "The blockchain to interact with.",
          "example": "eth",
          "enum": [
            "eth",
            "sepolia",
            "holesky",
            "base",
            "base-sepolia",
            "polygon",
            "amoy",
            "bsc",
            "bsc-testnet",
            "arbitrum",
            "arbitrum-sepolia",
            "optimism",
            "optimism-sepolia",
            "gnosis",
            "gnosis-testnet",
            "linea",
            "linea-sepolia",
            "avalanche",
            "moonbeam",
            "moonriver",
            "moonbase",
            "blast",
            "blast-sepolia",
            "mantle",
            "mantle-sepolia",
            "polygon-zkevm",
            "polygon-zkevm-cardona",
            "zksync",
            "zksync-sepolia",
            "zetachain",
            "zetachain-testnet",
            "fantom",
            "opbnb",
            "flow",
            "flow-testnet",
            "ronin",
            "ronin-testnet",
            "lisk",
            "lisk-sepolia"
          ]
        },
        {
          "name": "apiKey",
          "type": "string",
          "required": true,
          "description": "Your API key for authentication.",
          "example": "YOUR_API_KEY"
        }
      ],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "The request payload for retrieving NFT collections owned by a wallet address.",
        "type": "object",
        "fields": [
          {
            "name": "jsonrpc",
            "type": "string",
            "required": true,
            "description": "JSON-RPC version (typically 2.0).",
            "example": "2.0"
          },
          {
            "name": "id",
            "type": "number",
            "required": true,
            "description": "The request identifier.",
            "example": 1
          },
          {
            "name": "method",
            "type": "string",
            "required": true,
            "description": "The JSON-RPC method being invoked.",
            "example": "eth_getNFTCollections"
          },
          {
            "name": "params",
            "type": "rpcArray",
            "required": true,
            "description": "Parameters for the method, including the wallet address and optional filters.",
            "example": [
              {
                "address": "0x357C52eBaDAd41B68C0950E2c103576e38D06BcC",
                "limit": 100,
                "cursor": "eyJhbGciOiJIUzI1NiJ9..."
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the list of NFT collections owned by the specified wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "An object containing the NFT collections.",
                "fields": [
                  {
                    "name": "status",
                    "type": "string",
                    "required": true,
                    "description": "Status of the request.",
                    "example": "SYNCING"
                  },
                  {
                    "name": "page",
                    "type": "number",
                    "required": true,
                    "description": "Current page number of the result.",
                    "example": 2
                  },
                  {
                    "name": "page_size",
                    "type": "number",
                    "required": true,
                    "description": "Size of each page of results.",
                    "example": 100
                  },
                  {
                    "name": "cursor",
                    "type": "string",
                    "required": false,
                    "description": "Pagination cursor for fetching additional results.",
                    "example": "string"
                  },
                  {
                    "name": "result",
                    "type": "array",
                    "required": true,
                    "description": "Array of NFT collections owned by the wallet address.",
                    "items": {
                      "type": "object",
                      "fields": [
                        {
                          "name": "token_address",
                          "type": "string",
                          "required": true,
                          "description": "The contract address of the NFT collection.",
                          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                        },
                        {
                          "name": "contract_type",
                          "type": "string",
                          "required": true,
                          "description": "Type of contract (e.g., ERC721).",
                          "example": "ERC721"
                        },
                        {
                          "name": "name",
                          "type": "string",
                          "required": true,
                          "description": "The name of the NFT collection.",
                          "example": "CryptoKitties"
                        },
                        {
                          "name": "symbol",
                          "type": "string",
                          "required": true,
                          "description": "The symbol of the NFT collection.",
                          "example": "RARI"
                        },
                        {
                          "name": "possible_spam",
                          "type": "boolean",
                          "required": true,
                          "description": "Indicates if the collection might be spam.",
                          "example": false
                        },
                        {
                          "name": "verified_collection",
                          "type": "boolean",
                          "required": true,
                          "description": "Indicates if the collection is verified.",
                          "example": false
                        },
                        {
                          "name": "count",
                          "type": "number",
                          "required": true,
                          "description": "Number of NFTs in the collection owned by the wallet address.",
                          "example": 5
                        },
                        {
                          "name": "collection_logo",
                          "type": "string",
                          "required": true,
                          "description": "URL to the logo image of the NFT collection.",
                          "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                        },
                        {
                          "name": "collection_banner_image",
                          "type": "string",
                          "required": true,
                          "description": "URL to the banner image of the NFT collection.",
                          "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "errorResponses": [
        {
          "status": "400",
          "description": "Bad Request. The request was invalid or missing parameters.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "error",
                "type": "object",
                "required": true,
                "description": "Error details.",
                "fields": [
                  {
                    "name": "code",
                    "type": "number",
                    "required": true,
                    "description": "Error code.",
                    "example": -32600
                  },
                  {
                    "name": "message",
                    "type": "string",
                    "required": true,
                    "description": "Error message.",
                    "example": "Invalid parameters"
                  }
                ]
              }
            ]
          }
        },
        {
          "status": "500",
          "description": "Internal Server Error. An unexpected error occurred on the server.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "jsonrpc",
                "type": "string",
                "required": true,
                "description": "JSON-RPC version (typically 2.0).",
                "example": "2.0"
              },
              {
                "name": "id",
                "type": "number",
                "required": true,
                "description": "The request identifier.",
                "example": 1
              },
              {
                "name": "error",
                "type": "object",
                "required": true,
                "description": "Error details.",
                "fields": [
                  {
                    "name": "code",
                    "type": "number",
                    "required": true,
                    "description": "Error code.",
                    "example": -32000
                  },
                  {
                    "name": "message",
                    "type": "string",
                    "required": true,
                    "description": "Error message.",
                    "example": "Internal server error"
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  },
  "evm-docs": {
    "getWalletNFTs": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFTs by wallet address",
      "description": "Fetch all NFTs held by a specified wallet address. Use `token_addresses` to filter by one or many specific contract(s). Each NFT returned includes on-chain metadata as well as off-chain metadata, floor prices, rarity and more where available.",
      "method": "GET",
      "path": "/:address/nft",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "exclude_spam",
          "description": "Should spam NFTs be excluded from the result?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "token_addresses",
          "description": "The addresses to get balances for (optional)",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "Should normalized metadata be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "description": "Should preview media data be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT owners",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The syncing status of the address [SYNCING/SYNCED]",
                "example": "SYNCING"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Moralis Mug"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/normalizedMetadataAttribute"
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of this item the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 21669
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 98
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 98%"
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "floor_price",
                    "type": "string",
                    "description": "The floor price of the NFT",
                    "example": "12345"
                  },
                  {
                    "name": "floor_price_usd",
                    "type": "string",
                    "description": "The floor price of the NFT in USD",
                    "example": "12345.4899"
                  },
                  {
                    "name": "floor_price_currency",
                    "type": "string",
                    "description": "The currency of the floor price",
                    "example": "eth"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details about the most recent sale involving this token.",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The transaction hash of the last sale",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp of the last sale",
                        "example": "2023-04-04T15:59:11.000Z"
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The buyer address of the last sale",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The seller address of the last sale",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the last sale",
                        "example": "7300000000000000"
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the last sale",
                        "example": "0.0073"
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price of the last sale",
                        "example": "13.61"
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The USD price of the last sale at the current value",
                        "example": "15.53"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address that is sold",
                        "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID that is sold",
                        "example": "170"
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "The ERC20 token that is being traded with",
                        "required": [
                          "token_name",
                          "token_symbol",
                          "token_logo",
                          "token_decimals",
                          "token_address"
                        ],
                        "properties": {
                          "token_name": {
                            "type": "string",
                            "description": "The token name",
                            "example": "Ether"
                          },
                          "token_symbol": {
                            "type": "string",
                            "description": "The token symbol",
                            "example": "ETH"
                          },
                          "token_logo": {
                            "type": "string",
                            "description": "The token logo",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          "token_decimals": {
                            "type": "string",
                            "description": "The token decimals",
                            "example": "18"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The token address",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getMultipleNFTs": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Metadata for NFTs",
      "description": "Get NFT metadata for one or many NFTs. Accepts an array of up to 25 `tokens`, each requiring `token_address` and `token_id`. Each NFT returned includes on-chain metadata as well as off-chain metadata, floor prices, rarity and more where available.",
      "method": "POST",
      "path": "/nft/getMultipleNFTs",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "tokens",
            "type": "object",
            "description": "The tokens to be fetched (max 25 tokens)",
            "example": [
              {
                "token_address": "0xa4991609c508b6d4fb7156426db0bd49fe298bd8",
                "token_id": "12"
              },
              {
                "token_address": "0x3c64dc415ebb4690d1df2b6216148c8de6dd29f7",
                "token_id": "1"
              },
              {
                "token_address": "0x3c64dc415ebb4690d1df2b6216148c8de6dd29f7",
                "token_id": "200"
              }
            ],
            "fields": [
              {
                "name": "token_address",
                "type": "string",
                "description": "The contract address",
                "example": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
              },
              {
                "name": "token_id",
                "type": "string",
                "description": "The id of the token",
                "example": 100
              }
            ]
          },
          {
            "name": "normalizeMetadata",
            "type": "boolean",
            "description": "Should normalized metadata be returned?",
            "example": false
          },
          {
            "name": "media_items",
            "type": "boolean",
            "description": "Should preview media data be returned?",
            "example": false
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT owners"
        }
      ]
    },
    "getWalletNFTTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT Transfers by wallet address",
      "description": "Get NFT transfers for a wallet, with filters like `contract_addresses` and other parameters. Supports ERC-721, ERC-1155 as well as custom contracts such as CryptoPunks and CryptoKitties.",
      "method": "GET",
      "path": "/:address/nft/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address of the sender or recipient of the transfers",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "contract_addresses",
          "description": "List of contract addresses of transfers",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "To get the reserves at this block number",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_date",
          "description": "The date from where to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get transfers up until this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT transfers",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The address that sent the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The address that received the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of tokens transferred",
                    "example": "1"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "88256"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash of the transaction"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_type",
                    "type": "string",
                    "description": "The transaction type"
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index"
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index"
                  },
                  {
                    "name": "operator",
                    "type": "string",
                    "description": "The operator present only for ERC1155 transfers",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details about the most recent sale involving this token.",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The transaction hash of the last sale",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp of the last sale",
                        "example": "2023-04-04T15:59:11.000Z"
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The buyer address of the last sale",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The seller address of the last sale",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the last sale",
                        "example": "7300000000000000"
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the last sale",
                        "example": "0.0073"
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price of the last sale",
                        "example": "13.61"
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The USD price of the last sale at the current value",
                        "example": "15.53"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address that is sold",
                        "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID that is sold",
                        "example": "170"
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "The ERC20 token that is being traded with",
                        "required": [
                          "token_name",
                          "token_symbol",
                          "token_logo",
                          "token_decimals",
                          "token_address"
                        ],
                        "properties": {
                          "token_name": {
                            "type": "string",
                            "description": "The token name",
                            "example": "Ether"
                          },
                          "token_symbol": {
                            "type": "string",
                            "description": "The token symbol",
                            "example": "ETH"
                          },
                          "token_logo": {
                            "type": "string",
                            "description": "The token logo",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          "token_decimals": {
                            "type": "string",
                            "description": "The token decimals",
                            "example": "18"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The token address",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "name": "block_exists",
                "type": "boolean",
                "description": "Indicator if the block exists",
                "example": true
              },
              {
                "name": "index_complete",
                "type": "boolean",
                "description": "Indicator if the block is fully indexed",
                "example": true
              }
            ]
          }
        }
      ]
    },
    "getWalletNFTCollections": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT collections by wallet address",
      "description": "Fetch all NFT Collections held by a specified wallet address. Each Collection returned includes on-chain metadata as well as off-chain metadata, floor prices and more where available.",
      "method": "GET",
      "path": "/:address/nft/collections",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address of the owner of NFTs in the collections",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "exclude_spam",
          "description": "Should spam NFTs be excluded from the result?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "token_counts",
          "description": "Should token counts per collection be included in the response?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the NFT collections owned by a wallet",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The syncing status of the address [SYNCING/SYNCED]",
                "example": "SYNCING"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "count",
                    "type": "number",
                    "description": "The number of tokens the wallet holds in this collection",
                    "example": 5
                  },
                  {
                    "name": "collection_logo",
                    "type": "string",
                    "description": "The logo of the collection",
                    "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                  },
                  {
                    "name": "collection_banner_image",
                    "type": "string",
                    "description": "The banner image of the collection",
                    "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                  },
                  {
                    "name": "floor_price",
                    "type": "string",
                    "description": "The floor price of the contract",
                    "example": "12345"
                  },
                  {
                    "name": "floor_price_usd",
                    "type": "string",
                    "description": "The floor price of the contract in USD",
                    "example": "12345.4899"
                  },
                  {
                    "name": "floor_price_currency",
                    "type": "string",
                    "description": "The currency of the floor price",
                    "example": "eth"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details about the most recent sale involving this token.",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The transaction hash of the last sale",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp of the last sale",
                        "example": "2023-04-04T15:59:11.000Z"
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The buyer address of the last sale",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The seller address of the last sale",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the last sale",
                        "example": "7300000000000000"
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the last sale",
                        "example": "0.0073"
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price of the last sale",
                        "example": "13.61"
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The USD price of the last sale at the current value",
                        "example": "15.53"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address that is sold",
                        "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID that is sold",
                        "example": "170"
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "The ERC20 token that is being traded with",
                        "required": [
                          "token_name",
                          "token_symbol",
                          "token_logo",
                          "token_decimals",
                          "token_address"
                        ],
                        "properties": {
                          "token_name": {
                            "type": "string",
                            "description": "The token name",
                            "example": "Ether"
                          },
                          "token_symbol": {
                            "type": "string",
                            "description": "The token symbol",
                            "example": "ETH"
                          },
                          "token_logo": {
                            "type": "string",
                            "description": "The token logo",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          "token_decimals": {
                            "type": "string",
                            "description": "The token decimals",
                            "example": "18"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The token address",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getContractNFTs": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFTs by contract address",
      "description": "Fetch all NFTs for a given collection. Each NFT returned includes on-chain metadata as well as off-chain metadata, floor prices, rarity and more where available.",
      "method": "GET",
      "path": "/nft/:address",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x306b1ea3ecdf94aB739F1910bbda052Ed4A9f949",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "totalRanges",
          "description": "The number of subranges to split the results into",
          "required": false,
          "type": "number"
        },
        {
          "name": "range",
          "description": "The desired subrange to query",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "Should normalized metadata be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "description": "Should preview media data be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFTs",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Moralis Mug"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/normalizedMetadataAttribute"
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "minter_address",
                    "type": "string",
                    "description": "The address that minted the NFT",
                    "example": "0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The quantity of this item that the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 21669
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 98
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 98%"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details about the most recent sale involving this token.",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The transaction hash of the last sale",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp of the last sale",
                        "example": "2023-04-04T15:59:11.000Z"
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The buyer address of the last sale",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The seller address of the last sale",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the last sale",
                        "example": "7300000000000000"
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the last sale",
                        "example": "0.0073"
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price of the last sale",
                        "example": "13.61"
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The USD price of the last sale at the current value",
                        "example": "15.53"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address that is sold",
                        "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID that is sold",
                        "example": "170"
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "The ERC20 token that is being traded with",
                        "required": [
                          "token_name",
                          "token_symbol",
                          "token_logo",
                          "token_decimals",
                          "token_address"
                        ],
                        "properties": {
                          "token_name": {
                            "type": "string",
                            "description": "The token name",
                            "example": "Ether"
                          },
                          "token_symbol": {
                            "type": "string",
                            "description": "The token symbol",
                            "example": "ETH"
                          },
                          "token_logo": {
                            "type": "string",
                            "description": "The token logo",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          "token_decimals": {
                            "type": "string",
                            "description": "The token decimals",
                            "example": "18"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The token address",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "name": "list_price",
                    "type": "object",
                    "fields": [
                      {
                        "name": "listed",
                        "type": "boolean",
                        "description": "Indicates if the NFT is listed for sale",
                        "example": true
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the NFT",
                        "example": "27008"
                      },
                      {
                        "name": "price_currency",
                        "type": "string",
                        "description": "The currency of the price",
                        "example": "eth"
                      },
                      {
                        "name": "price_usd",
                        "type": "string",
                        "description": "The price of the NFT in USD",
                        "example": "13.61"
                      },
                      {
                        "name": "marketplace",
                        "type": "string",
                        "description": "The marketplace where the NFT is listed",
                        "example": "opensea"
                      }
                    ]
                  },
                  {
                    "name": "floor_price",
                    "type": "string",
                    "description": "The floor price of collection the NFT belongs to",
                    "example": "12345"
                  },
                  {
                    "name": "floor_price_usd",
                    "type": "string",
                    "description": "The floor price of the contract in USD",
                    "example": "12345.4899"
                  },
                  {
                    "name": "floor_price_currency",
                    "type": "string",
                    "description": "The currency of the floor price",
                    "example": "eth"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTOwners": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT owners by contract address",
      "description": "Identify wallets owning NFTs from a specific contract.",
      "method": "GET",
      "path": "/nft/:address/owners",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x306b1ea3ecdf94ab739f1910bbda052ed4a9f949",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "Should normalized metadata be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "description": "Should preview media data be returned?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT owners",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The syncing status of the address [SYNCING/SYNCED]",
                "example": "SYNCING"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Moralis Mug"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/normalizedMetadataAttribute"
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of this item the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 21669
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 98
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 98%"
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "floor_price",
                    "type": "string",
                    "description": "The floor price of the NFT",
                    "example": "12345"
                  },
                  {
                    "name": "floor_price_usd",
                    "type": "string",
                    "description": "The floor price of the NFT in USD",
                    "example": "12345.4899"
                  },
                  {
                    "name": "floor_price_currency",
                    "type": "string",
                    "description": "The currency of the floor price",
                    "example": "eth"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details about the most recent sale involving this token.",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The transaction hash of the last sale",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp of the last sale",
                        "example": "2023-04-04T15:59:11.000Z"
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The buyer address of the last sale",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The seller address of the last sale",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the last sale",
                        "example": "7300000000000000"
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the last sale",
                        "example": "0.0073"
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price of the last sale",
                        "example": "13.61"
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The USD price of the last sale at the current value",
                        "example": "15.53"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address that is sold",
                        "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID that is sold",
                        "example": "170"
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "The ERC20 token that is being traded with",
                        "required": [
                          "token_name",
                          "token_symbol",
                          "token_logo",
                          "token_decimals",
                          "token_address"
                        ],
                        "properties": {
                          "token_name": {
                            "type": "string",
                            "description": "The token name",
                            "example": "Ether"
                          },
                          "token_symbol": {
                            "type": "string",
                            "description": "The token symbol",
                            "example": "ETH"
                          },
                          "token_logo": {
                            "type": "string",
                            "description": "The token logo",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          "token_decimals": {
                            "type": "string",
                            "description": "The token decimals",
                            "example": "18"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The token address",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTContractTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT transfers by contract address",
      "description": "Get NFT transfers for a contract, with options to filter by date, token, or other parameters.",
      "method": "GET",
      "path": "/nft/:address/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x306b1ea3ecdf94ab739f1910bbda052ed4a9f949",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from where to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from where to get the transfers.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The date from where to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get transfers up until this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT transfers",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The address that sent the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The address that received the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of tokens transferred",
                    "example": "1"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "88256"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash of the transaction"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_type",
                    "type": "string",
                    "description": "The transaction type"
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index"
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index"
                  },
                  {
                    "name": "operator",
                    "type": "string",
                    "description": "The operator present only for ERC1155 transfers",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details about the most recent sale involving this token.",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The transaction hash of the last sale",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp of the last sale",
                        "example": "2023-04-04T15:59:11.000Z"
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The buyer address of the last sale",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The seller address of the last sale",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the last sale",
                        "example": "7300000000000000"
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the last sale",
                        "example": "0.0073"
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price of the last sale",
                        "example": "13.61"
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The USD price of the last sale at the current value",
                        "example": "15.53"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address that is sold",
                        "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID that is sold",
                        "example": "170"
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "The ERC20 token that is being traded with",
                        "required": [
                          "token_name",
                          "token_symbol",
                          "token_logo",
                          "token_decimals",
                          "token_address"
                        ],
                        "properties": {
                          "token_name": {
                            "type": "string",
                            "description": "The token name",
                            "example": "Ether"
                          },
                          "token_symbol": {
                            "type": "string",
                            "description": "The token symbol",
                            "example": "ETH"
                          },
                          "token_logo": {
                            "type": "string",
                            "description": "The token logo",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          "token_decimals": {
                            "type": "string",
                            "description": "The token decimals",
                            "example": "18"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The token address",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "name": "block_exists",
                "type": "boolean",
                "description": "Indicator if the block exists",
                "example": true
              },
              {
                "name": "index_complete",
                "type": "boolean",
                "description": "Indicator if the block is fully indexed",
                "example": true
              }
            ]
          }
        }
      ]
    },
    "getNFTByContractTraits": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFTs by traits",
      "description": "Find NFTs in a contract matching specific traits, perfect for attribute-based searches.",
      "method": "POST",
      "path": "/nft/:address/nfts-by-traits",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "Should normalized metadata be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "description": "Should preview media data be returned?",
          "required": false,
          "type": "boolean"
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "json"
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFTs",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Moralis Mug"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/normalizedMetadataAttribute"
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "minter_address",
                    "type": "string",
                    "description": "The address that minted the NFT",
                    "example": "0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The quantity of this item that the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 21669
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 98
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 98%"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details about the most recent sale involving this token.",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The transaction hash of the last sale",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp of the last sale",
                        "example": "2023-04-04T15:59:11.000Z"
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The buyer address of the last sale",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The seller address of the last sale",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the last sale",
                        "example": "7300000000000000"
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the last sale",
                        "example": "0.0073"
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price of the last sale",
                        "example": "13.61"
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The USD price of the last sale at the current value",
                        "example": "15.53"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address that is sold",
                        "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID that is sold",
                        "example": "170"
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "The ERC20 token that is being traded with",
                        "required": [
                          "token_name",
                          "token_symbol",
                          "token_logo",
                          "token_decimals",
                          "token_address"
                        ],
                        "properties": {
                          "token_name": {
                            "type": "string",
                            "description": "The token name",
                            "example": "Ether"
                          },
                          "token_symbol": {
                            "type": "string",
                            "description": "The token symbol",
                            "example": "ETH"
                          },
                          "token_logo": {
                            "type": "string",
                            "description": "The token logo",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          "token_decimals": {
                            "type": "string",
                            "description": "The token decimals",
                            "example": "18"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The token address",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "name": "list_price",
                    "type": "object",
                    "fields": [
                      {
                        "name": "listed",
                        "type": "boolean",
                        "description": "Indicates if the NFT is listed for sale",
                        "example": true
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the NFT",
                        "example": "27008"
                      },
                      {
                        "name": "price_currency",
                        "type": "string",
                        "description": "The currency of the price",
                        "example": "eth"
                      },
                      {
                        "name": "price_usd",
                        "type": "string",
                        "description": "The price of the NFT in USD",
                        "example": "13.61"
                      },
                      {
                        "name": "marketplace",
                        "type": "string",
                        "description": "The marketplace where the NFT is listed",
                        "example": "opensea"
                      }
                    ]
                  },
                  {
                    "name": "floor_price",
                    "type": "string",
                    "description": "The floor price of collection the NFT belongs to",
                    "example": "12345"
                  },
                  {
                    "name": "floor_price_usd",
                    "type": "string",
                    "description": "The floor price of the contract in USD",
                    "example": "12345.4899"
                  },
                  {
                    "name": "floor_price_currency",
                    "type": "string",
                    "description": "The currency of the floor price",
                    "example": "eth"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTTraitsByCollection": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT traits by collection",
      "description": "Explore the distinct traits of NFTs in a contract, showcasing their unique attributes.",
      "method": "GET",
      "path": "/nft/:address/traits",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the traits",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "traits",
                "type": "object",
                "fields": [
                  {
                    "name": "trait_type",
                    "type": "string",
                    "description": "The trait type",
                    "example": "Background"
                  },
                  {
                    "name": "values",
                    "type": "array",
                    "field": {
                      "description": "The trait values",
                      "required": [
                        "trait_value",
                        "count",
                        "percentage",
                        "rarity_label"
                      ],
                      "properties": {
                        "trait_value": {
                          "type": "string",
                          "description": "The trait value",
                          "example": "Lavendar"
                        },
                        "count": {
                          "type": "number",
                          "description": "The total NFT in the collection with this trait",
                          "example": 18593
                        },
                        "percentage": {
                          "type": "number",
                          "description": "The rarity percentage of the trait",
                          "example": 85.8
                        },
                        "rarity_label": {
                          "type": "string",
                          "description": "The rarity label of the trait",
                          "example": "Top 4% trait"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTTraitsByCollectionPaginate": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT traits by collection paginate",
      "description": "Fetch NFT traits for a contract with pagination for efficient navigation of large collections.",
      "method": "GET",
      "path": "/nft/:address/traits/paginate",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the traits",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "trait_type",
                    "type": "string",
                    "description": "The trait type",
                    "example": "Background"
                  },
                  {
                    "name": "trait_value",
                    "type": "string",
                    "description": "The trait value",
                    "example": "Lavendar"
                  },
                  {
                    "name": "count",
                    "type": "number",
                    "description": "The total NFT in the collection with this trait",
                    "example": 18593
                  },
                  {
                    "name": "percentage",
                    "type": "number",
                    "description": "The rarity percentage of the trait",
                    "example": 85.8
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label of the trait",
                    "example": "Top 4% trait"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "resyncNFTRarity": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resync NFT Trait",
      "description": "Refresh trait and rarity data for NFTs in a contract to ensure accuracy.",
      "method": "GET",
      "path": "/nft/:address/traits/resync",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "202",
          "description": "The resync request was received and will be executed.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The status of the resync request"
              }
            ]
          }
        }
      ]
    },
    "getNFTTrades": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT trades by collection",
      "description": "Get NFT trades for a given contract with the ability to filter by marketplace.",
      "method": "GET",
      "path": "/nft/:address/trades",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "arbitrum",
            "0xa4b1",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The block number to get the trades from",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "The end date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "marketplace",
          "description": "Marketplace from which to get the trades. See [supported Marketplaces](https://docs.moralis.io/web3-data-api/evm/nft-marketplaces).",
          "required": false,
          "example": "opensea",
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "nft_metadata",
          "description": "Include the NFT Metadata of the NFT Token",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the trades",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "description": "The transaction index"
                  },
                  {
                    "name": "token_ids",
                    "type": "array",
                    "description": "The token ID(s) traded",
                    "example": [
                      "15",
                      "54"
                    ],
                    "field": {
                      "type": "string",
                      "example": "15"
                    }
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The address that sold the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The address that bought the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x4ad3785ec7eed7589fa86538244a4530f962434f"
                  },
                  {
                    "name": "marketplace_address",
                    "type": "string",
                    "description": "The address of the contract that traded the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "price_token_address",
                    "type": "string",
                    "description": "The address of the token used to pay for the NFT",
                    "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "13680123"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTTradesByToken": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT trades by token",
      "description": "Get NFT trades for a specific NFT by specifying a contract addres and token ID.",
      "method": "GET",
      "path": "/nft/:address/:token_id/trades",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The token ID of the NFT contract",
          "required": true,
          "example": "123",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "arbitrum",
            "0xa4b1",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The block number to get the trades from",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "The end date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "nft_metadata",
          "description": "Include the NFT Metadata of the NFT Token",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the trades",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "description": "The transaction index"
                  },
                  {
                    "name": "token_ids",
                    "type": "array",
                    "description": "The token ID(s) traded",
                    "example": [
                      "15",
                      "54"
                    ],
                    "field": {
                      "type": "string",
                      "example": "15"
                    }
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The address that sold the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The address that bought the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x4ad3785ec7eed7589fa86538244a4530f962434f"
                  },
                  {
                    "name": "marketplace_address",
                    "type": "string",
                    "description": "The address of the contract that traded the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "price_token_address",
                    "type": "string",
                    "description": "The address of the token used to pay for the NFT",
                    "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "13680123"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTTradesByWallet": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT trades by wallet address",
      "description": "Get NFT trades for a specific wallet address.",
      "method": "GET",
      "path": "/wallets/:address/nfts/trades",
      "pathParams": [
        {
          "name": "address",
          "description": "The owner wallet address",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "arbitrum",
            "0xa4b1",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The block number to get the trades from",
          "required": false,
          "type": "string"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "The end date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "nft_metadata",
          "description": "Include the NFT Metadata of the NFT Token",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the trades",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "description": "The transaction index"
                  },
                  {
                    "name": "token_ids",
                    "type": "array",
                    "description": "The token ID(s) traded",
                    "example": [
                      "15",
                      "54"
                    ],
                    "field": {
                      "type": "string",
                      "example": "15"
                    }
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The address that sold the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The address that bought the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x4ad3785ec7eed7589fa86538244a4530f962434f"
                  },
                  {
                    "name": "marketplace_address",
                    "type": "string",
                    "description": "The address of the contract that traded the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "price_token_address",
                    "type": "string",
                    "description": "The address of the token used to pay for the NFT",
                    "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "13680123"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTContractMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT collection metadata",
      "description": "Fetch on-chain metadata like name, symbol, and base token URI for an NFT contract. Also returns off-chain metadata, floor prices and more where available.",
      "method": "GET",
      "path": "/nft/:address/metadata",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the metadata for an NFT collection.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "token_address",
                "type": "string",
                "description": "The address of the token contract",
                "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
              },
              {
                "name": "name",
                "type": "string",
                "description": "The name of the token contract",
                "example": "KryptoKitties"
              },
              {
                "name": "synced_at",
                "type": "string",
                "description": "Timestamp of when the contract was last synced with the node"
              },
              {
                "name": "symbol",
                "type": "string",
                "description": "The symbol of the NFT contract",
                "example": "RARI"
              },
              {
                "name": "contract_type",
                "type": "string",
                "description": "The type of NFT contract",
                "example": "ERC721"
              },
              {
                "name": "possible_spam",
                "type": "boolean",
                "description": "Indicates if a contract is possibly a spam contract",
                "example": "false"
              },
              {
                "name": "verified_collection",
                "type": "boolean",
                "description": "Indicates if a contract is verified",
                "example": "false"
              },
              {
                "name": "collection_logo",
                "type": "string",
                "description": "The logo of the collection",
                "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
              },
              {
                "name": "collection_banner_image",
                "type": "string",
                "description": "The banner image of the collection",
                "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
              },
              {
                "name": "collection_category",
                "type": "string",
                "description": "The category of the collection",
                "example": "Art"
              },
              {
                "name": "project_url",
                "type": "string",
                "description": "The project url of the collection",
                "example": "https://www.cryptokitties.co/"
              },
              {
                "name": "wiki_url",
                "type": "string",
                "description": "The wiki url of the collection",
                "example": "https://en.wikipedia.org/wiki/CryptoKitties"
              },
              {
                "name": "discord_url",
                "type": "string",
                "description": "The discord url of the collection",
                "example": "https://discord.com/invite/cryptokitties"
              },
              {
                "name": "telegram_url",
                "type": "string",
                "description": "The telegram url of the collection",
                "example": "https://t.me/cryptokitties"
              },
              {
                "name": "twitter_username",
                "type": "string",
                "description": "The twitter username of the collection",
                "example": "CryptoKitties"
              },
              {
                "name": "instagram_username",
                "type": "string",
                "description": "The instagram username of the collection",
                "example": "cryptokitties"
              },
              {
                "name": "floor_price",
                "type": "string",
                "description": "The floor price of the contract",
                "example": "12345"
              },
              {
                "name": "floor_price_usd",
                "type": "string",
                "description": "The floor price of the contract in USD",
                "example": "12345.4899"
              },
              {
                "name": "floor_price_currency",
                "type": "string",
                "description": "The currency of the floor price",
                "example": "eth"
              },
              {
                "name": "last_sale",
                "type": "object",
                "description": "Details about the most recent sale involving this token.",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash of the last sale",
                    "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp of the last sale",
                    "example": "2023-04-04T15:59:11.000Z"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The buyer address of the last sale",
                    "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The seller address of the last sale",
                    "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the last sale",
                    "example": "7300000000000000"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the last sale",
                    "example": "0.0073"
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price of the last sale",
                    "example": "13.61"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value",
                    "example": "15.53"
                  },
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The token address that is sold",
                    "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID that is sold",
                    "example": "170"
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "The ERC20 token that is being traded with",
                    "required": [
                      "token_name",
                      "token_symbol",
                      "token_logo",
                      "token_decimals",
                      "token_address"
                    ],
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "The token name",
                        "example": "Ether"
                      },
                      "token_symbol": {
                        "type": "string",
                        "description": "The token symbol",
                        "example": "ETH"
                      },
                      "token_logo": {
                        "type": "string",
                        "description": "The token logo",
                        "example": "https://cdn.moralis.io/eth/0x.png"
                      },
                      "token_decimals": {
                        "type": "string",
                        "description": "The token decimals",
                        "example": "18"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "The token address",
                        "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTBulkContractMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get metadata for multiple NFT contracts",
      "description": "Retrieve metadata (name, symbol) for up to 25 NFT contracts in one call. Also returns off-chain metadata, floor prices and more where available.",
      "method": "POST",
      "path": "/nft/metadata",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "json"
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the metadata for the requested NFT collections."
        }
      ]
    },
    "getNFTMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT metadata",
      "description": "Fetch metadata for a specific NFT. Includes on-chain metadata as well as off-chain metadata, floor prices, rarity and more where available.",
      "method": "GET",
      "path": "/nft/:address/:token_id",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The ID of the token",
          "required": true,
          "example": "1",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "Should normalized metadata be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "description": "Should preview media data be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the specified NFT.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "token_address",
                "type": "string",
                "description": "The address of the NFT contract",
                "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
              },
              {
                "name": "token_id",
                "type": "string",
                "description": "The token ID of the NFT",
                "example": "15"
              },
              {
                "name": "owner_of",
                "type": "string",
                "description": "The wallet address of the owner of the NFT",
                "example": "0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"
              },
              {
                "name": "token_hash",
                "type": "string",
                "description": "The token hash",
                "example": "502cee781b0fb40ea02508b21d319ced"
              },
              {
                "name": "block_number",
                "type": "string",
                "description": "The block number when the amount or owner changed",
                "example": "88256"
              },
              {
                "name": "block_number_minted",
                "type": "string",
                "description": "The block number when the NFT was minted",
                "example": "88256"
              },
              {
                "name": "contract_type",
                "type": "string",
                "description": "The type of NFT contract standard",
                "example": "ERC721"
              },
              {
                "name": "token_uri",
                "type": "string",
                "description": "The URI to the metadata of the token"
              },
              {
                "name": "metadata",
                "type": "string",
                "description": "The metadata of the token"
              },
              {
                "name": "normalized_metadata",
                "description": "A normalized metadata version of the NFT's metadata.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name or title of the NFT",
                    "example": "Moralis Mug"
                  },
                  "description": {
                    "type": "string",
                    "description": "A detailed description of the NFT",
                    "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                  },
                  "image": {
                    "type": "string",
                    "description": "The URL of the NFT's image",
                    "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                  },
                  "external_link": {
                    "type": "string",
                    "description": "A link to additional information",
                    "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                  },
                  "animation_url": {
                    "type": "string",
                    "description": "An animated version of the NFT's image",
                    "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/normalizedMetadataAttribute"
                    }
                  }
                }
              },
              {
                "name": "media",
                "description": "A set of links to 'thumbnail / preview' media files",
                "properties": {
                  "mimetype": {
                    "type": "string",
                    "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                  },
                  "category": {
                    "enum": [
                      "image",
                      "audio",
                      "video"
                    ]
                  },
                  "status": {
                    "enum": [
                      "success",
                      "processing",
                      "unsupported_media",
                      "invalid_url",
                      "host_unavailable",
                      "temporarily_unavailable"
                    ],
                    "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                  },
                  "original_media_url": {
                    "type": "string",
                    "description": "The url of the original media file."
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "The timestamp of the last update to this NFT media record."
                  },
                  "parent_hash": {
                    "type": "string",
                    "description": "Hash value of the original media file."
                  },
                  "media_collection": {
                    "description": "Preview item associated with the original",
                    "$ref": "#/components/schemas/mediaCollection"
                  }
                }
              },
              {
                "name": "minter_address",
                "type": "string",
                "description": "The address that minted the NFT",
                "example": "0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"
              },
              {
                "name": "last_token_uri_sync",
                "type": "string",
                "description": "When the token_uri was last updated"
              },
              {
                "name": "last_metadata_sync",
                "type": "string",
                "description": "When the metadata was last updated"
              },
              {
                "name": "amount",
                "type": "string",
                "description": "The quantity of this item that the user owns (used by ERC1155)",
                "example": "1"
              },
              {
                "name": "name",
                "type": "string",
                "description": "The name of the NFT contract",
                "example": "CryptoKitties"
              },
              {
                "name": "symbol",
                "type": "string",
                "description": "The symbol of the NFT contract",
                "example": "RARI"
              },
              {
                "name": "possible_spam",
                "type": "boolean",
                "description": "Indicates if a contract is possibly a spam contract",
                "example": "false"
              },
              {
                "name": "verified_collection",
                "type": "boolean",
                "description": "Indicates if a contract is verified",
                "example": "false"
              },
              {
                "name": "rarity_rank",
                "type": "number",
                "description": "The rarity rank",
                "example": 21669
              },
              {
                "name": "rarity_percentage",
                "type": "number",
                "description": "The rarity percentage",
                "example": 98
              },
              {
                "name": "rarity_label",
                "type": "string",
                "description": "The rarity label",
                "example": "Top 98%"
              },
              {
                "name": "last_sale",
                "type": "object",
                "description": "Details about the most recent sale involving this token.",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash of the last sale",
                    "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp of the last sale",
                    "example": "2023-04-04T15:59:11.000Z"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The buyer address of the last sale",
                    "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The seller address of the last sale",
                    "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the last sale",
                    "example": "7300000000000000"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the last sale",
                    "example": "0.0073"
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price of the last sale",
                    "example": "13.61"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value",
                    "example": "15.53"
                  },
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The token address that is sold",
                    "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID that is sold",
                    "example": "170"
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "The ERC20 token that is being traded with",
                    "required": [
                      "token_name",
                      "token_symbol",
                      "token_logo",
                      "token_decimals",
                      "token_address"
                    ],
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "The token name",
                        "example": "Ether"
                      },
                      "token_symbol": {
                        "type": "string",
                        "description": "The token symbol",
                        "example": "ETH"
                      },
                      "token_logo": {
                        "type": "string",
                        "description": "The token logo",
                        "example": "https://cdn.moralis.io/eth/0x.png"
                      },
                      "token_decimals": {
                        "type": "string",
                        "description": "The token decimals",
                        "example": "18"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "The token address",
                        "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                      }
                    }
                  }
                ]
              },
              {
                "name": "list_price",
                "type": "object",
                "fields": [
                  {
                    "name": "listed",
                    "type": "boolean",
                    "description": "Indicates if the NFT is listed for sale",
                    "example": true
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the NFT",
                    "example": "27008"
                  },
                  {
                    "name": "price_currency",
                    "type": "string",
                    "description": "The currency of the price",
                    "example": "eth"
                  },
                  {
                    "name": "price_usd",
                    "type": "string",
                    "description": "The price of the NFT in USD",
                    "example": "13.61"
                  },
                  {
                    "name": "marketplace",
                    "type": "string",
                    "description": "The marketplace where the NFT is listed",
                    "example": "opensea"
                  }
                ]
              },
              {
                "name": "floor_price",
                "type": "string",
                "description": "The floor price of collection the NFT belongs to",
                "example": "12345"
              },
              {
                "name": "floor_price_usd",
                "type": "string",
                "description": "The floor price of the contract in USD",
                "example": "12345.4899"
              },
              {
                "name": "floor_price_currency",
                "type": "string",
                "description": "The currency of the floor price",
                "example": "eth"
              }
            ]
          }
        }
      ]
    },
    "getNFTTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT transfers by token ID",
      "description": "Get transfers of a specific NFT given a contract address and token ID.",
      "method": "GET",
      "path": "/nft/:address/:token_id/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The ID of the token",
          "required": true,
          "example": "1",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "include_prices",
          "description": "Should NFT last sale prices be included in the result?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFT transfers",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The address that sent the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The address that received the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                    "example": "1000000000000000"
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of tokens transferred",
                    "example": "1"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number of the transaction",
                    "example": "88256"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-06-04T16:00:15"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash of the transaction"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "transaction_type",
                    "type": "string",
                    "description": "The transaction type"
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index"
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index"
                  },
                  {
                    "name": "operator",
                    "type": "string",
                    "description": "The operator present only for ERC1155 transfers",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details about the most recent sale involving this token.",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The transaction hash of the last sale",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp of the last sale",
                        "example": "2023-04-04T15:59:11.000Z"
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The buyer address of the last sale",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The seller address of the last sale",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the last sale",
                        "example": "7300000000000000"
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the last sale",
                        "example": "0.0073"
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price of the last sale",
                        "example": "13.61"
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The USD price of the last sale at the current value",
                        "example": "15.53"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address that is sold",
                        "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID that is sold",
                        "example": "170"
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "The ERC20 token that is being traded with",
                        "required": [
                          "token_name",
                          "token_symbol",
                          "token_logo",
                          "token_decimals",
                          "token_address"
                        ],
                        "properties": {
                          "token_name": {
                            "type": "string",
                            "description": "The token name",
                            "example": "Ether"
                          },
                          "token_symbol": {
                            "type": "string",
                            "description": "The token symbol",
                            "example": "ETH"
                          },
                          "token_logo": {
                            "type": "string",
                            "description": "The token logo",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          "token_decimals": {
                            "type": "string",
                            "description": "The token decimals",
                            "example": "18"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The token address",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "name": "block_exists",
                "type": "boolean",
                "description": "Indicator if the block exists",
                "example": true
              },
              {
                "name": "index_complete",
                "type": "boolean",
                "description": "Indicator if the block is fully indexed",
                "example": true
              }
            ]
          }
        }
      ]
    },
    "getNFTTokenIdOwners": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT owners by token ID",
      "description": "List wallets owning a specific NFT, defined by its contract and token ID.",
      "method": "GET",
      "path": "/nft/:address/:token_id/owners",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0x524cab2ec69124574082676e6f654a18df49a048",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The ID of the token",
          "required": true,
          "example": "1",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "format",
          "description": "The format of the token ID",
          "required": false,
          "example": "decimal",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "normalizeMetadata",
          "description": "Should normalized metadata be returned?",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "media_items",
          "description": "Should preview media data be returned?",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of NFTs with their respective owners.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The syncing status of the address [SYNCING/SYNCED]",
                "example": "SYNCING"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the NFT contract",
                    "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID of the NFT",
                    "example": "15"
                  },
                  {
                    "name": "contract_type",
                    "type": "string",
                    "description": "The type of NFT contract standard",
                    "example": "ERC721"
                  },
                  {
                    "name": "owner_of",
                    "type": "string",
                    "description": "The wallet address of the owner of the NFT",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number when the amount or owner changed",
                    "example": "88256"
                  },
                  {
                    "name": "block_number_minted",
                    "type": "string",
                    "description": "The block number when the NFT was minted",
                    "example": "88256"
                  },
                  {
                    "name": "token_uri",
                    "type": "string",
                    "description": "The URI to the metadata of the token"
                  },
                  {
                    "name": "metadata",
                    "type": "string",
                    "description": "The metadata of the token"
                  },
                  {
                    "name": "normalized_metadata",
                    "description": "A normalized metadata version of the NFT's metadata.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name or title of the NFT",
                        "example": "Moralis Mug"
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the NFT",
                        "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                      },
                      "image": {
                        "type": "string",
                        "description": "The URL of the NFT's image",
                        "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                      },
                      "external_link": {
                        "type": "string",
                        "description": "A link to additional information",
                        "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                      },
                      "animation_url": {
                        "type": "string",
                        "description": "An animated version of the NFT's image",
                        "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/normalizedMetadataAttribute"
                        }
                      }
                    }
                  },
                  {
                    "name": "media",
                    "description": "A set of links to 'thumbnail / preview' media files",
                    "properties": {
                      "mimetype": {
                        "type": "string",
                        "description": "The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"
                      },
                      "category": {
                        "enum": [
                          "image",
                          "audio",
                          "video"
                        ]
                      },
                      "status": {
                        "enum": [
                          "success",
                          "processing",
                          "unsupported_media",
                          "invalid_url",
                          "host_unavailable",
                          "temporarily_unavailable"
                        ],
                        "description": "<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"
                      },
                      "original_media_url": {
                        "type": "string",
                        "description": "The url of the original media file."
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The timestamp of the last update to this NFT media record."
                      },
                      "parent_hash": {
                        "type": "string",
                        "description": "Hash value of the original media file."
                      },
                      "media_collection": {
                        "description": "Preview item associated with the original",
                        "$ref": "#/components/schemas/mediaCollection"
                      }
                    }
                  },
                  {
                    "name": "amount",
                    "type": "string",
                    "description": "The number of this item the user owns (used by ERC1155)",
                    "example": "1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the NFT contract",
                    "example": "CryptoKitties"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the NFT contract",
                    "example": "RARI"
                  },
                  {
                    "name": "token_hash",
                    "type": "string",
                    "description": "The token hash",
                    "example": "502cee781b0fb40ea02508b21d319ced"
                  },
                  {
                    "name": "rarity_rank",
                    "type": "number",
                    "description": "The rarity rank",
                    "example": 21669
                  },
                  {
                    "name": "rarity_percentage",
                    "type": "number",
                    "description": "The rarity percentage",
                    "example": 98
                  },
                  {
                    "name": "rarity_label",
                    "type": "string",
                    "description": "The rarity label",
                    "example": "Top 98%"
                  },
                  {
                    "name": "last_token_uri_sync",
                    "type": "string",
                    "description": "When the token_uri was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "last_metadata_sync",
                    "type": "string",
                    "description": "When the metadata was last updated",
                    "example": "2021-02-24T00:47:26.647Z"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_collection",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  },
                  {
                    "name": "floor_price",
                    "type": "string",
                    "description": "The floor price of the NFT",
                    "example": "12345"
                  },
                  {
                    "name": "floor_price_usd",
                    "type": "string",
                    "description": "The floor price of the NFT in USD",
                    "example": "12345.4899"
                  },
                  {
                    "name": "floor_price_currency",
                    "type": "string",
                    "description": "The currency of the floor price",
                    "example": "eth"
                  },
                  {
                    "name": "last_sale",
                    "type": "object",
                    "description": "Details about the most recent sale involving this token.",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The transaction hash of the last sale",
                        "example": "0x19e14f34b8f120c980f7ba05338d64c00384857fb9c561e2c56d0f575424a95c"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp of the last sale",
                        "example": "2023-04-04T15:59:11.000Z"
                      },
                      {
                        "name": "buyer_address",
                        "type": "string",
                        "description": "The buyer address of the last sale",
                        "example": "0xcb1c1fde09f811b294172696404e88e658659905"
                      },
                      {
                        "name": "seller_address",
                        "type": "string",
                        "description": "The seller address of the last sale",
                        "example": "0x497a7dee2f13db161eb2fec060fa783cb041419f"
                      },
                      {
                        "name": "price",
                        "type": "string",
                        "description": "The price of the last sale",
                        "example": "7300000000000000"
                      },
                      {
                        "name": "price_formatted",
                        "type": "string",
                        "description": "The formatted price of the last sale",
                        "example": "0.0073"
                      },
                      {
                        "name": "usd_price_at_sale",
                        "type": "string",
                        "description": "The USD price of the last sale",
                        "example": "13.61"
                      },
                      {
                        "name": "current_usd_value",
                        "type": "string",
                        "description": "The USD price of the last sale at the current value",
                        "example": "15.53"
                      },
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address that is sold",
                        "example": "0xe8778996e096b39705c6a0a937eb587a1ebbda17"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID that is sold",
                        "example": "170"
                      },
                      {
                        "name": "payment_token",
                        "type": "object",
                        "description": "The ERC20 token that is being traded with",
                        "required": [
                          "token_name",
                          "token_symbol",
                          "token_logo",
                          "token_decimals",
                          "token_address"
                        ],
                        "properties": {
                          "token_name": {
                            "type": "string",
                            "description": "The token name",
                            "example": "Ether"
                          },
                          "token_symbol": {
                            "type": "string",
                            "description": "The token symbol",
                            "example": "ETH"
                          },
                          "token_logo": {
                            "type": "string",
                            "description": "The token logo",
                            "example": "https://cdn.moralis.io/eth/0x.png"
                          },
                          "token_decimals": {
                            "type": "string",
                            "description": "The token decimals",
                            "example": "18"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The token address",
                            "example": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "syncNFTContract": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resync NFT Contract",
      "description": "Initiate indexing for a non-synced NFT contract to make its data available.",
      "method": "PUT",
      "path": "/nft/:address/sync",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "201",
          "description": "Contract address was triggered for index."
        }
      ]
    },
    "reSyncMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resync NFT metadata",
      "description": "Update an NFT’s metadata, either from its current token URI or a new one. Choose sync for immediate results or async for background processing.",
      "method": "GET",
      "path": "/nft/:address/:token_id/metadata/resync",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The ID of the token",
          "required": true,
          "example": "1",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "flag",
          "description": "The type of resync to operate",
          "required": false,
          "example": "uri",
          "type": "string"
        },
        {
          "name": "mode",
          "description": "To define the behaviour of the endpoint",
          "required": false,
          "example": "sync",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "(In sync mode) Resync request executed.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The status of the resync request"
              }
            ]
          }
        },
        {
          "status": "202",
          "description": "The resync request was received and will be executed.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The status of the resync request"
              }
            ]
          }
        },
        {
          "status": "404",
          "description": "(In sync mode) Resync request executed and metadata could not be updated.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "status",
                "type": "string",
                "description": "The status of the resync request"
              }
            ]
          }
        }
      ]
    },
    "getNFTContractSalePrices": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT sale prices by collection",
      "description": "Fetch sale prices for NFTs in a contract over a specified number of days. Returns the last sale, lowest sale, highest sale, average sale and total trades within the specified period.",
      "method": "GET",
      "path": "/nft/:address/price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT collection",
          "required": true,
          "example": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "arbitrum",
            "0xa4b1",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "days",
          "description": "The number of days to look back to find the lowest price\nIf not provided 7 days will be the default and 365 is the maximum\n",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the sold price details",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "last_sale",
                "type": "object",
                "description": "The sales price of the NFT collection",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash of the last sale"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp of the last sale"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The buyer address of the last sale"
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The seller address of the last sale"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the last sale"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the last sale"
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price of the last sale at sale time"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID that is sold"
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "The ERC20 token that is being traded with",
                    "required": [
                      "token_name",
                      "token_symbol",
                      "token_logo",
                      "token_decimals",
                      "token_address"
                    ],
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "The token name"
                      },
                      "token_symbol": {
                        "type": "string",
                        "description": "The token symbol"
                      },
                      "token_logo": {
                        "type": "string",
                        "description": "The token logo"
                      },
                      "token_decimals": {
                        "type": "string",
                        "description": "The token decimals"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "The token address"
                      }
                    }
                  }
                ]
              },
              {
                "name": "lowest_sale",
                "type": "object",
                "description": "The lowest sale of the NFT collection",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash of the last sale"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp of the last sale"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The buyer address of the last sale"
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The seller address of the last sale"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the last sale"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the last sale"
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price of the last sale at sale time"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID that is sold"
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "The ERC20 token that is being traded with",
                    "required": [
                      "token_name",
                      "token_symbol",
                      "token_logo",
                      "token_decimals",
                      "token_address"
                    ],
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "The token name"
                      },
                      "token_symbol": {
                        "type": "string",
                        "description": "The token symbol"
                      },
                      "token_logo": {
                        "type": "string",
                        "description": "The token logo"
                      },
                      "token_decimals": {
                        "type": "string",
                        "description": "The token decimals"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "The token address"
                      }
                    }
                  }
                ]
              },
              {
                "name": "highest_sale",
                "type": "object",
                "description": "The highest sale of the NFT collection",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash of the last sale"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp of the last sale"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The buyer address of the last sale"
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The seller address of the last sale"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the last sale"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the last sale"
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price of the last sale at sale time"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID that is sold"
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "The ERC20 token that is being traded with",
                    "required": [
                      "token_name",
                      "token_symbol",
                      "token_logo",
                      "token_decimals",
                      "token_address"
                    ],
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "The token name"
                      },
                      "token_symbol": {
                        "type": "string",
                        "description": "The token symbol"
                      },
                      "token_logo": {
                        "type": "string",
                        "description": "The token logo"
                      },
                      "token_decimals": {
                        "type": "string",
                        "description": "The token decimals"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "The token address"
                      }
                    }
                  }
                ]
              },
              {
                "name": "average_sale",
                "type": "object",
                "description": "The average sale of the NFT collection",
                "fields": [
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the average sale"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the average sale"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value"
                  }
                ]
              },
              {
                "name": "total_trades",
                "type": "number",
                "description": "The total trades in the timeframe"
              },
              {
                "name": "message",
                "type": "string",
                "description": "The error message (if any)"
              }
            ]
          }
        }
      ]
    },
    "getNFTSalePrices": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT sale prices by token",
      "description": "Fetch sale prices for a specific NFT over a specified number of days. Returns the last sale, lowest sale, highest sale, average sale and total trades within the specified period.",
      "method": "GET",
      "path": "/nft/:address/:token_id/price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT collection",
          "required": true,
          "example": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The token id of the NFT collection",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "avalanche",
            "0xa86a",
            "arbitrum",
            "0xa4b1",
            "base",
            "0x2105",
            "optimism",
            "0xa"
          ]
        },
        {
          "name": "days",
          "description": "The number of days to look back to find the lowest price\nIf not provided 7 days will be the default and 365 is the maximum\n",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the sold price details",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "last_sale",
                "type": "object",
                "description": "The sales price of the NFT collection",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash of the last sale"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp of the last sale"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The buyer address of the last sale"
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The seller address of the last sale"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the last sale"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the last sale"
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price of the last sale at sale time"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID that is sold"
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "The ERC20 token that is being traded with",
                    "required": [
                      "token_name",
                      "token_symbol",
                      "token_logo",
                      "token_decimals",
                      "token_address"
                    ],
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "The token name"
                      },
                      "token_symbol": {
                        "type": "string",
                        "description": "The token symbol"
                      },
                      "token_logo": {
                        "type": "string",
                        "description": "The token logo"
                      },
                      "token_decimals": {
                        "type": "string",
                        "description": "The token decimals"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "The token address"
                      }
                    }
                  }
                ]
              },
              {
                "name": "lowest_sale",
                "type": "object",
                "description": "The lowest sale of the NFT collection",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash of the last sale"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp of the last sale"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The buyer address of the last sale"
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The seller address of the last sale"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the last sale"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the last sale"
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price of the last sale at sale time"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID that is sold"
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "The ERC20 token that is being traded with",
                    "required": [
                      "token_name",
                      "token_symbol",
                      "token_logo",
                      "token_decimals",
                      "token_address"
                    ],
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "The token name"
                      },
                      "token_symbol": {
                        "type": "string",
                        "description": "The token symbol"
                      },
                      "token_logo": {
                        "type": "string",
                        "description": "The token logo"
                      },
                      "token_decimals": {
                        "type": "string",
                        "description": "The token decimals"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "The token address"
                      }
                    }
                  }
                ]
              },
              {
                "name": "highest_sale",
                "type": "object",
                "description": "The highest sale of the NFT collection",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash of the last sale"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp of the last sale"
                  },
                  {
                    "name": "buyer_address",
                    "type": "string",
                    "description": "The buyer address of the last sale"
                  },
                  {
                    "name": "seller_address",
                    "type": "string",
                    "description": "The seller address of the last sale"
                  },
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the last sale"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the last sale"
                  },
                  {
                    "name": "usd_price_at_sale",
                    "type": "string",
                    "description": "The USD price of the last sale at sale time"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value"
                  },
                  {
                    "name": "token_id",
                    "type": "string",
                    "description": "The token ID that is sold"
                  },
                  {
                    "name": "payment_token",
                    "type": "object",
                    "description": "The ERC20 token that is being traded with",
                    "required": [
                      "token_name",
                      "token_symbol",
                      "token_logo",
                      "token_decimals",
                      "token_address"
                    ],
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "The token name"
                      },
                      "token_symbol": {
                        "type": "string",
                        "description": "The token symbol"
                      },
                      "token_logo": {
                        "type": "string",
                        "description": "The token logo"
                      },
                      "token_decimals": {
                        "type": "string",
                        "description": "The token decimals"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "The token address"
                      }
                    }
                  }
                ]
              },
              {
                "name": "average_sale",
                "type": "object",
                "description": "The average sale of the NFT collection",
                "fields": [
                  {
                    "name": "price",
                    "type": "string",
                    "description": "The price of the average sale"
                  },
                  {
                    "name": "price_formatted",
                    "type": "string",
                    "description": "The formatted price of the average sale"
                  },
                  {
                    "name": "current_usd_value",
                    "type": "string",
                    "description": "The USD price of the last sale at the current value"
                  }
                ]
              },
              {
                "name": "total_trades",
                "type": "number",
                "description": "The total trades in the timeframe"
              },
              {
                "name": "message",
                "type": "string",
                "description": "The error message (if any)"
              }
            ]
          }
        }
      ]
    },
    "getTokenPrice": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token price",
      "description": "Retrieve the current or historical price of an ERC20 token in the blockchain’s native currency and USD. Each token returned includes on-chain metadata, as well as off-chain metadata, logos, spam status and more. Additional options to exclude low-liquidity tokens and inactive tokens.",
      "method": "GET",
      "path": "/erc20/:address/price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the token contract",
          "required": true,
          "example": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "exchange",
          "description": "The factory name or address of the token exchange",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_block",
          "description": "The block number from which the token price should be checked",
          "required": false,
          "type": "number"
        },
        {
          "name": "include",
          "description": "This parameter is now deprecated as percentage change are included by default",
          "required": false,
          "example": "",
          "type": "string"
        },
        {
          "name": "max_token_inactivity",
          "description": "Exclude tokens inactive for more than the given amount of days",
          "required": false,
          "type": "number"
        },
        {
          "name": "min_pair_side_liquidity_usd",
          "description": "Exclude tokens with liquidity less than the specified amount in USD. This parameter refers to the liquidity on a single side of the pair.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the price denominated in the blockchain's native token and USD for a given token contract address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "tokenName",
                "type": "string",
                "description": "The name of the token",
                "example": "Kylin Network"
              },
              {
                "name": "tokenSymbol",
                "type": "string",
                "description": "The symbol of the token",
                "example": "KYL"
              },
              {
                "name": "tokenLogo",
                "type": "string",
                "description": "The logo of the token",
                "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
              },
              {
                "name": "tokenDecimals",
                "type": "string",
                "description": "The number of decimals of the token",
                "example": "18"
              },
              {
                "name": "nativePrice",
                "required": [
                  "value",
                  "decimals",
                  "name",
                  "symbol",
                  "address"
                ],
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The native price of the token",
                    "example": "8409770570506626"
                  },
                  "decimals": {
                    "type": "integer",
                    "description": "The number of decimals on the token",
                    "example": 18
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the token",
                    "example": "Ether"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the token",
                    "example": "ETH"
                  },
                  "address": {
                    "type": "string",
                    "description": "The address of the native token"
                  }
                }
              },
              {
                "name": "usdPrice",
                "type": "number",
                "description": "The price in USD for the token",
                "example": 19.722370676
              },
              {
                "name": "usdPriceFormatted",
                "type": "string",
                "description": "The price in USD for the token in string format",
                "example": "19.722370676"
              },
              {
                "name": "24hrPercentChange",
                "type": "string",
                "description": "The 24hr percent change of the token",
                "example": "-0.8842730258590583"
              },
              {
                "name": "exchangeAddress",
                "type": "string",
                "description": "The address of the exchange used to calculate the price",
                "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
              },
              {
                "name": "exchangeName",
                "type": "string",
                "description": "The name of the exchange used to calculate the price",
                "example": "Uniswap v3"
              },
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The address of the token",
                "example": "0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c"
              },
              {
                "name": "toBlock",
                "type": "string",
                "description": "toBlock",
                "example": "16314545"
              },
              {
                "name": "possibleSpam",
                "type": "boolean",
                "description": "Indicates if a contract is possibly a spam contract",
                "example": "false"
              },
              {
                "name": "verifiedContract",
                "type": "boolean",
                "description": "Indicates if the contract is verified",
                "example": true
              },
              {
                "name": "pairAddress",
                "type": "string",
                "description": "The address of the pair",
                "example": "0x1f98431c8ad98523631ae4a59f267346ea31f984"
              },
              {
                "name": "pairTotalLiquidityUsd",
                "type": "string",
                "description": "The total liquidity in USD of the pair",
                "example": "123.45"
              },
              {
                "name": "usdPrice24h",
                "type": "number",
                "description": "The USD price 24 hours ago",
                "example": 1
              },
              {
                "name": "usdPrice24hrUsdChange",
                "type": "number",
                "description": "The USD change in price over the last 24 hours",
                "example": -0.00008615972490000345
              },
              {
                "name": "usdPrice24hrPercentChange",
                "type": "number",
                "description": "The percent change in USD price over the last 24 hours",
                "example": -0.008615972490000345
              },
              {
                "name": "securityScore",
                "type": "number",
                "description": "A number between 0 and 100 that defines the trust level of this specific token",
                "example": 1
              }
            ]
          }
        }
      ]
    },
    "getSwapsByTokenAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get swap transactions by token address",
      "description": "Get all swap transactions (buy/sell) for a specific ERC20 token.",
      "method": "GET",
      "path": "/erc20/:address/swaps",
      "pathParams": [
        {
          "name": "address",
          "description": "The token address to get transaction for",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "fromBlock",
          "description": "The minimum block number from which to get the token transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "toBlock",
          "description": "The block number to get the token transactions from",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The start date from which to get the token transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The end date from which to get the token transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "transactionTypes",
          "description": "Array of transaction types. Allowed values are 'buy', 'sell'.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns swap transactions by wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transactionHash",
                    "type": "string",
                    "example": "0x2bfcba4715774420936669cd0ff2241d70e9abecab76c9db813602015b3134ad"
                  },
                  {
                    "name": "transactionIndex",
                    "type": "number",
                    "example": 1
                  },
                  {
                    "name": "transactionType",
                    "type": "string",
                    "example": "buy"
                  },
                  {
                    "name": "blockTimestamp",
                    "type": "string",
                    "example": "2022-02-22T00:00:00Z"
                  },
                  {
                    "name": "blockNumber",
                    "type": "number",
                    "example": 21093423
                  },
                  {
                    "name": "subCategory",
                    "type": "string",
                    "example": "accumulation"
                  },
                  {
                    "name": "walletAddress",
                    "type": "string",
                    "example": "0x2bfcba4715774420936669cd0ff2241d70e9abec"
                  },
                  {
                    "name": "walletAddressLabel",
                    "type": "string",
                    "example": "Murad Wallet"
                  },
                  {
                    "name": "entity",
                    "type": "string",
                    "example": "Murad"
                  },
                  {
                    "name": "entityLogo",
                    "type": "string",
                    "example": "https://entities-logos.s3.us-east-1.amazonaws.com/murad.png"
                  },
                  {
                    "name": "pairAddress",
                    "type": "string",
                    "example": "0x36a46dff597c5a444bbc521d26787f57867d2214"
                  },
                  {
                    "name": "pairLabel",
                    "type": "string",
                    "example": "BRETT/WETH"
                  },
                  {
                    "name": "exchangeAddress",
                    "type": "string",
                    "example": "0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f"
                  },
                  {
                    "name": "exchangeName",
                    "type": "string",
                    "example": "Uniswap v2"
                  },
                  {
                    "name": "exchangeLogo",
                    "type": "string",
                    "example": "https://entities-logos.s3.us-east-1.amazonaws.com/uniswap.png"
                  },
                  {
                    "name": "bought",
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "The address of the token",
                        "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token",
                        "example": "BRETT"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the token",
                        "example": "BRETT"
                      },
                      "logo": {
                        "type": "string",
                        "description": "The URL of the token's logo",
                        "example": "https://cdn.moralis.io/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                      },
                      "amount": {
                        "type": "string",
                        "description": "The amount of the token",
                        "example": "14811.98"
                      },
                      "usdPrice": {
                        "type": "number",
                        "description": "The amount of the token",
                        "example": 0.078634
                      },
                      "usdAmount": {
                        "type": "number",
                        "description": "The amount of the token",
                        "example": 1155.33
                      }
                    },
                    "required": [
                      "address",
                      "name",
                      "symbol",
                      "logo",
                      "amount",
                      "usdPrice",
                      "usdAmount"
                    ]
                  },
                  {
                    "name": "sold",
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "The address of the token",
                        "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token",
                        "example": "BRETT"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the token",
                        "example": "BRETT"
                      },
                      "logo": {
                        "type": "string",
                        "description": "The URL of the token's logo",
                        "example": "https://cdn.moralis.io/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                      },
                      "amount": {
                        "type": "string",
                        "description": "The amount of the token",
                        "example": "14811.98"
                      },
                      "usdPrice": {
                        "type": "number",
                        "description": "The amount of the token",
                        "example": 0.078634
                      },
                      "usdAmount": {
                        "type": "number",
                        "description": "The amount of the token",
                        "example": 1155.33
                      }
                    },
                    "required": [
                      "address",
                      "name",
                      "symbol",
                      "logo",
                      "amount",
                      "usdPrice",
                      "usdAmount"
                    ]
                  },
                  {
                    "name": "baseQuotePrice",
                    "type": "string",
                    "example": "0.00003376480687"
                  },
                  {
                    "name": "totalValueUsd",
                    "type": "number",
                    "example": 1165
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenHolders": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get a holders summary by token address",
      "description": "Returns total holders for a given token, as well as aggregated stats holder supply, holder trends, holder distribution and holder acquisition metrics.",
      "method": "GET",
      "path": "/erc20/:tokenAddress/holders",
      "pathParams": [
        {
          "name": "tokenAddress",
          "description": "The token address to get transaction for",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns token holder summary result",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "totalHolders",
                "type": "number",
                "description": "The total holders of the token",
                "example": "99999"
              },
              {
                "name": "holderSupply",
                "type": "object",
                "description": "The holder supply",
                "required": [
                  "top10",
                  "top25",
                  "top50",
                  "top100",
                  "top250",
                  "top500"
                ],
                "properties": {
                  "top10": {
                    "type": "object",
                    "description": "The holder breakdown of the top 10 holders",
                    "$ref": "#/components/schemas/TokenHolderSupplyChange"
                  },
                  "top25": {
                    "type": "object",
                    "description": "The holder breakdown of the top 25 holders",
                    "$ref": "#/components/schemas/TokenHolderSupplyChange"
                  },
                  "top50": {
                    "type": "object",
                    "description": "The holder breakdown of the top 10 holders",
                    "$ref": "#/components/schemas/TokenHolderSupplyChange"
                  },
                  "top100": {
                    "type": "object",
                    "description": "The holder breakdown of the top 10 holders",
                    "$ref": "#/components/schemas/TokenHolderSupplyChange"
                  },
                  "top250": {
                    "type": "object",
                    "description": "The holder breakdown of the top 250 holders",
                    "$ref": "#/components/schemas/TokenHolderSupplyChange"
                  },
                  "top500": {
                    "type": "object",
                    "description": "The holder breakdown of the top 500 holders",
                    "$ref": "#/components/schemas/TokenHolderSupplyChange"
                  }
                }
              },
              {
                "name": "holderChange",
                "type": "object",
                "description": "The holder change",
                "required": [
                  "5min",
                  "1h",
                  "6h",
                  "24h",
                  "7d",
                  "3d",
                  "30d"
                ],
                "properties": {
                  "5min": {
                    "type": "object",
                    "description": "The holder change in the last 5 minutes",
                    "$ref": "#/components/schemas/TokenHolderChange"
                  },
                  "1h": {
                    "type": "object",
                    "description": "Net holder change in the last 1 hour",
                    "$ref": "#/components/schemas/TokenHolderChange"
                  },
                  "6h": {
                    "type": "object",
                    "description": "Net holder change in the last 6 hour",
                    "$ref": "#/components/schemas/TokenHolderChange"
                  },
                  "24h": {
                    "type": "object",
                    "description": "Net holder change in the last 24 hour",
                    "$ref": "#/components/schemas/TokenHolderChange"
                  },
                  "3d": {
                    "type": "object",
                    "description": "Net holder change in the last 3 days",
                    "$ref": "#/components/schemas/TokenHolderChange"
                  },
                  "7d": {
                    "type": "object",
                    "description": "Net holder change in the last 7 days",
                    "$ref": "#/components/schemas/TokenHolderChange"
                  },
                  "30d": {
                    "type": "object",
                    "description": "Net holder change in the last 30 days",
                    "$ref": "#/components/schemas/TokenHolderChange"
                  }
                }
              },
              {
                "name": "holdersByAcquisition",
                "type": "object",
                "description": "The holder change",
                "required": [
                  "swap",
                  "transfer",
                  "airdrop"
                ],
                "properties": {
                  "swap": {
                    "type": "number",
                    "description": "Number of wallets with first interaction as a swap",
                    "example": "10"
                  },
                  "transfer": {
                    "type": "number",
                    "description": "Number of wallets with first interaction as a transfer",
                    "example": "10"
                  },
                  "airdrop": {
                    "type": "number",
                    "description": "Number of wallets with first interaction as a airdrop",
                    "example": "10"
                  }
                }
              },
              {
                "name": "holderDistribution",
                "type": "object",
                "description": "The holder distribution",
                "required": [
                  "whales",
                  "sharks",
                  "dolphins",
                  "fish",
                  "octopus",
                  "crabs",
                  "shrimps"
                ],
                "properties": {
                  "whales": {
                    "type": "integer",
                    "description": "Number of wallets in the category",
                    "example": "100"
                  },
                  "sharks": {
                    "type": "integer",
                    "description": "Number of wallets in the category",
                    "example": "100"
                  },
                  "dolphins": {
                    "type": "integer",
                    "description": "Number of wallets in the category",
                    "example": "100"
                  },
                  "fish": {
                    "type": "integer",
                    "description": "Number of wallets in the category",
                    "example": "100"
                  },
                  "octopus": {
                    "type": "integer",
                    "description": "Number of wallets in the category",
                    "example": "100"
                  },
                  "crabs": {
                    "type": "integer",
                    "description": "Number of wallets in the category",
                    "example": "100"
                  },
                  "shrimps": {
                    "type": "integer",
                    "description": "Number of wallets in the category",
                    "example": "100"
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "getHistoricalTokenHolders": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get timeseries holders data",
      "description": "Track changes in the holder base of an ERC20 token over time. Supports timeseries data for total holders as well as change metrics such as holder distribution and holder acquisition.",
      "method": "GET",
      "path": "/erc20/:tokenAddress/holders/historical",
      "pathParams": [
        {
          "name": "tokenAddress",
          "description": "The token address",
          "required": true,
          "example": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)\n",
          "required": true,
          "example": "2025-01-01T10:00:00",
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)\n",
          "required": true,
          "example": "2025-02-01T11:00:00",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The number of results to return",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page)",
          "required": false,
          "type": "string"
        },
        {
          "name": "timeFrame",
          "description": "The time frame to group the data by",
          "required": true,
          "example": "1d",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns token",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "1"
              },
              {
                "name": "pageSize",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "timestamp",
                    "type": "string",
                    "description": "Timestamp of the holder change ISO 8601 format",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "totalHolders",
                    "type": "number",
                    "description": "The total holders of the token",
                    "example": "100"
                  },
                  {
                    "name": "netHolderChange",
                    "type": "number",
                    "description": "The net holder change"
                  },
                  {
                    "name": "holderPercentChange",
                    "type": "number",
                    "description": "The holder percentage change"
                  },
                  {
                    "name": "newHoldersByAcquisition",
                    "type": "object",
                    "description": "The new holders by acquisition",
                    "required": [
                      "swap",
                      "transfer",
                      "airdrop"
                    ],
                    "properties": {
                      "swap": {
                        "type": "number",
                        "description": "Number of wallets with first interaction as a swap",
                        "example": "10"
                      },
                      "transfer": {
                        "type": "number",
                        "description": "Number of wallets with first interaction as a transfer",
                        "example": "10"
                      },
                      "airdrop": {
                        "type": "number",
                        "description": "Number of wallets with first interaction as a airdrop",
                        "example": "10"
                      }
                    }
                  },
                  {
                    "name": "holdersIn",
                    "type": "object",
                    "description": "The holders in by category",
                    "required": [
                      "whales",
                      "sharks",
                      "dolphins",
                      "fish",
                      "octopus",
                      "crabs",
                      "shrimps"
                    ],
                    "properties": {
                      "whales": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "sharks": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "dolphins": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "fish": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "octopus": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "crabs": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "shrimps": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      }
                    }
                  },
                  {
                    "name": "holdersOut",
                    "type": "object",
                    "description": "The holders in by category",
                    "required": [
                      "whales",
                      "sharks",
                      "dolphins",
                      "fish",
                      "octopus",
                      "crabs",
                      "shrimps"
                    ],
                    "properties": {
                      "whales": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "sharks": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "dolphins": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "fish": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "octopus": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "crabs": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      },
                      "shrimps": {
                        "type": "integer",
                        "description": "Number of wallets in the category",
                        "example": "100"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getMultipleTokenPrices": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Multiple ERC20 token prices",
      "description": "Retrieve the current or historical prices for multiple ERC20 tokens in the blockchain’s native currency and USD. Accepts an array of up to 100 `tokens`, each requiring `token_address` and optional fields such as `to_block` or `exchange`. Each token returned includes on-chain metadata, as well as off-chain metadata, logos, spam status and more. Additional options to exclude low-liquidity tokens and inactive tokens.",
      "method": "POST",
      "path": "/erc20/prices",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include",
          "description": "This parameter is now deprecated as percentage change are included by default",
          "required": false,
          "example": "",
          "type": "string"
        },
        {
          "name": "max_token_inactivity",
          "description": "Exclude tokens inactive for more than the given amount of days",
          "required": false,
          "type": "number"
        },
        {
          "name": "min_pair_side_liquidity_usd",
          "description": "Exclude tokens with liquidity less than the specified amount in USD. This parameter refers to the liquidity on a single side of the pair.",
          "required": false,
          "type": "number"
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "tokens",
            "type": "object",
            "description": "The tokens to be fetched",
            "example": [
              {
                "token_address": "0xdac17f958d2ee523a2206206994597c13d831ec7"
              },
              {
                "token_address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
              },
              {
                "token_address": "0xae7ab96520de3a18e5e111b5eaab095312d7fe84",
                "exchange": "uniswapv2",
                "to_block": "16314545"
              },
              {
                "token_address": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0"
              }
            ],
            "fields": [
              {
                "name": "token_address",
                "type": "string",
                "description": "The contract address",
                "example": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
              },
              {
                "name": "exchange",
                "type": "string",
                "description": "The exchange",
                "example": "uniswapv3"
              },
              {
                "name": "to_block",
                "type": "string",
                "description": "The block number",
                "example": 12526958
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns an array of token prices denominated in the blockchain's native token and USD for a given token contract address"
        }
      ]
    },
    "getTokenOwners": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token owners by contract",
      "description": "Identify the major holders of an ERC20 token and understand their ownership percentages. Includes known entities, exchanges and wallet labels.",
      "method": "GET",
      "path": "/erc20/:token_address/owners",
      "pathParams": [
        {
          "name": "token_address",
          "description": "The address of the token contract",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of owners of an ERC20 token",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "total_supply",
                "type": "string",
                "description": "The total supply of the token"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "owner_address",
                    "type": "string",
                    "description": "The address of the erc20 token owner",
                    "example": "0x244..."
                  },
                  {
                    "name": "owner_address_label",
                    "type": "string",
                    "description": "The label of the owner_address",
                    "example": "Coinbase 1"
                  },
                  {
                    "name": "balance",
                    "type": "string",
                    "description": "The amount holding of the ERC20 token",
                    "example": "57888888888888888888880"
                  },
                  {
                    "name": "balance_formatted",
                    "type": "string",
                    "description": "The amount holding of the ERC20 token in decimaal",
                    "example": "5.78"
                  },
                  {
                    "name": "usd_value",
                    "type": "string",
                    "description": "The USD value of the balance",
                    "example": "57888888888888888888880"
                  },
                  {
                    "name": "is_contract",
                    "type": "boolean",
                    "description": "Indicates if the token address is for a contract or not"
                  },
                  {
                    "name": "percentage_relative_to_total_supply",
                    "type": "number",
                    "description": "The percentage of total supply held by the owner",
                    "example": 10
                  },
                  {
                    "name": "entity",
                    "type": "string",
                    "description": "The owner address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "entity_logo",
                    "type": "string",
                    "description": "The logo of the owner address entity",
                    "example": "https://opensea.io/favicon.ico"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletTokenBalances": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token balances by wallet",
      "description": "Get an unpaginated list of token balances, without token prices, for a specific wallet address. Maximum of 2,000 tokens. Each token returned includes on-chain metadata, as well as off-chain metadata, logos, spam status and more.",
      "method": "GET",
      "path": "/:address/erc20",
      "pathParams": [
        {
          "name": "address",
          "description": "The address from which token balances will be checked",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number up to which the balances will be checked.",
          "required": false,
          "type": "number"
        },
        {
          "name": "token_addresses",
          "description": "The addresses to get balances for (optional)",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "exclude_spam",
          "description": "Exclude spam tokens from the result",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns token balances for a specific address"
        }
      ]
    },
    "getWalletTokenTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token transfers by wallet address",
      "description": "Get all ERC20 token transfers for a given wallet address, sorted by block number (newest first).",
      "method": "GET",
      "path": "/:address/erc20/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the transactions up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "contract_addresses",
          "description": "List of contract addresses of transfers",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of token transactions.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_name",
                    "type": "string",
                    "example": "Tether USD"
                  },
                  {
                    "name": "token_symbol",
                    "type": "string",
                    "example": "USDT"
                  },
                  {
                    "name": "token_logo",
                    "type": "string",
                    "example": "cdn.moralis.io/325/large/Tether-logo.png?1598003707"
                  },
                  {
                    "name": "token_decimals",
                    "type": "string",
                    "example": "6"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the token",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-04-02T10:07:54.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The recipient",
                    "example": "0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The sender",
                    "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was transfered (in wei)",
                    "example": 650000000000000000
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index of the transfer within the block",
                    "example": 12
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index of the transfer within the block",
                    "example": 2
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_contract",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenMetadata": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token metadata by contract",
      "description": "Retrieve metadata (name, symbol, decimals, logo) for an ERC20 token contract, as well as off-chain metadata, total supply, categories, logos, spam status and more.",
      "method": "GET",
      "path": "/erc20/metadata",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "addresses",
          "description": "The addresses to get metadata for",
          "required": true,
          "type": "array",
          "field": {
            "type": "string"
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Get the metadata for a given ERC20 token contract address (name, symbol, decimals, logo)."
        }
      ]
    },
    "getTokenCategories": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token categories",
      "description": "",
      "method": "GET",
      "path": "/tokens/categories",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns a list of ERC20 token categories, such as stablecoin, meme, governance, and more. Use this endpoint to explore available token categories for filtering or analytics."
        }
      ]
    },
    "getTokenMetadataBySymbol": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token metadata by symbols",
      "description": "Fetch metadata (name, symbol, decimals, logo) for a list of ERC20 token symbols.",
      "method": "GET",
      "path": "/erc20/metadata/symbols",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "symbols",
          "description": "The symbols to get metadata for",
          "required": true,
          "type": "array",
          "field": {
            "type": "string",
            "example": "LINK"
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns metadata for a given token contract address (name, symbol, decimals, logo)."
        }
      ]
    },
    "getTokenTransfers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token transfers by contract address",
      "description": "Get all ERC20 token transfers for a contract, ordered by block number (newest first).",
      "method": "GET",
      "path": "/erc20/:address/transfers",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the token contract",
          "required": true,
          "example": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transfers.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get transfers up until this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of token contract transactions.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_name",
                    "type": "string",
                    "example": "Tether USD"
                  },
                  {
                    "name": "token_symbol",
                    "type": "string",
                    "example": "USDT"
                  },
                  {
                    "name": "token_logo",
                    "type": "string",
                    "example": "cdn.moralis.io/325/large/Tether-logo.png?1598003707"
                  },
                  {
                    "name": "token_decimals",
                    "type": "string",
                    "example": "6"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the token",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-04-02T10:07:54.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The recipient",
                    "example": "0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The sender",
                    "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was transfered (in wei)",
                    "example": 650000000000000000
                  },
                  {
                    "name": "transaction_index",
                    "type": "number",
                    "description": "The transaction index of the transfer within the block",
                    "example": 12
                  },
                  {
                    "name": "log_index",
                    "type": "number",
                    "description": "The log index of the transfer within the block",
                    "example": 2
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract",
                    "example": "false"
                  },
                  {
                    "name": "verified_contract",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified",
                    "example": "false"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNativeBalance": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get native balance by wallet",
      "description": "Check the native token balance (e.g. ETH) for a specific wallet.",
      "method": "GET",
      "path": "/:address/balance",
      "pathParams": [
        {
          "name": "address",
          "description": "The address from which the native balance will be checked",
          "required": true,
          "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number up to which the balances will be checked.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the native balance for a specific address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "balance",
                "type": "string",
                "description": "The balance",
                "example": "1234567890"
              }
            ]
          }
        }
      ]
    },
    "getNativeBalancesForAddresses": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get native balance for a set of wallets",
      "description": "Retrieve native token balances (e.g. ETH) for one or many wallet addresses in single request.",
      "method": "GET",
      "path": "/wallets/balances",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number on which the balances should be checked",
          "required": false,
          "type": "number"
        },
        {
          "name": "wallet_addresses",
          "description": "The addresses to get metadata for",
          "required": true,
          "type": "array",
          "field": {
            "type": "string",
            "example": "0xE92d1A43df510F82C66382592a047d288f85226f"
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of balances",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getWalletApprovals": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 approvals by wallet",
      "description": "List active ERC20 token approvals for a wallet, showing which contracts have access.",
      "method": "GET",
      "path": "/wallets/:address/approvals",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address from which to retrieve active ERC20 token approvals",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns active ERC20 token approvals for the specified wallet address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-04-02T10:07:54.000Z"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The transaction hash",
                    "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The native price of the token",
                    "example": "8409770570506626"
                  },
                  {
                    "name": "value_formatted",
                    "type": "string",
                    "description": "The value that was sent in the transaction (ETH/BNB/etc..) in decimal format",
                    "example": "0.1"
                  },
                  {
                    "name": "token",
                    "type": "object",
                    "fields": [
                      {
                        "name": "address",
                        "type": "string",
                        "description": "The address of the token",
                        "example": "0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c"
                      },
                      {
                        "name": "address_label",
                        "type": "string",
                        "nullable": true,
                        "description": "The label of the token"
                      },
                      {
                        "name": "name",
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the token",
                        "example": "Tether USD"
                      },
                      {
                        "name": "symbol",
                        "type": "string",
                        "nullable": true,
                        "description": "The symbol of the token",
                        "example": "USDT"
                      },
                      {
                        "name": "logo",
                        "type": "string",
                        "nullable": true,
                        "description": "The logo of the token",
                        "example": "https://opensea.io/favicon.ico"
                      },
                      {
                        "name": "possible_spam",
                        "type": "boolean",
                        "description": "Indicates if the token is a possible spam",
                        "example": false
                      },
                      {
                        "name": "verified_contract",
                        "type": "boolean",
                        "description": "Indicates if the token is verified",
                        "example": false
                      },
                      {
                        "name": "current_balance",
                        "type": "string",
                        "nullable": true,
                        "description": "The current balance of the token",
                        "example": "1000000000000000"
                      },
                      {
                        "name": "current_balance_formatted",
                        "type": "string",
                        "nullable": true,
                        "description": "The current balance of the token in decimal format",
                        "example": "0.1"
                      },
                      {
                        "name": "usd_price",
                        "type": "string",
                        "nullable": true,
                        "description": "The current price of the token in USD",
                        "example": "1000000000000000"
                      },
                      {
                        "name": "usd_at_risk",
                        "type": "string",
                        "nullable": true,
                        "description": "The amount of USD approve potentially at risk",
                        "example": "1000000000000000"
                      }
                    ]
                  },
                  {
                    "name": "spender",
                    "type": "object",
                    "fields": [
                      {
                        "name": "address",
                        "type": "string",
                        "description": "The address of the spender",
                        "example": "0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c"
                      },
                      {
                        "name": "address_label",
                        "type": "string",
                        "nullable": true,
                        "description": "The label of the spender",
                        "example": "Binance 1"
                      },
                      {
                        "name": "entity",
                        "type": "string",
                        "nullable": true,
                        "description": "The entity of the spender",
                        "example": "Opensea"
                      },
                      {
                        "name": "entity_logo",
                        "type": "string",
                        "nullable": true,
                        "description": "The logo of the spender",
                        "example": "https://opensea.io/favicon.ico"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletHistory": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the complete decoded transaction history of a wallet",
      "description": "Get the complete decoded transaction history for a given wallet. All transactions are parsed, decoded, categorized and summarized into human-readable records.",
      "method": "GET",
      "path": "/wallets/:address/history",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the transactions up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "include_internal_transactions",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "nft_metadata",
          "description": "If the result should contain the nft metadata.",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns wallet history of a wallet address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
                  },
                  {
                    "name": "nonce",
                    "type": "string",
                    "description": "The nonce",
                    "example": "1848059"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "example": "108"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The from address",
                    "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The to address",
                    "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value sent",
                    "example": "115580000000000000"
                  },
                  {
                    "name": "gas",
                    "type": "string",
                    "example": "30000"
                  },
                  {
                    "name": "gas_price",
                    "type": "string",
                    "description": "The gas price",
                    "example": "52500000000"
                  },
                  {
                    "name": "input",
                    "type": "string",
                    "example": "0x"
                  },
                  {
                    "name": "receipt_cumulative_gas_used",
                    "type": "string",
                    "example": "4923073"
                  },
                  {
                    "name": "receipt_gas_used",
                    "type": "string",
                    "example": "21000"
                  },
                  {
                    "name": "receipt_contract_address",
                    "type": "string",
                    "example": "0x9869524fd160fe3adda6218883b6526c0977d3a5"
                  },
                  {
                    "name": "receipt_status",
                    "type": "string",
                    "example": "1"
                  },
                  {
                    "name": "transaction_fee",
                    "type": "string",
                    "example": "0.00000000000000063"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": "12386788"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The hash of the block",
                    "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                  },
                  {
                    "name": "internal_transactions",
                    "type": "object",
                    "description": "The internal transactions of the transaction",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": 12526958
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The block hash",
                        "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                      },
                      {
                        "name": "type",
                        "type": "string",
                        "description": "Call type",
                        "example": "CALL"
                      },
                      {
                        "name": "from",
                        "type": "string",
                        "description": "The sender",
                        "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                      },
                      {
                        "name": "to",
                        "type": "string",
                        "description": "The recipient",
                        "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                      },
                      {
                        "name": "value",
                        "type": "string",
                        "description": "The value that was transfered (in wei)",
                        "example": "650000000000000000"
                      },
                      {
                        "name": "gas",
                        "type": "string",
                        "description": "The gas of the transaction",
                        "example": "6721975"
                      },
                      {
                        "name": "gas_used",
                        "type": "string",
                        "description": "The used gas",
                        "example": "6721975"
                      },
                      {
                        "name": "input",
                        "type": "string",
                        "description": "The input",
                        "example": "0x"
                      },
                      {
                        "name": "output",
                        "type": "string",
                        "description": "The output",
                        "example": "0x"
                      }
                    ]
                  },
                  {
                    "name": "category",
                    "type": "string",
                    "description": "Defines the category of the transaction.",
                    "enum": [
                      "send",
                      "receive",
                      "token send",
                      "token receive",
                      "nft send",
                      "nft receive",
                      "token swap",
                      "deposit",
                      "withdraw",
                      "nft purchase",
                      "nft sale",
                      "airdrop",
                      "mint",
                      "burn",
                      "borrow",
                      "contract interaction"
                    ]
                  },
                  {
                    "name": "contract_interactions",
                    "type": "array",
                    "description": "The contract interactions that happend in the transaction",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ApprovalResponse"
                      },
                      {
                        "$ref": "#/components/schemas/RevokeResponse"
                      },
                      {
                        "$ref": "#/components/schemas/SetApprovalAllResponse"
                      },
                      {
                        "$ref": "#/components/schemas/SetRevokeAllResponse"
                      }
                    ]
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Is transaction possible spam",
                    "example": "false"
                  },
                  {
                    "name": "method_label",
                    "type": "string",
                    "description": "The label of the method called if any called",
                    "example": "transfer"
                  },
                  {
                    "name": "summary",
                    "type": "string",
                    "description": "Summary of what happened on the transaction",
                    "example": "transfer"
                  },
                  {
                    "name": "nft_transfers",
                    "type": "object",
                    "fields": [
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The address of the NFT contract",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "token_id",
                        "type": "string",
                        "description": "The token ID of the NFT",
                        "example": "15"
                      },
                      {
                        "name": "from_address_entity",
                        "type": "string",
                        "description": "The from address entity",
                        "example": "Opensea"
                      },
                      {
                        "name": "from_address_entity_logo",
                        "type": "string",
                        "description": "The logo of the from address entity",
                        "example": "https://opensea.io/favicon.ico"
                      },
                      {
                        "name": "from_address",
                        "type": "string",
                        "description": "The address that sent the NFT",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "from_address_label",
                        "type": "string",
                        "description": "The label of the from address",
                        "example": "Binance 1"
                      },
                      {
                        "name": "to_address_entity",
                        "type": "string",
                        "description": "The to address entity",
                        "example": "Beaver Build"
                      },
                      {
                        "name": "to_address_entity_logo",
                        "type": "string",
                        "description": "The logo of the to address entity",
                        "example": "https://beaverbuild.com/favicon.ico"
                      },
                      {
                        "name": "to_address",
                        "type": "string",
                        "description": "The address that received the NFT",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "to_address_label",
                        "type": "string",
                        "description": "The label of the to address",
                        "example": "Binance 2"
                      },
                      {
                        "name": "value",
                        "type": "string",
                        "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                        "example": "1000000000000000"
                      },
                      {
                        "name": "amount",
                        "type": "string",
                        "description": "The number of tokens transferred",
                        "example": "1"
                      },
                      {
                        "name": "contract_type",
                        "type": "string",
                        "description": "The type of NFT contract standard",
                        "example": "ERC721"
                      },
                      {
                        "name": "transaction_type",
                        "type": "string",
                        "description": "The transaction type"
                      },
                      {
                        "name": "log_index",
                        "type": "number",
                        "description": "The log index"
                      },
                      {
                        "name": "operator",
                        "type": "string",
                        "description": "The operator present only for ERC1155 transfers",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "possible_spam",
                        "type": "boolean",
                        "description": "Indicates if a contract is possibly a spam contract",
                        "example": "false"
                      },
                      {
                        "name": "verified_collection",
                        "type": "boolean",
                        "description": "Indicates if a contract is verified",
                        "example": "false"
                      },
                      {
                        "name": "direction",
                        "type": "string",
                        "description": "The direction of the transfer",
                        "example": "outgoing"
                      },
                      {
                        "name": "collection_logo",
                        "type": "string",
                        "description": "The logo of the collection",
                        "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                      },
                      {
                        "name": "collection_banner_image",
                        "type": "string",
                        "description": "The banner image of the collection",
                        "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                      },
                      {
                        "name": "normalized_metadata",
                        "description": "A normalized metadata version of the NFT's metadata.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name or title of the NFT",
                            "example": "Moralis Mug"
                          },
                          "description": {
                            "type": "string",
                            "description": "A detailed description of the NFT",
                            "example": "Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."
                          },
                          "image": {
                            "type": "string",
                            "description": "The URL of the NFT's image",
                            "example": "https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"
                          },
                          "external_link": {
                            "type": "string",
                            "description": "A link to additional information",
                            "example": "https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"
                          },
                          "animation_url": {
                            "type": "string",
                            "description": "An animated version of the NFT's image",
                            "example": "https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"
                          },
                          "attributes": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/normalizedMetadataAttribute"
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "name": "erc20_transfers",
                    "type": "object",
                    "fields": [
                      {
                        "name": "token_name",
                        "type": "string",
                        "example": "Tether USD"
                      },
                      {
                        "name": "token_symbol",
                        "type": "string",
                        "example": "USDT"
                      },
                      {
                        "name": "token_logo",
                        "type": "string",
                        "example": "https://cdn.moralis.io/images/325/large/Tether-logo.png?1598003707"
                      },
                      {
                        "name": "token_decimals",
                        "type": "string",
                        "example": "6"
                      },
                      {
                        "name": "address",
                        "type": "string",
                        "description": "The address of the token",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The block timestamp",
                        "example": "2021-04-02T10:07:54.000Z"
                      },
                      {
                        "name": "to_address_entity",
                        "type": "string",
                        "description": "The to address entity",
                        "example": "Beaver Build"
                      },
                      {
                        "name": "to_address_entity_logo",
                        "type": "string",
                        "description": "The logo of the to address entity",
                        "example": "https://beaverbuild.com/favicon.ico"
                      },
                      {
                        "name": "to_address",
                        "type": "string",
                        "description": "The recipient",
                        "example": "0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044"
                      },
                      {
                        "name": "to_address_label",
                        "type": "string",
                        "description": "The label of the to address",
                        "example": "Binance 2"
                      },
                      {
                        "name": "from_address_entity",
                        "type": "string",
                        "description": "The from address entity",
                        "example": "Opensea"
                      },
                      {
                        "name": "from_address_entity_logo",
                        "type": "string",
                        "description": "The logo of the from address entity",
                        "example": "https://opensea.io/favicon.ico"
                      },
                      {
                        "name": "from_address",
                        "type": "string",
                        "description": "The sender",
                        "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                      },
                      {
                        "name": "from_address_label",
                        "type": "string",
                        "description": "The label of the from address",
                        "example": "Binance 1"
                      },
                      {
                        "name": "value",
                        "type": "string",
                        "description": "The value that was transfered (in wei)",
                        "example": 650000000000000000
                      },
                      {
                        "name": "value_formatted",
                        "type": "string",
                        "description": "The value that was transfered decimal format",
                        "example": "1.033"
                      },
                      {
                        "name": "log_index",
                        "type": "number",
                        "description": "The log index of the transfer within the block",
                        "example": 2
                      },
                      {
                        "name": "possible_spam",
                        "type": "boolean",
                        "description": "Indicates if a contract is possibly a spam contract",
                        "example": "false"
                      },
                      {
                        "name": "verified_contract",
                        "type": "boolean",
                        "description": "Indicates if a contract is verified",
                        "example": "false"
                      }
                    ]
                  },
                  {
                    "name": "native_transfers",
                    "type": "object",
                    "fields": [
                      {
                        "name": "from_address_entity",
                        "type": "string",
                        "description": "The from address entity",
                        "example": "Opensea"
                      },
                      {
                        "name": "from_address_entity_logo",
                        "type": "string",
                        "description": "The logo of the from address entity",
                        "example": "https://opensea.io/favicon.ico"
                      },
                      {
                        "name": "from_address",
                        "type": "string",
                        "description": "The address that sent the NFT",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "from_address_label",
                        "type": "string",
                        "description": "The label of the from address",
                        "example": "Binance 1"
                      },
                      {
                        "name": "to_address_entity",
                        "type": "string",
                        "description": "The to address entity",
                        "example": "Beaver Build"
                      },
                      {
                        "name": "to_address_entity_logo",
                        "type": "string",
                        "description": "The logo of the to address entity",
                        "example": "https://beaverbuild.com/favicon.ico"
                      },
                      {
                        "name": "to_address",
                        "type": "string",
                        "description": "The address that received the NFT",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "to_address_label",
                        "type": "string",
                        "description": "The label of the to address",
                        "example": "Binance 2"
                      },
                      {
                        "name": "value",
                        "type": "string",
                        "description": "The value that was sent in the transaction (ETH/BNB/etc..)",
                        "example": "1000000000000000"
                      },
                      {
                        "name": "value_formatted",
                        "type": "string",
                        "description": "The value that was sent in the transaction (ETH/BNB/etc..) in decimal format",
                        "example": "0.1"
                      },
                      {
                        "name": "direction",
                        "type": "string",
                        "description": "The direction of the transfer",
                        "example": "outgoing"
                      },
                      {
                        "name": "internal_transaction",
                        "type": "boolean",
                        "description": "Indicates if the transaction is internal",
                        "example": "false"
                      },
                      {
                        "name": "token_symbol",
                        "type": "string",
                        "description": "The symbol of the token transferred",
                        "example": "ETH"
                      },
                      {
                        "name": "token_logo",
                        "type": "string",
                        "description": "The logo of the token transferred",
                        "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
                      }
                    ]
                  },
                  {
                    "name": "logs",
                    "type": "object",
                    "fields": [
                      {
                        "name": "log_index",
                        "type": "string",
                        "example": "273"
                      },
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"
                      },
                      {
                        "name": "transaction_index",
                        "type": "string",
                        "example": "204"
                      },
                      {
                        "name": "address",
                        "type": "string",
                        "description": "The address of the contract",
                        "example": "0x3105d328c66d8d55092358cf595d54608178e9b5"
                      },
                      {
                        "name": "data",
                        "type": "string",
                        "description": "The data of the log",
                        "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                      },
                      {
                        "name": "topic0",
                        "type": "string",
                        "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                      },
                      {
                        "name": "topic1",
                        "type": "string",
                        "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                      },
                      {
                        "name": "topic2",
                        "type": "string",
                        "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                      },
                      {
                        "name": "topic3",
                        "type": "string",
                        "example": null
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2021-05-07T11:08:35.000Z"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": "12386788"
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The hash of the block",
                        "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                      },
                      {
                        "name": "decoded_event",
                        "type": "object",
                        "description": "The decoded data of the log",
                        "properties": {
                          "signature": {
                            "type": "string",
                            "example": "Transfer(address,address,uint256)"
                          },
                          "label": {
                            "type": "string",
                            "example": "Transfer"
                          },
                          "type": {
                            "type": "string",
                            "example": "event"
                          },
                          "params": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "from"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "0x26C5011483Add49801eA8E3Ee354fE013895aCe5"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "address"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletTokenBalancesPrice": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get token balances with prices by wallet address",
      "description": "Fetch ERC20 and native token balances for a given wallet address, including their USD prices. Each token returned includes on-chain metadata, as well as off-chain metadata, logos, spam status and more. Additional options to exclude spam tokens, low-liquidity tokens and inactive tokens.",
      "method": "GET",
      "path": "/wallets/:address/tokens",
      "pathParams": [
        {
          "name": "address",
          "description": "The address from which token balances will be checked",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number up to which the balances will be checked.",
          "required": false,
          "type": "number"
        },
        {
          "name": "token_addresses",
          "description": "The addresses to get balances for (optional)",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        },
        {
          "name": "exclude_spam",
          "description": "Exclude spam tokens from the result",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "exclude_unverified_contracts",
          "description": "Exclude unverified contracts from the result",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "exclude_native",
          "description": "Exclude native balance from the result",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "max_token_inactivity",
          "description": "Exclude tokens inactive for more than the given amount of days",
          "required": false,
          "type": "number"
        },
        {
          "name": "min_pair_side_liquidity_usd",
          "description": "Exclude tokens with liquidity less than the specified amount in USD. This parameter refers to the liquidity on a single side of the pair.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns token balances with prices for a specific address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "block_number",
                "type": "string",
                "description": "The block number of the transaction",
                "example": "13680123"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the token contract"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the token"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "The symbol of the token"
                  },
                  {
                    "name": "logo",
                    "type": "string",
                    "description": "The logo of the token"
                  },
                  {
                    "name": "thumbnail",
                    "type": "string",
                    "description": "The thumbnail of the token logo"
                  },
                  {
                    "name": "decimals",
                    "type": "number",
                    "description": "The number of decimals on the token"
                  },
                  {
                    "name": "balance",
                    "type": "string",
                    "description": "The balance of the token"
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates if a contract is possibly a spam contract"
                  },
                  {
                    "name": "verified_contract",
                    "type": "boolean",
                    "description": "Indicates if a contract is verified"
                  },
                  {
                    "name": "usd_price",
                    "type": "string",
                    "description": "USD price of the token"
                  },
                  {
                    "name": "usd_price_24hr_percent_change",
                    "type": "string",
                    "description": "24-hour percent change in USD price of the token"
                  },
                  {
                    "name": "usd_price_24hr_usd_change",
                    "type": "string",
                    "description": "24-hour change in USD price of the token"
                  },
                  {
                    "name": "usd_value_24hr_usd_change",
                    "type": "string",
                    "description": "24-hour change in USD value of the token based on the balance"
                  },
                  {
                    "name": "usd_value",
                    "type": "number",
                    "description": "USD value of the token balance"
                  },
                  {
                    "name": "portfolio_percentage",
                    "type": "number",
                    "description": "Percentage of the token in the entire portfolio"
                  },
                  {
                    "name": "balance_formatted",
                    "type": "string",
                    "description": "Balance of the token in decimal format"
                  },
                  {
                    "name": "native_token",
                    "type": "boolean",
                    "description": "Indicates if the token is a native coin"
                  },
                  {
                    "name": "total_supply",
                    "type": "string",
                    "description": "Total supply of the token"
                  },
                  {
                    "name": "total_supply_formatted",
                    "type": "string",
                    "description": "Total supply of the token in decimal format"
                  },
                  {
                    "name": "percentage_relative_to_total_supply",
                    "type": "number",
                    "description": "Percentage of the token in the total supply"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletNetWorth": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get wallet net worth",
      "description": "Calculate the total net worth of a wallet in USD, with options to exclude spam tokens for accuracy. Options to query cross-chain using the `chains` parameter, as well as additional options to exclude spam tokens, low-liquidity tokens and inactive tokens.",
      "method": "GET",
      "path": "/wallets/:address/net-worth",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chains",
          "description": "The chains to query",
          "required": false,
          "type": "array",
          "fields": {
            "type": "string",
            "example": "eth",
            "enum": [
              "eth",
              "0x1",
              "sepolia",
              "0xaa36a7",
              "polygon",
              "0x89",
              "bsc",
              "0x38",
              "bsc testnet",
              "0x61",
              "avalanche",
              "0xa86a",
              "fantom",
              "0xfa",
              "cronos",
              "0x19",
              "arbitrum",
              "0xa4b1",
              "chiliz",
              "0x15b38",
              "chiliz testnet",
              "0x15b32",
              "gnosis",
              "0x64",
              "gnosis testnet",
              "0x27d8",
              "base",
              "0x2105",
              "base sepolia",
              "0x14a34",
              "optimism",
              "0xa",
              "holesky",
              "0x4268",
              "polygon amoy",
              "0x13882",
              "linea",
              "0xe708",
              "moonbeam",
              "0x504",
              "moonriver",
              "0x505",
              "moonbase",
              "0x507",
              "linea sepolia",
              "0xe705",
              "flow",
              "0x2eb",
              "flow-testnet",
              "0x221",
              "ronin",
              "0x7e4",
              "ronin-testnet",
              "0x7e5",
              "lisk",
              "0x46f",
              "lisk-sepolia",
              "0x106a",
              "pulse",
              "0x171"
            ]
          }
        },
        {
          "name": "exclude_spam",
          "description": "Exclude spam tokens from the result",
          "required": false,
          "example": true,
          "type": "boolean"
        },
        {
          "name": "exclude_unverified_contracts",
          "description": "Exclude unverified contracts from the result",
          "required": false,
          "example": true,
          "type": "boolean"
        },
        {
          "name": "max_token_inactivity",
          "description": "Exclude tokens inactive for more than the given amount of days",
          "required": false,
          "example": 1,
          "type": "number"
        },
        {
          "name": "min_pair_side_liquidity_usd",
          "description": "Exclude tokens with liquidity less than the specified amount in USD. This parameter refers to the liquidity on a single side of the pair.",
          "required": false,
          "example": 1000,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the net worth of a wallet in USD",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total_networth_usd",
                "type": "string",
                "description": "The total networth in USD",
                "example": "3879851.41"
              },
              {
                "name": "chains",
                "type": "object",
                "fields": [
                  {
                    "name": "chain",
                    "type": "string",
                    "description": "The chain",
                    "example": "eth"
                  },
                  {
                    "name": "native_balance",
                    "type": "string",
                    "description": "The native balance",
                    "example": "1085513807021271641379"
                  },
                  {
                    "name": "native_balance_formatted",
                    "type": "string",
                    "description": "The native balance formatted",
                    "example": "1085.513807021271641379"
                  },
                  {
                    "name": "native_balance_usd",
                    "type": "string",
                    "description": "The native balance in USD",
                    "example": "3158392.48"
                  },
                  {
                    "name": "token_balance_usd",
                    "type": "string",
                    "description": "The token balance in USD",
                    "example": "721458.93"
                  },
                  {
                    "name": "networth_usd",
                    "type": "string",
                    "description": "The networth in USD",
                    "example": "3879851.41"
                  }
                ]
              },
              {
                "name": "unsupported_chain_ids",
                "type": "array",
                "description": "The chain ids that are not supported",
                "field": {
                  "type": "string"
                }
              },
              {
                "name": "unavailable_chains",
                "type": "object",
                "description": "The chains that are not available during the request",
                "fields": [
                  {
                    "name": "chain_id",
                    "type": "string",
                    "description": "The chain id",
                    "example": "0x1"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletTransactions": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get native transactions by wallet",
      "description": "Get raw native transactions ordered by block number in descending order.",
      "method": "GET",
      "path": "/:address",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the transactions up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "example": "",
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of native transactions.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "nonce",
                    "type": "string",
                    "description": "The nonce of the transaction",
                    "example": 326595425
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "description": "The transaction index",
                    "example": 25
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The sender",
                    "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The recipient",
                    "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was transferred (in wei)",
                    "example": 650000000000000000
                  },
                  {
                    "name": "gas",
                    "type": "string",
                    "description": "The gas of the transaction",
                    "example": 6721975
                  },
                  {
                    "name": "gas_price",
                    "type": "string",
                    "description": "The gas price",
                    "example": 20000000000
                  },
                  {
                    "name": "input",
                    "type": "string",
                    "description": "The input"
                  },
                  {
                    "name": "receipt_cumulative_gas_used",
                    "type": "string",
                    "description": "The receipt cumulative gas used",
                    "example": 1340925
                  },
                  {
                    "name": "receipt_gas_used",
                    "type": "string",
                    "description": "The receipt gas used",
                    "example": 1340925
                  },
                  {
                    "name": "receipt_contract_address",
                    "type": "string",
                    "description": "The receipt contract address",
                    "example": "0x1d6a4cf64b52f6c73f201839aded7379ce58059c"
                  },
                  {
                    "name": "receipt_root",
                    "type": "string",
                    "description": "The receipt root"
                  },
                  {
                    "name": "receipt_status",
                    "type": "string",
                    "description": "The receipt status",
                    "example": 1
                  },
                  {
                    "name": "transaction_fee",
                    "type": "string",
                    "description": "The transaction fee",
                    "example": "0.00034"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-04-02T10:07:54.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                  },
                  {
                    "name": "internal_transactions",
                    "type": "object",
                    "description": "The internal transaction",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": 12526958
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The block hash",
                        "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                      },
                      {
                        "name": "type",
                        "type": "string",
                        "description": "Call type",
                        "example": "CALL"
                      },
                      {
                        "name": "from",
                        "type": "string",
                        "description": "The sender",
                        "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                      },
                      {
                        "name": "to",
                        "type": "string",
                        "description": "The recipient",
                        "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                      },
                      {
                        "name": "value",
                        "type": "string",
                        "description": "The value that was transfered (in wei)",
                        "example": "650000000000000000"
                      },
                      {
                        "name": "gas",
                        "type": "string",
                        "description": "The gas of the transaction",
                        "example": "6721975"
                      },
                      {
                        "name": "gas_used",
                        "type": "string",
                        "description": "The used gas",
                        "example": "6721975"
                      },
                      {
                        "name": "input",
                        "type": "string",
                        "description": "The input",
                        "example": "0x"
                      },
                      {
                        "name": "output",
                        "type": "string",
                        "description": "The output",
                        "example": "0x"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletTransactionsVerbose": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get decoded transactions by wallet",
      "description": "Get ABI-decoded native transactions ordered by block number in descending order.",
      "method": "GET",
      "path": "/:address/verbose",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the wallet",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "from_block",
          "description": "The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "to_block",
          "description": "The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "from_date",
          "description": "The start date from which to get the transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the transactions up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "example": "",
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns a collection of native transactions.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
                  },
                  {
                    "name": "nonce",
                    "type": "string",
                    "description": "The nonce",
                    "example": "1848059"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "example": "108"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The from address",
                    "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The to address",
                    "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value sent",
                    "example": "115580000000000000"
                  },
                  {
                    "name": "gas",
                    "type": "string",
                    "example": "30000"
                  },
                  {
                    "name": "gas_price",
                    "type": "string",
                    "description": "The gas price",
                    "example": "52500000000"
                  },
                  {
                    "name": "input",
                    "type": "string",
                    "example": "0x"
                  },
                  {
                    "name": "receipt_cumulative_gas_used",
                    "type": "string",
                    "example": "4923073"
                  },
                  {
                    "name": "receipt_gas_used",
                    "type": "string",
                    "example": "21000"
                  },
                  {
                    "name": "receipt_contract_address",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "receipt_root",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "receipt_status",
                    "type": "string",
                    "example": "1"
                  },
                  {
                    "name": "transaction_fee",
                    "type": "string",
                    "example": "0.00034"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": "12386788"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The hash of the block",
                    "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                  },
                  {
                    "name": "logs",
                    "type": "object",
                    "description": "The logs of the transaction",
                    "fields": [
                      {
                        "name": "log_index",
                        "type": "string",
                        "example": "273"
                      },
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"
                      },
                      {
                        "name": "transaction_index",
                        "type": "string",
                        "example": "204"
                      },
                      {
                        "name": "address",
                        "type": "string",
                        "description": "The address of the contract",
                        "example": "0x3105d328c66d8d55092358cf595d54608178e9b5"
                      },
                      {
                        "name": "data",
                        "type": "string",
                        "description": "The data of the log",
                        "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                      },
                      {
                        "name": "topic0",
                        "type": "string",
                        "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                      },
                      {
                        "name": "topic1",
                        "type": "string",
                        "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                      },
                      {
                        "name": "topic2",
                        "type": "string",
                        "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                      },
                      {
                        "name": "topic3",
                        "type": "string",
                        "example": null
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2021-05-07T11:08:35.000Z"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": "12386788"
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The hash of the block",
                        "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                      },
                      {
                        "name": "decoded_event",
                        "type": "object",
                        "description": "The decoded data of the log",
                        "properties": {
                          "signature": {
                            "type": "string",
                            "example": "Transfer(address,address,uint256)"
                          },
                          "label": {
                            "type": "string",
                            "example": "Transfer"
                          },
                          "type": {
                            "type": "string",
                            "example": "event"
                          },
                          "params": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "from"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "0x26C5011483Add49801eA8E3Ee354fE013895aCe5"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "address"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "name": "decoded_call",
                    "type": "object",
                    "description": "The decoded data of the transaction",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "example": "transfer(address,uint256)"
                      },
                      "label": {
                        "type": "string",
                        "example": "transfer"
                      },
                      "type": {
                        "type": "string",
                        "example": "function"
                      },
                      "params": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "_to"
                            },
                            "value": {
                              "type": "string",
                              "example": "0x1CA455A55108874A95C84620dDA2566c54D17953"
                            },
                            "type": {
                              "type": "string",
                              "example": "address"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTransaction": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get transaction by hash",
      "description": "Get the contents of a transaction by the given transaction hash.",
      "method": "GET",
      "path": "/transaction/:transaction_hash",
      "pathParams": [
        {
          "name": "transaction_hash",
          "description": "The transaction hash",
          "required": true,
          "example": "0xfeda0e8f0d6e54112c28d319c0d303c065d1125c9197bd653682f5fcb0a6c81e",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "example": "",
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Transaction details by transaction hash",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "hash",
                "type": "string",
                "description": "The hash of the transaction",
                "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
              },
              {
                "name": "nonce",
                "type": "string",
                "description": "The nonce",
                "example": "1848059"
              },
              {
                "name": "transaction_index",
                "type": "string",
                "example": "108"
              },
              {
                "name": "from_address_entity",
                "type": "string",
                "description": "The from address entity",
                "example": "Opensea"
              },
              {
                "name": "from_address_entity_logo",
                "type": "string",
                "description": "The logo of the from address entity",
                "example": "https://opensea.io/favicon.ico"
              },
              {
                "name": "from_address",
                "type": "string",
                "description": "The from address",
                "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
              },
              {
                "name": "from_address_label",
                "type": "string",
                "description": "The label of the from address",
                "example": "Binance 1"
              },
              {
                "name": "to_address_entity",
                "type": "string",
                "description": "The to address entity",
                "example": "Beaver Build"
              },
              {
                "name": "to_address_entity_logo",
                "type": "string",
                "description": "The logo of the to address entity",
                "example": "https://beaverbuild.com/favicon.ico"
              },
              {
                "name": "to_address",
                "type": "string",
                "description": "The to address",
                "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
              },
              {
                "name": "to_address_label",
                "type": "string",
                "description": "The label of the to address",
                "example": "Binance 2"
              },
              {
                "name": "value",
                "type": "string",
                "description": "The value sent",
                "example": "115580000000000000"
              },
              {
                "name": "gas",
                "type": "string",
                "example": "30000"
              },
              {
                "name": "gas_price",
                "type": "string",
                "description": "The gas price",
                "example": "52500000000"
              },
              {
                "name": "input",
                "type": "string",
                "example": "0x"
              },
              {
                "name": "receipt_cumulative_gas_used",
                "type": "string",
                "example": "4923073"
              },
              {
                "name": "receipt_gas_used",
                "type": "string",
                "example": "21000"
              },
              {
                "name": "receipt_contract_address",
                "type": "string",
                "example": null
              },
              {
                "name": "receipt_root",
                "type": "string",
                "example": null
              },
              {
                "name": "receipt_status",
                "type": "string",
                "example": "1"
              },
              {
                "name": "block_timestamp",
                "type": "string",
                "description": "The block timestamp",
                "example": "2021-05-07T11:08:35.000Z"
              },
              {
                "name": "block_number",
                "type": "string",
                "description": "The block number",
                "example": "12386788"
              },
              {
                "name": "block_hash",
                "type": "string",
                "description": "The hash of the block",
                "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
              },
              {
                "name": "logs",
                "type": "object",
                "description": "The logs of the transaction",
                "fields": [
                  {
                    "name": "log_index",
                    "type": "string",
                    "example": "273"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "example": "204"
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the contract",
                    "example": "0x3105d328c66d8d55092358cf595d54608178e9b5"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "description": "The data of the log",
                    "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                  },
                  {
                    "name": "topic0",
                    "type": "string",
                    "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                  },
                  {
                    "name": "topic1",
                    "type": "string",
                    "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                  },
                  {
                    "name": "topic2",
                    "type": "string",
                    "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                  },
                  {
                    "name": "topic3",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": "12386788"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The hash of the block",
                    "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                  }
                ]
              },
              {
                "name": "internal_transactions",
                "type": "object",
                "description": "The internal transactions of the transaction",
                "fields": [
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": 12526958
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The block hash",
                    "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                  },
                  {
                    "name": "type",
                    "type": "string",
                    "description": "Call type",
                    "example": "CALL"
                  },
                  {
                    "name": "from",
                    "type": "string",
                    "description": "The sender",
                    "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "description": "The recipient",
                    "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value that was transfered (in wei)",
                    "example": "650000000000000000"
                  },
                  {
                    "name": "gas",
                    "type": "string",
                    "description": "The gas of the transaction",
                    "example": "6721975"
                  },
                  {
                    "name": "gas_used",
                    "type": "string",
                    "description": "The used gas",
                    "example": "6721975"
                  },
                  {
                    "name": "input",
                    "type": "string",
                    "description": "The input",
                    "example": "0x"
                  },
                  {
                    "name": "output",
                    "type": "string",
                    "description": "The output",
                    "example": "0x"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTransactionVerbose": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get decoded transaction by hash",
      "description": "Get the ABI-decoded contents of a transaction by the given transaction hash.",
      "method": "GET",
      "path": "/transaction/:transaction_hash/verbose",
      "pathParams": [
        {
          "name": "transaction_hash",
          "description": "The transaction hash",
          "required": true,
          "example": "0xfeda0e8f0d6e54112c28d319c0d303c065d1125c9197bd653682f5fcb0a6c81e",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "example": "",
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Transaction details by transaction hash",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "hash",
                "type": "string",
                "description": "The hash of the transaction",
                "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
              },
              {
                "name": "nonce",
                "type": "string",
                "description": "The nonce",
                "example": "1848059"
              },
              {
                "name": "transaction_index",
                "type": "string",
                "example": "108"
              },
              {
                "name": "from_address_entity",
                "type": "string",
                "description": "The from address entity",
                "example": "Opensea"
              },
              {
                "name": "from_address_entity_logo",
                "type": "string",
                "description": "The logo of the from address entity",
                "example": "https://opensea.io/favicon.ico"
              },
              {
                "name": "from_address",
                "type": "string",
                "description": "The from address",
                "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
              },
              {
                "name": "from_address_label",
                "type": "string",
                "description": "The label of the from address",
                "example": "Binance 1"
              },
              {
                "name": "to_address_entity",
                "type": "string",
                "description": "The to address entity",
                "example": "Beaver Build"
              },
              {
                "name": "to_address_entity_logo",
                "type": "string",
                "description": "The logo of the to address entity",
                "example": "https://beaverbuild.com/favicon.ico"
              },
              {
                "name": "to_address",
                "type": "string",
                "description": "The to address",
                "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
              },
              {
                "name": "to_address_label",
                "type": "string",
                "description": "The label of the to address",
                "example": "Binance 2"
              },
              {
                "name": "value",
                "type": "string",
                "description": "The value sent",
                "example": "115580000000000000"
              },
              {
                "name": "gas",
                "type": "string",
                "example": "30000"
              },
              {
                "name": "gas_price",
                "type": "string",
                "description": "The gas price",
                "example": "52500000000"
              },
              {
                "name": "input",
                "type": "string",
                "example": "0x"
              },
              {
                "name": "receipt_cumulative_gas_used",
                "type": "string",
                "example": "4923073"
              },
              {
                "name": "receipt_gas_used",
                "type": "string",
                "example": "21000"
              },
              {
                "name": "receipt_contract_address",
                "type": "string",
                "example": null
              },
              {
                "name": "receipt_root",
                "type": "string",
                "example": null
              },
              {
                "name": "receipt_status",
                "type": "string",
                "example": "1"
              },
              {
                "name": "transaction_fee",
                "type": "string",
                "example": "0.00034"
              },
              {
                "name": "block_timestamp",
                "type": "string",
                "description": "The block timestamp",
                "example": "2021-05-07T11:08:35.000Z"
              },
              {
                "name": "block_number",
                "type": "string",
                "description": "The block number",
                "example": "12386788"
              },
              {
                "name": "block_hash",
                "type": "string",
                "description": "The hash of the block",
                "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
              },
              {
                "name": "logs",
                "type": "object",
                "description": "The logs of the transaction",
                "fields": [
                  {
                    "name": "log_index",
                    "type": "string",
                    "example": "273"
                  },
                  {
                    "name": "transaction_hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "example": "204"
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The address of the contract",
                    "example": "0x3105d328c66d8d55092358cf595d54608178e9b5"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "description": "The data of the log",
                    "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                  },
                  {
                    "name": "topic0",
                    "type": "string",
                    "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                  },
                  {
                    "name": "topic1",
                    "type": "string",
                    "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                  },
                  {
                    "name": "topic2",
                    "type": "string",
                    "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                  },
                  {
                    "name": "topic3",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The timestamp of the block",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": "12386788"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The hash of the block",
                    "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                  },
                  {
                    "name": "decoded_event",
                    "type": "object",
                    "description": "The decoded data of the log",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "example": "Transfer(address,address,uint256)"
                      },
                      "label": {
                        "type": "string",
                        "example": "Transfer"
                      },
                      "type": {
                        "type": "string",
                        "example": "event"
                      },
                      "params": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "from"
                            },
                            "value": {
                              "type": "string",
                              "example": "0x26C5011483Add49801eA8E3Ee354fE013895aCe5"
                            },
                            "type": {
                              "type": "string",
                              "example": "address"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "name": "decoded_call",
                "type": "object",
                "description": "The decoded data of the transaction",
                "properties": {
                  "signature": {
                    "type": "string",
                    "example": "transfer(address,uint256)"
                  },
                  "label": {
                    "type": "string",
                    "example": "transfer"
                  },
                  "type": {
                    "type": "string",
                    "example": "function"
                  },
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "_to"
                        },
                        "value": {
                          "type": "string",
                          "example": "0x1CA455A55108874A95C84620dDA2566c54D17953"
                        },
                        "type": {
                          "type": "string",
                          "example": "address"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "getBlock": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get block by hash",
      "description": "Get the contents of a block given the block hash.",
      "method": "GET",
      "path": "/block/:block_number_or_hash",
      "pathParams": [
        {
          "name": "block_number_or_hash",
          "description": "The block number or block hash",
          "required": true,
          "example": "15863321",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "include",
          "description": "If the result should contain the internal transactions.",
          "required": false,
          "example": "",
          "type": "string",
          "enum": [
            "internal_transactions"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the contents of a block",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "timestamp",
                "type": "string",
                "description": "The block timestamp",
                "example": "2021-05-07T11:08:35.000Z"
              },
              {
                "name": "number",
                "type": "string",
                "description": "The block number",
                "example": 12386788
              },
              {
                "name": "hash",
                "type": "string",
                "description": "The block hash",
                "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
              },
              {
                "name": "parent_hash",
                "type": "string",
                "description": "The block hash of the parent block",
                "example": "0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045"
              },
              {
                "name": "nonce",
                "type": "string",
                "description": "The nonce",
                "example": "0xedeb2d8fd2b2bdec"
              },
              {
                "name": "sha3_uncles",
                "type": "string",
                "example": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"
              },
              {
                "name": "logs_bloom",
                "type": "string",
                "example": "0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf"
              },
              {
                "name": "transactions_root",
                "type": "string",
                "example": "0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27"
              },
              {
                "name": "state_root",
                "type": "string",
                "example": "0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b"
              },
              {
                "name": "receipts_root",
                "type": "string",
                "example": "0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23"
              },
              {
                "name": "miner",
                "type": "string",
                "description": "The address of the miner",
                "example": "0xea674fdde714fd979de3edf0f56aa9716b898ec8"
              },
              {
                "name": "difficulty",
                "type": "string",
                "description": "The difficulty of the block",
                "example": "7253857437305950"
              },
              {
                "name": "total_difficulty",
                "type": "string",
                "description": "The total difficulty",
                "example": "24325637817906576196890"
              },
              {
                "name": "size",
                "type": "string",
                "description": "The block size",
                "example": "61271"
              },
              {
                "name": "extra_data",
                "type": "string",
                "example": "0x65746865726d696e652d6575726f70652d7765737433"
              },
              {
                "name": "gas_limit",
                "type": "string",
                "description": "The gas limit",
                "example": "14977947"
              },
              {
                "name": "gas_used",
                "type": "string",
                "description": "The gas used",
                "example": "14964688"
              },
              {
                "name": "transaction_count",
                "type": "string",
                "description": "The number of transactions in the block",
                "example": "252"
              },
              {
                "name": "transactions",
                "type": "object",
                "description": "The transactions in the block",
                "fields": [
                  {
                    "name": "hash",
                    "type": "string",
                    "description": "The hash of the transaction",
                    "example": "0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"
                  },
                  {
                    "name": "nonce",
                    "type": "string",
                    "description": "The nonce",
                    "example": "1848059"
                  },
                  {
                    "name": "transaction_index",
                    "type": "string",
                    "example": "108"
                  },
                  {
                    "name": "from_address_entity",
                    "type": "string",
                    "description": "The from address entity",
                    "example": "Opensea"
                  },
                  {
                    "name": "from_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the from address entity",
                    "example": "https://opensea.io/favicon.ico"
                  },
                  {
                    "name": "from_address",
                    "type": "string",
                    "description": "The from address",
                    "example": "0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"
                  },
                  {
                    "name": "from_address_label",
                    "type": "string",
                    "description": "The label of the from address",
                    "example": "Binance 1"
                  },
                  {
                    "name": "to_address_entity",
                    "type": "string",
                    "description": "The to address entity",
                    "example": "Beaver Build"
                  },
                  {
                    "name": "to_address_entity_logo",
                    "type": "string",
                    "description": "The logo of the to address entity",
                    "example": "https://beaverbuild.com/favicon.ico"
                  },
                  {
                    "name": "to_address",
                    "type": "string",
                    "description": "The to address",
                    "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                  },
                  {
                    "name": "to_address_label",
                    "type": "string",
                    "description": "The label of the to address",
                    "example": "Binance 2"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "The value sent",
                    "example": "115580000000000000"
                  },
                  {
                    "name": "gas",
                    "type": "string",
                    "example": "30000"
                  },
                  {
                    "name": "gas_price",
                    "type": "string",
                    "description": "The gas price",
                    "example": "52500000000"
                  },
                  {
                    "name": "input",
                    "type": "string",
                    "example": "0x"
                  },
                  {
                    "name": "receipt_cumulative_gas_used",
                    "type": "string",
                    "example": "4923073"
                  },
                  {
                    "name": "receipt_gas_used",
                    "type": "string",
                    "example": "21000"
                  },
                  {
                    "name": "receipt_contract_address",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "receipt_root",
                    "type": "string",
                    "example": null
                  },
                  {
                    "name": "receipt_status",
                    "type": "string",
                    "example": "1"
                  },
                  {
                    "name": "block_timestamp",
                    "type": "string",
                    "description": "The block timestamp",
                    "example": "2021-05-07T11:08:35.000Z"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "description": "The block number",
                    "example": "12386788"
                  },
                  {
                    "name": "block_hash",
                    "type": "string",
                    "description": "The hash of the block",
                    "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                  },
                  {
                    "name": "logs",
                    "type": "object",
                    "description": "The logs of the transaction",
                    "fields": [
                      {
                        "name": "log_index",
                        "type": "string",
                        "example": "273"
                      },
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"
                      },
                      {
                        "name": "transaction_index",
                        "type": "string",
                        "example": "204"
                      },
                      {
                        "name": "address",
                        "type": "string",
                        "description": "The address of the contract",
                        "example": "0x3105d328c66d8d55092358cf595d54608178e9b5"
                      },
                      {
                        "name": "data",
                        "type": "string",
                        "description": "The data of the log",
                        "example": "0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"
                      },
                      {
                        "name": "topic0",
                        "type": "string",
                        "example": "0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"
                      },
                      {
                        "name": "topic1",
                        "type": "string",
                        "example": "0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"
                      },
                      {
                        "name": "topic2",
                        "type": "string",
                        "example": "0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"
                      },
                      {
                        "name": "topic3",
                        "type": "string",
                        "example": null
                      },
                      {
                        "name": "block_timestamp",
                        "type": "string",
                        "description": "The timestamp of the block",
                        "example": "2021-05-07T11:08:35.000Z"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": "12386788"
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The hash of the block",
                        "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
                      }
                    ]
                  },
                  {
                    "name": "internal_transactions",
                    "type": "object",
                    "description": "The internal transactions of the transaction",
                    "fields": [
                      {
                        "name": "transaction_hash",
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
                      },
                      {
                        "name": "block_number",
                        "type": "string",
                        "description": "The block number",
                        "example": 12526958
                      },
                      {
                        "name": "block_hash",
                        "type": "string",
                        "description": "The block hash",
                        "example": "0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"
                      },
                      {
                        "name": "type",
                        "type": "string",
                        "description": "Call type",
                        "example": "CALL"
                      },
                      {
                        "name": "from",
                        "type": "string",
                        "description": "The sender",
                        "example": "0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"
                      },
                      {
                        "name": "to",
                        "type": "string",
                        "description": "The recipient",
                        "example": "0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"
                      },
                      {
                        "name": "value",
                        "type": "string",
                        "description": "The value that was transfered (in wei)",
                        "example": "650000000000000000"
                      },
                      {
                        "name": "gas",
                        "type": "string",
                        "description": "The gas of the transaction",
                        "example": "6721975"
                      },
                      {
                        "name": "gas_used",
                        "type": "string",
                        "description": "The used gas",
                        "example": "6721975"
                      },
                      {
                        "name": "input",
                        "type": "string",
                        "description": "The input",
                        "example": "0x"
                      },
                      {
                        "name": "output",
                        "type": "string",
                        "description": "The output",
                        "example": "0x"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getLatestBlockNumber": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get latest block number",
      "description": "Get the most recent block number for a specified blockchain.",
      "method": "GET",
      "path": "/latestBlockNumber/:chain",
      "pathParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": true,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the latest block number."
        }
      ]
    },
    "getDateToBlock": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get block by date",
      "description": "Find the closest block to a specific date on a blockchain.",
      "method": "GET",
      "path": "/dateToBlock",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "date",
          "description": "Unix date in milliseconds or a datestring (format in seconds or datestring accepted by momentjs)",
          "required": true,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the block number and corresponding date and timestamp",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "date",
                "type": "string",
                "description": "The date of the block",
                "example": "2020-01-01T00:00:00+00:00"
              },
              {
                "name": "block",
                "type": "number",
                "description": "The block number",
                "example": 9193266
              },
              {
                "name": "timestamp",
                "type": "number",
                "description": "The timestamp of the block",
                "example": 1577836811
              },
              {
                "name": "block_timestamp",
                "type": "string",
                "description": "The timestamp of the block",
                "example": "2019-12-31T23:59:45.000Z"
              },
              {
                "name": "hash",
                "type": "string",
                "description": "The block hash",
                "example": "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
              },
              {
                "name": "parent_hash",
                "type": "string",
                "description": "The block hash of the parent block",
                "example": "0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045"
              }
            ]
          }
        }
      ]
    },
    "runContractFunction": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Run contract function",
      "description": "Execute a read-only function from a contract’s ABI to retrieve data from the blockchain.",
      "method": "POST",
      "path": "/:address/function",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the contract",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "function_name",
          "description": "The function name of the contract",
          "required": true,
          "type": "string"
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "abi",
            "type": "array",
            "description": "The contract ABI",
            "example": [],
            "field": {
              "type": "object"
            }
          },
          {
            "name": "params",
            "type": "object",
            "description": "The params for the given function",
            "example": {},
            "fields": []
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns response of the function executed"
        }
      ]
    },
    "web3ApiVersion": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get API version",
      "description": "Check the current version of the Moralis Web3 API.",
      "method": "GET",
      "path": "/web3/version",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Get the current version of the Moralis Web3 API.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "version",
                "type": "string",
                "description": "The version of the API",
                "example": "1.0.0"
              }
            ]
          }
        }
      ]
    },
    "endpointWeights": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get weights of endpoints",
      "description": "View the cost and rate limits for each Moralis API endpoint.",
      "method": "GET",
      "path": "/info/endpointWeights",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "The cost and rate limit for each API endpoint."
        }
      ]
    },
    "resolveAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "ENS lookup by address",
      "description": "Convert an Ethereum address to its associated ENS domain, if registered.",
      "method": "GET",
      "path": "/resolve/:address/reverse",
      "pathParams": [
        {
          "name": "address",
          "description": "The address to be resolved",
          "required": true,
          "example": "0xd8da6bf26964af9d7eed9e03e53415d37aa96045",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns an ENS",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "name",
                "type": "string",
                "description": "Resolved ENS address",
                "example": "Vitalik.eth"
              }
            ]
          }
        }
      ]
    },
    "resolveDomain": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resolve Unstoppable domain",
      "description": "Map an Unstoppable domain to its corresponding blockchain address.",
      "method": "GET",
      "path": "/resolve/:domain",
      "pathParams": [
        {
          "name": "domain",
          "description": "The domain to be resolved",
          "required": true,
          "example": "brad.crypto",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "currency",
          "description": "The currency to query",
          "required": false,
          "example": "eth",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns an address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "Resolved domain address",
                "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
              }
            ]
          }
        },
        {
          "status": "404",
          "description": "Returns an address"
        }
      ]
    },
    "resolveAddressToDomain": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Resolve Address to Unstoppable domain",
      "description": "Find the Unstoppable domain linked to a specific blockchain address.",
      "method": "GET",
      "path": "/resolve/:address/domain",
      "pathParams": [
        {
          "name": "address",
          "description": "The address to be resolved",
          "required": true,
          "example": "0x94ef5300cbc0aa600a821ccbc561b057e456ab23",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "currency",
          "description": "The currency to query",
          "required": false,
          "example": "eth",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns an unstoppable domain",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "name",
                "type": "string",
                "description": "Resolved unstoppable domain address",
                "example": "sandy.nft"
              }
            ]
          }
        },
        {
          "status": "404",
          "description": "Returns an unstoppable domain"
        }
      ]
    },
    "resolveENSDomain": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "ENS lookup by domain",
      "description": "Resolve an ENS domain to its associated Ethereum address.",
      "method": "GET",
      "path": "/resolve/ens/:domain",
      "pathParams": [
        {
          "name": "domain",
          "description": "The domain to be resolved",
          "required": true,
          "example": "vitalik.eth",
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns an address",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "Resolved domain address",
                "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
              }
            ]
          }
        },
        {
          "status": "404",
          "description": "Returns an address"
        }
      ]
    },
    "getPairPrice": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get DEX token pair price",
      "description": "Fetch the current price of a token pair on Uniswap V2-based DEXs.",
      "method": "GET",
      "path": "/:token0_address/:token1_address/price",
      "pathParams": [
        {
          "name": "token0_address",
          "description": "The token0 address",
          "required": true,
          "example": "0xae7ab96520de3a18e5e111b5eaab095312d7fe84",
          "type": "string"
        },
        {
          "name": "token1_address",
          "description": "The token1 address",
          "required": true,
          "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number to get the reserves from",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the price up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "exchange",
          "description": "The factory name or address of the token exchange",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the pair price"
        }
      ]
    },
    "getPairReserves": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get DEX token pair reserves",
      "description": "Retrieve liquidity reserves for a token pair on Uniswap V2-based DEXs.",
      "method": "GET",
      "path": "/:pair_address/reserves",
      "pathParams": [
        {
          "name": "pair_address",
          "description": "The liquidity pair address",
          "required": true,
          "example": "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number to get the reserves from",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the reserves up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the pair reserves"
        }
      ]
    },
    "getPairAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get DEX token pair address",
      "description": "Get the pair address for a token0/token1 combination on a DEX, interchangeable order.",
      "method": "GET",
      "path": "/:token0_address/:token1_address/pairAddress",
      "pathParams": [
        {
          "name": "token0_address",
          "description": "The token0 address",
          "required": true,
          "example": "0x2b591e99afe9f32eaa6214f7b7629768c40eeb39",
          "type": "string"
        },
        {
          "name": "token1_address",
          "description": "The token1 address",
          "required": true,
          "example": "0xdac17f958d2ee523a2206206994597c13d831ec7",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "to_block",
          "description": "The block number to get the reserves from",
          "required": false,
          "type": "string"
        },
        {
          "name": "to_date",
          "description": "Get the reserves up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "type": "string"
        },
        {
          "name": "exchange",
          "description": "The factory name or address of the token exchange",
          "required": true,
          "example": "uniswapv2",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the pair address of the two tokens.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "token0",
                "type": "object",
                "fields": [
                  {
                    "name": "address",
                    "type": "string",
                    "example": "0x2b591e99afe9f32eaa6214f7b7629768c40eeb39"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "example": "HEX"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "example": "HEX"
                  },
                  {
                    "name": "decimals",
                    "type": "string",
                    "example": 9
                  },
                  {
                    "name": "logo",
                    "type": "string",
                    "example": "https://cdn.moralis.io/eth/0x2b591e99afe9f32eaa6214f7b7629768c40eeb39.png"
                  },
                  {
                    "name": "logo_hash",
                    "type": "string",
                    "example": "b3bd1b5512965d7b6aeee903dcc6d28b116d58c788eb41e9c1690baed878beaa"
                  },
                  {
                    "name": "thumbnail",
                    "type": "string",
                    "example": "https://cdn.moralis.io/eth/0x2b591e99afe9f32eaa6214f7b7629768c40eeb39_thumb.png"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "example": 14836562
                  },
                  {
                    "name": "validated",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "created_at",
                    "type": "string",
                    "example": "2022-01-20T09:39:55.818Z"
                  }
                ]
              },
              {
                "name": "token1",
                "type": "object",
                "fields": [
                  {
                    "name": "address",
                    "type": "string",
                    "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "example": "Tether USD"
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "example": "USDT"
                  },
                  {
                    "name": "decimals",
                    "type": "string",
                    "example": 6
                  },
                  {
                    "name": "logo",
                    "type": "string",
                    "example": "https://cdn.moralis.io/eth/0xdac17f958d2ee523a2206206994597c13d831ec7.png"
                  },
                  {
                    "name": "logo_hash",
                    "type": "string",
                    "example": "ee7aa2cdf100649a3521a082116258e862e6971261a39b5cd4e4354fcccbc54d"
                  },
                  {
                    "name": "thumbnail",
                    "type": "string",
                    "example": "https://cdn.moralis.io/eth/0xdac17f958d2ee523a2206206994597c13d831ec7_thumb.png"
                  },
                  {
                    "name": "block_number",
                    "type": "string",
                    "example": "4638568"
                  },
                  {
                    "name": "validated",
                    "type": "number",
                    "example": 1
                  },
                  {
                    "name": "created_at",
                    "type": "string",
                    "example": "2022-01-20T09:39:55.818Z"
                  }
                ]
              },
              {
                "name": "pairAddress",
                "type": "string",
                "example": "0xbbb9bf440d0f686487925fef3b0a0f9aa67753f6"
              }
            ]
          }
        }
      ]
    },
    "getTopERC20TokensByMarketCap": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top ERC20 tokens by market cap",
      "description": "List the top ERC20 tokens ranked by market cap. Currently only supports Ethereum. For more flexibility, we recommend to use getFilteredTokens.",
      "method": "GET",
      "path": "/market-data/erc20s/top-tokens",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the top ERC20 tokens by market cap",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getTopERC20TokensByPriceMovers": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top ERC20 tokens by price movements (winners and losers)",
      "description": "Get top ERC20 tokens by price movements (winners and losers). Currently only supports Ethereum. For more flexibility, we recommend to use getFilteredTokens or getTopGainersTokens and getTopLosersTokens.",
      "method": "GET",
      "path": "/market-data/erc20s/top-movers",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns an a list of ERC20 tokens with their price change",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "gainers",
                "type": "array",
                "items": {
                  "required": [
                    "rank",
                    "token_name",
                    "token_symbol",
                    "token_logo",
                    "token_decimals",
                    "contract_address",
                    "price_usd",
                    "price_24h_percent_change",
                    "price_7d_percent_change",
                    "market_cap_usd"
                  ],
                  "properties": {
                    "rank": {
                      "type": "integer",
                      "description": "The rank",
                      "example": 1
                    },
                    "token_name": {
                      "type": "string",
                      "description": "The token name",
                      "example": "Wrapped Ether"
                    },
                    "token_symbol": {
                      "type": "string",
                      "description": "The token symbol",
                      "example": "WETH"
                    },
                    "token_logo": {
                      "type": "string",
                      "description": "The token image",
                      "example": "https://cdn.moralis.io/coins/images/2518/large/weth.png?1595348880"
                    },
                    "token_decimals": {
                      "type": "string",
                      "description": "The token decimals",
                      "example": "18"
                    },
                    "contract_address": {
                      "type": "string",
                      "description": "The contract address",
                      "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                    },
                    "price_usd": {
                      "type": "string",
                      "description": "The price in USD",
                      "example": "0.0285"
                    },
                    "price_24h_percent_change": {
                      "type": "string",
                      "description": "The price change in the last 24h",
                      "example": "0.0285"
                    },
                    "price_7d_percent_change": {
                      "type": "string",
                      "description": "The price change in the last 7d",
                      "example": "0.0285"
                    },
                    "market_cap_usd": {
                      "type": "string",
                      "description": "The market cap in USD",
                      "example": "0.0285"
                    }
                  }
                }
              },
              {
                "name": "losers",
                "type": "array",
                "items": {
                  "required": [
                    "rank",
                    "token_name",
                    "token_symbol",
                    "token_logo",
                    "token_decimals",
                    "contract_address",
                    "price_usd",
                    "price_24h_percent_change",
                    "price_7d_percent_change",
                    "market_cap_usd"
                  ],
                  "properties": {
                    "rank": {
                      "type": "integer",
                      "description": "The rank",
                      "example": 1
                    },
                    "token_name": {
                      "type": "string",
                      "description": "The token name",
                      "example": "Wrapped Ether"
                    },
                    "token_symbol": {
                      "type": "string",
                      "description": "The token symbol",
                      "example": "WETH"
                    },
                    "token_logo": {
                      "type": "string",
                      "description": "The token image",
                      "example": "https://cdn.moralis.io/coins/images/2518/large/weth.png?1595348880"
                    },
                    "token_decimals": {
                      "type": "string",
                      "description": "The token decimals",
                      "example": "18"
                    },
                    "contract_address": {
                      "type": "string",
                      "description": "The contract address",
                      "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                    },
                    "price_usd": {
                      "type": "string",
                      "description": "The price in USD",
                      "example": "0.0285"
                    },
                    "price_24h_percent_change": {
                      "type": "string",
                      "description": "The price change in the last 24h",
                      "example": "0.0285"
                    },
                    "price_7d_percent_change": {
                      "type": "string",
                      "description": "The price change in the last 7d",
                      "example": "0.0285"
                    },
                    "market_cap_usd": {
                      "type": "string",
                      "description": "The market cap in USD",
                      "example": "0.0285"
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "getTopNFTCollectionsByMarketCap": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top NFT collections by market cap",
      "description": "Get top NFT collections by their current market cap. Currently only supports Ethereum.",
      "method": "GET",
      "path": "/market-data/nfts/top-collections",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the top NFT collections by market cap",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getHottestNFTCollectionsByTradingVolume": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top NFT collections by trading volume",
      "description": "Get NFT collections by their 24 hour trading volume. Currently only supports Ethereum.",
      "method": "GET",
      "path": "/market-data/nfts/hottest-collections",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the hottest NFT collections by trading volume",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getTopCryptoCurrenciesByMarketCap": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top crypto currencies by market cap",
      "description": "Get cryptocurrencies by their market cap.",
      "method": "GET",
      "path": "/market-data/global/market-cap",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the top crypto currencies by market cap",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getTopCryptoCurrenciesByTradingVolume": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top crypto currencies by trading volume",
      "description": "Get cryptocurrencies with the highest 24 hour trading volume.",
      "method": "GET",
      "path": "/market-data/global/volume",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the top crypto currencies by trading volume",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "reviewContracts": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Review contracts",
      "description": "Classify contracts as spam or legitimate based on their characteristics.",
      "method": "POST",
      "path": "/contracts-review",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "contracts",
            "type": "object",
            "description": "The contracts to be reported",
            "example": [
              {
                "contract_address": "0xa4991609c508b6d4fb7156426db0bd49fe298bd8",
                "report_type": "spam",
                "contract_type": "ERC20",
                "reason": "The contract contains shady code"
              }
            ],
            "fields": [
              {
                "name": "contract_address",
                "type": "string",
                "description": "The contract address",
                "example": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
              },
              {
                "name": "reason",
                "type": "string",
                "description": "The reason for the contract being spam",
                "example": 100
              },
              {
                "name": "report_type",
                "type": "string",
                "description": "This can be spam or not_spam",
                "example": "spam"
              },
              {
                "name": "contract_type",
                "type": "string",
                "description": "This can be ERC20, or NFT",
                "example": "ERC20"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns a message acknowledging the report"
        }
      ]
    },
    "getDefiSummary": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the DeFi summary of a wallet",
      "description": "Summarize a wallet’s DeFi activity, including total USD value, unclaimed rewards and active protocols.",
      "method": "GET",
      "path": "/wallets/:address/defi/summary",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "example": "0xd100d8b69c5ae23d6aa30c6c3874bf47539b95fd",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the defi summary for the wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "active_protocols",
                "type": "number",
                "description": "The number of active protocols",
                "example": "10"
              },
              {
                "name": "total_positions",
                "type": "number",
                "description": "The number of total positions",
                "example": "100"
              },
              {
                "name": "total_usd_value",
                "type": "number",
                "description": "The total USD value of the wallet",
                "example": "1000000"
              },
              {
                "name": "total_unclaimed_usd_value",
                "type": "number",
                "description": "The total unclaimed USD value of the wallet",
                "example": "1000000"
              },
              {
                "name": "protocols",
                "type": "object",
                "fields": [
                  {
                    "name": "total_usd_value",
                    "type": "number",
                    "description": "The total USD value of the protocol",
                    "example": "1000000"
                  },
                  {
                    "name": "total_unclaimed_usd_value",
                    "type": "number",
                    "description": "The total unclaimed USD value of the protocol",
                    "example": "1000000"
                  },
                  {
                    "name": "positions",
                    "type": "number",
                    "description": "The number of positions",
                    "example": "100"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getDefiPositionsByProtocol": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get detailed DeFi positions by protocol for a wallet",
      "description": "Fetch detailed DeFi positions for a given wallet and protocol.",
      "method": "GET",
      "path": "/wallets/:address/defi/:protocol/positions",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "example": "0xd100d8b69c5ae23d6aa30c6c3874bf47539b95fd",
          "type": "string"
        },
        {
          "name": "protocol",
          "description": "The protocol to query",
          "required": true,
          "example": "uniswap-v3",
          "type": "string",
          "enum": [
            "uniswap-v2",
            "uniswap-v3",
            "pancakeswap-v2",
            "pancakeswap-v3",
            "quickswap-v2",
            "quickswap-v3",
            "sushiswap-v2",
            "aave-v2",
            "aave-v3",
            "aave-lido",
            "fraxswap-v1",
            "fraxswap-v2",
            "lido",
            "makerdao",
            "eigenlayer",
            "pendle",
            "etherfi",
            "rocketpool",
            "sparkfi"
          ]
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the defi positions by protocol for the wallet address."
        }
      ]
    },
    "getDefiPositionsSummary": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get DeFi positions of a wallet",
      "description": "Get a concise overview of a wallet’s DeFi positions across all protocols.",
      "method": "GET",
      "path": "/wallets/:address/defi/positions",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "example": "0xd100d8b69c5ae23d6aa30c6c3874bf47539b95fd",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns all defi positions for the wallet address."
        }
      ]
    },
    "getWalletActiveChains": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get active chains by wallet address",
      "description": "List the blockchain networks a wallet is active on, including their first and last seen timestamps. Options to query cross-chain using the `chains` parameter.",
      "method": "GET",
      "path": "/wallets/:address/chains",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chains",
          "description": "The chains to query",
          "required": false,
          "type": "array",
          "fields": {
            "type": "string",
            "example": "eth",
            "enum": [
              "eth",
              "0x1",
              "sepolia",
              "0xaa36a7",
              "polygon",
              "0x89",
              "bsc",
              "0x38",
              "bsc testnet",
              "0x61",
              "avalanche",
              "0xa86a",
              "fantom",
              "0xfa",
              "cronos",
              "0x19",
              "arbitrum",
              "0xa4b1",
              "chiliz",
              "0x15b38",
              "chiliz testnet",
              "0x15b32",
              "gnosis",
              "0x64",
              "gnosis testnet",
              "0x27d8",
              "base",
              "0x2105",
              "base sepolia",
              "0x14a34",
              "optimism",
              "0xa",
              "holesky",
              "0x4268",
              "polygon amoy",
              "0x13882",
              "linea",
              "0xe708",
              "moonbeam",
              "0x504",
              "moonriver",
              "0x505",
              "moonbase",
              "0x507",
              "linea sepolia",
              "0xe705",
              "flow",
              "0x2eb",
              "flow-testnet",
              "0x221",
              "ronin",
              "0x7e4",
              "ronin-testnet",
              "0x7e5",
              "lisk",
              "0x46f",
              "lisk-sepolia",
              "0x106a",
              "pulse",
              "0x171"
            ]
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the active chains for the wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "The address of the wallet",
                "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"
              },
              {
                "name": "active_chains",
                "type": "object",
                "fields": [
                  {
                    "name": "chain",
                    "type": "string",
                    "description": "The chain name",
                    "example": "eth"
                  },
                  {
                    "name": "chain_id",
                    "type": "string",
                    "description": "The chain id",
                    "example": "0x1"
                  },
                  {
                    "name": "first_transaction",
                    "required": [
                      "block_number",
                      "block_timestamp"
                    ],
                    "properties": {
                      "block_number": {
                        "type": "string",
                        "description": "The block number",
                        "example": "123456789"
                      },
                      "block_timestamp": {
                        "type": "string",
                        "description": "The block timestamp",
                        "example": "2022-08-23T20:58:31.000Z"
                      },
                      "transaction_hash": {
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                      }
                    }
                  },
                  {
                    "name": "last_transaction",
                    "required": [
                      "block_number",
                      "block_timestamp"
                    ],
                    "properties": {
                      "block_number": {
                        "type": "string",
                        "description": "The block number",
                        "example": "123456789"
                      },
                      "block_timestamp": {
                        "type": "string",
                        "description": "The block timestamp",
                        "example": "2022-08-23T20:58:31.000Z"
                      },
                      "transaction_hash": {
                        "type": "string",
                        "description": "The hash of the transaction",
                        "example": "0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getWalletStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get summary stats by wallet address",
      "description": "Retrieve key statistics for a wallet, such as total transaction count and activity.",
      "method": "GET",
      "path": "/wallets/:address/stats",
      "pathParams": [
        {
          "name": "address",
          "description": "Wallet address",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the stats for the wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "nfts",
                "type": "string",
                "description": "The number of NFTs owned by a wallet",
                "example": "100"
              },
              {
                "name": "collections",
                "type": "string",
                "description": "The number of unique NFT collections owned by a wallet",
                "example": "10"
              },
              {
                "name": "transactions",
                "type": "object",
                "description": "Transaction stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of transactions sent by a wallet",
                    "example": "1000"
                  }
                ]
              },
              {
                "name": "nft_transfers",
                "type": "object",
                "description": "NFT transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of NFT transfers of a wallet",
                    "example": "1000"
                  }
                ]
              },
              {
                "name": "token_transfers",
                "type": "object",
                "description": "Token transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of ERC20 token transfers of a wallet",
                    "example": "1000"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTCollectionStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get summary stats by NFT collection",
      "description": "Get summary stats by NFT collection including total NFT transfers, total tokens and total owners.",
      "method": "GET",
      "path": "/nft/:address/stats",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT collection",
          "required": true,
          "example": "0x306b1ea3ecdf94aB739F1910bbda052Ed4A9f949",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the stats for the nft collection address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total_tokens",
                "type": "string",
                "description": "The number of tokens in the collection",
                "example": "100"
              },
              {
                "name": "owners",
                "type": "object",
                "description": "NFT collection owner stats",
                "fields": [
                  {
                    "name": "current",
                    "type": "string",
                    "description": "The number of current owners of the collection",
                    "example": "1000"
                  }
                ]
              },
              {
                "name": "transfers",
                "type": "object",
                "description": "NFT collection transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of transfers of the collection",
                    "example": "1000"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getNFTFloorPriceByContract": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT floor price by contract",
      "description": "Get floor price for a given collection. Refreshes every 30 minutes.",
      "method": "GET",
      "path": "/nft/:address/floor-price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "base",
            "0x2105",
            "flow",
            "0x2eb",
            "ronin",
            "0x7e4",
            "bsc",
            "0x38"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the conract's floor price",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "The address of the NFT contract",
                "example": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d"
              },
              {
                "name": "floor_price",
                "type": "string",
                "description": "The floor price of the contract",
                "example": "0.2176"
              },
              {
                "name": "floor_price_usd",
                "type": "string",
                "description": "The floor price of the contract in USD",
                "example": "564.24"
              },
              {
                "name": "currency",
                "type": "string",
                "description": "The currency of the floor price",
                "example": "eth"
              },
              {
                "name": "marketplace",
                "description": "The marketplace in which the floor price is present",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the marketplace",
                    "example": "blur"
                  },
                  "logo": {
                    "type": "string",
                    "description": "The logo of the marketplace",
                    "example": "https://cdn.moralis.io/marketplaces/blur.png"
                  }
                }
              },
              {
                "name": "last_updated",
                "type": "string",
                "description": "The timestamp of when the floor price was last updated",
                "example": "2024-08-21T15:59:11.000Z"
              }
            ]
          }
        }
      ]
    },
    "getNFTFloorPriceByToken": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get NFT floor price by token",
      "description": "Get the floor price for a specific NFT, defined by its contract and token ID. Refreshes every 30 minutes.",
      "method": "GET",
      "path": "/nft/:address/:token_id/floor-price",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
          "type": "string"
        },
        {
          "name": "token_id",
          "description": "The token ID of the NFT",
          "required": true,
          "example": "2441",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "base",
            "0x2105",
            "flow",
            "0x2eb",
            "ronin",
            "0x7e4",
            "bsc",
            "0x38"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token's floor price",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "address",
                "type": "string",
                "description": "The address of the NFT contract",
                "example": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d"
              },
              {
                "name": "token_id",
                "type": "string",
                "description": "The token ID of the NFT",
                "example": "2441"
              },
              {
                "name": "floor_price",
                "type": "string",
                "description": "The floor price of the contract",
                "example": "0.2176"
              },
              {
                "name": "floor_price_usd",
                "type": "string",
                "description": "The floor price of the contract in USD",
                "example": "564.24"
              },
              {
                "name": "currency",
                "type": "string",
                "description": "The currency of the floor price",
                "example": "eth"
              },
              {
                "name": "marketplace",
                "description": "The marketplace in which the floor price is present",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the marketplace",
                    "example": "blur"
                  },
                  "logo": {
                    "type": "string",
                    "description": "The logo of the marketplace",
                    "example": "https://cdn.moralis.io/marketplaces/blur.png"
                  }
                }
              },
              {
                "name": "last_updated",
                "type": "string",
                "description": "The timestamp of when the floor price was last updated",
                "example": "2024-08-21T15:59:11.000Z"
              }
            ]
          }
        }
      ]
    },
    "getNFTHistoricalFloorPriceByContract": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get historical NFT floor price by contract",
      "description": "Get timeseries historical floor prices for a given NFT collection. Refreshes every 30 minutes.",
      "method": "GET",
      "path": "/nft/:address/floor-price/historical",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the NFT contract",
          "required": true,
          "example": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "base",
            "0x2105",
            "flow",
            "0x2eb",
            "ronin",
            "0x7e4",
            "bsc",
            "0x38"
          ]
        },
        {
          "name": "interval",
          "description": "The duration to query",
          "required": true,
          "example": "1d",
          "type": "string",
          "enum": [
            "1d",
            "7d",
            "30d",
            "60d",
            "90d",
            "1y",
            "all"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the conract's historical floor price",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "1"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "description": "List of historical contract floor prices at various intervals.",
                "fields": [
                  {
                    "name": "floor_price",
                    "type": "string",
                    "description": "The floor price of the contract",
                    "example": "0.2176"
                  },
                  {
                    "name": "floor_price_usd",
                    "type": "string",
                    "description": "The floor price of the contract in USD",
                    "example": "564.24"
                  },
                  {
                    "name": "currency",
                    "type": "string",
                    "description": "The currency of the floor price",
                    "example": "eth"
                  },
                  {
                    "name": "marketplace",
                    "type": "string",
                    "description": "The marketplace in which the floor price is present",
                    "example": "blur"
                  },
                  {
                    "name": "timestamp",
                    "type": "string",
                    "description": "The timestamp of when the floor price was last updated",
                    "example": "2024-08-21T15:59:11.000Z"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTokenStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get ERC20 token stats",
      "description": "Get the total number of transfers for a given ERC20. For more detailed tokens stats we recommended to use `getTokenAnalytics` or `getMultipleTokenAnalytics`. For pair stats, we recommend to use `getPairStats`.",
      "method": "GET",
      "path": "/erc20/:address/stats",
      "pathParams": [
        {
          "name": "address",
          "description": "The address of the erc20 token",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the stats for the erc20 token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "transfers",
                "type": "object",
                "description": "ERC20 Token transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of transfers of the token",
                    "example": "1000"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getBlockStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get summary stats by block",
      "description": "Get the stats for a block",
      "method": "GET",
      "path": "/block/:block_number_or_hash/stats",
      "pathParams": [
        {
          "name": "block_number_or_hash",
          "description": "The block number or hash",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the stats for the block.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "transactions",
                "type": "object",
                "description": "Transaction stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of transactions made in a block",
                    "example": "7"
                  }
                ]
              },
              {
                "name": "nft_transfers",
                "type": "object",
                "description": "NFT transfer stats",
                "fields": [
                  {
                    "name": "total",
                    "type": "string",
                    "description": "The number of NFT transfers made in a block",
                    "example": "0"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getFilteredTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Returns a list of tokens that match the specified filters and criteria",
      "description": "Fetch a list of tokens across multiple chains, filtered and ranked by dynamic on-chain metrics like volume, price change, liquidity, holder composition, and more. Supports advanced filters (e.g. “top 10 whales hold <40%”), category-based inclusion/exclusion (e.g. “exclude stablecoins”), and time-based analytics. Ideal for token discovery, investor research, risk analysis, and portfolio tools. Each token returned includes detailed trading metrics as well as on-chain and off-chain metadata.",
      "method": "POST",
      "path": "/discovery/tokens",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "type": "json"
      },
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details"
        }
      ]
    },
    "getRisingLiquidityTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with rising liquidity",
      "description": "Identify tokens experiencing increasing liquidity on their respective blockchains.",
      "method": "GET",
      "path": "/discovery/tokens/rising-liquidity",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "one_month_liquidity_change_usd",
          "description": "The minimum one month liquidity change in usd of a token",
          "required": false,
          "example": 500000,
          "type": "number"
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 100000000,
          "type": "number"
        },
        {
          "name": "twitter_followers",
          "description": "The minimum twitter followers of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 70,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 0,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getBuyingPressureTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with buying pressure",
      "description": "List tokens showing strong buying activity based on transaction data.",
      "method": "GET",
      "path": "/discovery/tokens/buying-pressure",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "one_month_net_volume_change_usd",
          "description": "The minimum one month net volume change in usd of a token",
          "required": false,
          "example": 1000000,
          "type": "number"
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 100000000,
          "type": "number"
        },
        {
          "name": "twitter_followers",
          "description": "The minimum twitter followers of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 70,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 0,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getSolidPerformersTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with solid performance",
      "description": "Find tokens with consistent performance based on price and volume metrics.",
      "method": "GET",
      "path": "/discovery/tokens/solid-performers",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "one_month_net_volume_change_usd",
          "description": "The minimum one month net volume change in usd of a token",
          "required": false,
          "example": 100000,
          "type": "number"
        },
        {
          "name": "one_week_net_volume_change_usd",
          "description": "The minimum one week net volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "one_day_net_volume_change_usd",
          "description": "The minimum one day net volume change in usd of a token",
          "required": false,
          "example": 0,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 80,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 0,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getExperiencedBuyersTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with experienced buyers",
      "description": "Identify tokens being purchased by experienced or high-volume traders.",
      "method": "GET",
      "path": "/discovery/tokens/experienced-buyers",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "one_week_experienced_net_buyers_change",
          "description": "The minimum one week experienced buyers change of a token",
          "required": false,
          "example": 150,
          "type": "number"
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 10000000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 80,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getRiskyBetsTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with risky bets",
      "description": "List tokens with high-risk trading activity based on volatility or other factors.",
      "method": "GET",
      "path": "/discovery/tokens/risky-bets",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "max_market_cap",
          "description": "The maximum market cap in usd of a token",
          "required": false,
          "example": 10000000,
          "type": "number"
        },
        {
          "name": "one_week_holders_change",
          "description": "The minimum one week holders change of a token",
          "required": false,
          "example": 25,
          "type": "number"
        },
        {
          "name": "one_week_net_volume_change_usd",
          "description": "The minimum one week net volume change in usd of a token",
          "required": false,
          "example": 500,
          "type": "number"
        },
        {
          "name": "one_month_volume_change_usd",
          "description": "The minimum one month volume change in usd of a token",
          "required": false,
          "example": 10000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 70,
          "type": "number"
        },
        {
          "name": "one_month_price_percent_change_usd",
          "description": "The minimum one month price percent change of a token",
          "required": false,
          "example": 0,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getBlueChipTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with blue chip",
      "description": "Fetch established, high-value tokens considered stable investments.",
      "method": "GET",
      "path": "/discovery/tokens/blue-chip",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 150000000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 80,
          "type": "number"
        },
        {
          "name": "min_token_age_in_days",
          "description": "The minimum age of token in days",
          "required": false,
          "example": 180,
          "type": "number"
        },
        {
          "name": "time_frame",
          "description": "The time frame used for price percent change ordering in response",
          "required": false,
          "example": "1d",
          "type": "string",
          "enum": [
            "1h",
            "1d",
            "1w",
            "1M"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getTopGainersTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with top gainers",
      "description": "Identify tokens with the highest price increases over a period.",
      "method": "GET",
      "path": "/discovery/tokens/top-gainers",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 50000000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 80,
          "type": "number"
        },
        {
          "name": "time_frame",
          "description": "The time frame used for price percent change ordering in response",
          "required": false,
          "example": "1d",
          "type": "string",
          "enum": [
            "1h",
            "1d",
            "1w",
            "1M"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getTopLosersTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get tokens with top losers",
      "description": "List tokens with the largest price decreases over a period.",
      "method": "GET",
      "path": "/discovery/tokens/top-losers",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 50000000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 80,
          "type": "number"
        },
        {
          "name": "time_frame",
          "description": "The time frame used for price percent change ordering in response",
          "required": false,
          "example": "1d",
          "type": "string",
          "enum": [
            "1h",
            "1d",
            "1w",
            "1M"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getTrendingTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get trending tokens",
      "description": "Discover tokens gaining popularity based on trading and social metrics.",
      "method": "GET",
      "path": "/discovery/tokens/trending",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "min_market_cap",
          "description": "The minimum market cap in usd of a token",
          "required": false,
          "example": 50000000,
          "type": "number"
        },
        {
          "name": "security_score",
          "description": "The minimum security score of a token",
          "required": false,
          "example": 80,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "array"
          }
        }
      ]
    },
    "getDiscoveryToken": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get token details",
      "description": "Retrieve comprehensive details for a specific token, including metadata and stats. For more detailed tokens stats we recommended to use `getTokenAnalytics` or `getMultipleTokenAnalytics`. For pair stats, we recommend to use `getPairStats`.",
      "method": "GET",
      "path": "/discovery/token",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": true,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "token_address",
          "description": "The address of the token",
          "required": true,
          "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the token details",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "chain_id",
                "type": "string",
                "description": "The chain id of the token",
                "example": "0x1"
              },
              {
                "name": "token_address",
                "type": "string",
                "description": "The address of the token",
                "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
              },
              {
                "name": "token_name",
                "type": "string",
                "description": "The name of the token contract",
                "example": "Maker"
              },
              {
                "name": "token_symbol",
                "type": "string",
                "description": "The symbol of the token",
                "example": "MKR"
              },
              {
                "name": "token_logo",
                "type": "string",
                "description": "The logo of the token"
              },
              {
                "name": "block_number",
                "type": "number",
                "description": "The block number of token when it was minted"
              },
              {
                "name": "block_timestamp",
                "type": "string",
                "description": "The block timestamp of token when it was minted"
              },
              {
                "name": "links",
                "type": "object",
                "required": [
                  "bitbucket",
                  "discord",
                  "facebook",
                  "github",
                  "instagram",
                  "linkedin",
                  "medium",
                  "reddit",
                  "telegram",
                  "tiktok",
                  "twitter",
                  "website",
                  "youtube"
                ],
                "properties": {
                  "bitbucket": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "discord": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "facebook": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "github": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "instagram": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "linkedin": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "medium": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "reddit": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "telegram": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "tiktok": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "twitter": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "website": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  },
                  "youtube": {
                    "type": "string",
                    "description": "The link of the token on the platform"
                  }
                }
              },
              {
                "name": "rating",
                "type": "number",
                "description": "The rating of token by moralis money community members"
              },
              {
                "name": "total_number_of_rating",
                "type": "number",
                "description": "The total number of moralis money community members that have rated the token"
              },
              {
                "name": "total_liquidity_locked_in_percent",
                "type": "number",
                "description": "The total amount of liquidity that is locked"
              },
              {
                "name": "total_supply_locked_in_percent",
                "type": "number",
                "description": "The total amount of supply that is locked"
              },
              {
                "name": "price_usd",
                "type": "number",
                "description": "The price in USD for the token"
              },
              {
                "name": "token_age_in_days",
                "type": "number",
                "description": "The number of days since the token was created"
              },
              {
                "name": "on_chain_strength_index",
                "type": "number",
                "description": "The score of coin determined by various on chain metrics"
              },
              {
                "name": "security_score",
                "type": "number",
                "description": "The security score (0-100) given to the token based various parameters",
                "example": 88
              },
              {
                "name": "market_cap",
                "type": "number",
                "description": "The market cap in USD",
                "example": 1351767630.85
              },
              {
                "name": "fully_diluted_valuation",
                "type": "number",
                "description": "The fully diluted valuation in USD",
                "example": 1363915420.28
              },
              {
                "name": "twitter_followers",
                "type": "number",
                "description": "The number of followers of the token on twitter",
                "example": 255217
              },
              {
                "name": "holders_change",
                "type": "object",
                "required": [
                  "1h",
                  "1d",
                  "1w",
                  "1M"
                ],
                "properties": {
                  "1h": {
                    "type": "number",
                    "description": "The 1 hour change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1d": {
                    "type": "number",
                    "description": "The 1 day change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1w": {
                    "type": "number",
                    "description": "The 1 week change of the token",
                    "example": 162,
                    "nullable": true
                  },
                  "1M": {
                    "type": "number",
                    "description": "The 1 month change of the token",
                    "example": 162,
                    "nullable": true
                  }
                }
              },
              {
                "name": "liquidity_change_usd",
                "type": "object",
                "required": [
                  "1h",
                  "1d",
                  "1w",
                  "1M"
                ],
                "properties": {
                  "1h": {
                    "type": "number",
                    "description": "The 1 hour change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1d": {
                    "type": "number",
                    "description": "The 1 day change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1w": {
                    "type": "number",
                    "description": "The 1 week change of the token",
                    "example": 162,
                    "nullable": true
                  },
                  "1M": {
                    "type": "number",
                    "description": "The 1 month change of the token",
                    "example": 162,
                    "nullable": true
                  }
                }
              },
              {
                "name": "experienced_net_buyers_change",
                "type": "object",
                "required": [
                  "1h",
                  "1d",
                  "1w",
                  "1M"
                ],
                "properties": {
                  "1h": {
                    "type": "number",
                    "description": "The 1 hour change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1d": {
                    "type": "number",
                    "description": "The 1 day change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1w": {
                    "type": "number",
                    "description": "The 1 week change of the token",
                    "example": 162,
                    "nullable": true
                  },
                  "1M": {
                    "type": "number",
                    "description": "The 1 month change of the token",
                    "example": 162,
                    "nullable": true
                  }
                }
              },
              {
                "name": "volume_change_usd",
                "type": "object",
                "required": [
                  "1h",
                  "1d",
                  "1w",
                  "1M"
                ],
                "properties": {
                  "1h": {
                    "type": "number",
                    "description": "The 1 hour change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1d": {
                    "type": "number",
                    "description": "The 1 day change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1w": {
                    "type": "number",
                    "description": "The 1 week change of the token",
                    "example": 162,
                    "nullable": true
                  },
                  "1M": {
                    "type": "number",
                    "description": "The 1 month change of the token",
                    "example": 162,
                    "nullable": true
                  }
                }
              },
              {
                "name": "net_volume_change_usd",
                "type": "object",
                "required": [
                  "1h",
                  "1d",
                  "1w",
                  "1M"
                ],
                "properties": {
                  "1h": {
                    "type": "number",
                    "description": "The 1 hour change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1d": {
                    "type": "number",
                    "description": "The 1 day change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1w": {
                    "type": "number",
                    "description": "The 1 week change of the token",
                    "example": 162,
                    "nullable": true
                  },
                  "1M": {
                    "type": "number",
                    "description": "The 1 month change of the token",
                    "example": 162,
                    "nullable": true
                  }
                }
              },
              {
                "name": "price_percent_change_usd",
                "type": "object",
                "required": [
                  "1h",
                  "1d",
                  "1w",
                  "1M"
                ],
                "properties": {
                  "1h": {
                    "type": "number",
                    "description": "The 1 hour change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1d": {
                    "type": "number",
                    "description": "The 1 day change of the token",
                    "example": 14,
                    "nullable": true
                  },
                  "1w": {
                    "type": "number",
                    "description": "The 1 week change of the token",
                    "example": 162,
                    "nullable": true
                  },
                  "1M": {
                    "type": "number",
                    "description": "The 1 month change of the token",
                    "example": 162,
                    "nullable": true
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "getWalletProfitabilitySummary": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get profit and loss summary by wallet address",
      "description": "Get a profit and loss summary for a given wallet, over a specified timeframe (`days`).",
      "method": "GET",
      "path": "/wallets/:address/profitability/summary",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address for which profitability summary is to be retrieved.",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "days",
          "description": "Timeframe in days for the profitability summary. Options include 'all', '7', '30', '60', '90' default is 'all'.",
          "required": false,
          "type": "string"
        },
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response with the profitability summary."
        }
      ]
    },
    "getWalletProfitability": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get detailed profit and loss by wallet address",
      "description": "Get a detailed profit and loss breakdown by token for a given wallet, over a specified timeframe (`days`). Optionally filter by `token_addresses` for specific tokens.",
      "method": "GET",
      "path": "/wallets/:address/profitability",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address for which profitability is to be retrieved.",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "days",
          "description": "Timeframe in days for which profitability is calculated, Options include 'all', '7', '30', '60', '90' default is 'all'.",
          "required": false,
          "type": "string"
        },
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        },
        {
          "name": "token_addresses",
          "description": "The token addresses list to filter the result with",
          "required": false,
          "type": "array",
          "field": {
            "type": "string"
          }
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response with profitability data.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "object",
                "description": "List of tokens traded with their respective profitability data.",
                "fields": [
                  {
                    "name": "token_address",
                    "type": "string",
                    "description": "The address of the traded token."
                  },
                  {
                    "name": "avg_buy_price_usd",
                    "type": "string",
                    "description": "Average buy price in USD."
                  },
                  {
                    "name": "avg_sell_price_usd",
                    "type": "string",
                    "description": "Average sell price in USD."
                  },
                  {
                    "name": "total_usd_invested",
                    "type": "string",
                    "description": "Total USD invested."
                  },
                  {
                    "name": "total_tokens_sold",
                    "type": "string",
                    "description": "Total tokens sold."
                  },
                  {
                    "name": "total_tokens_bought",
                    "type": "string",
                    "description": "Total tokens bought."
                  },
                  {
                    "name": "total_sold_usd",
                    "type": "string",
                    "description": "Total USD received from selling tokens."
                  },
                  {
                    "name": "avg_cost_of_quantity_sold",
                    "type": "string",
                    "description": "Average cost of sold quantity."
                  },
                  {
                    "name": "count_of_trades",
                    "type": "number",
                    "description": "Count of trades for the token."
                  },
                  {
                    "name": "realized_profit_usd",
                    "type": "string",
                    "description": "Realized profit in USD for the token."
                  },
                  {
                    "name": "realized_profit_percentage",
                    "type": "number",
                    "description": "Realized profit percentage for the token."
                  },
                  {
                    "name": "total_buys",
                    "type": "number",
                    "description": "Total number of buys."
                  },
                  {
                    "name": "total_sells",
                    "type": "number",
                    "description": "Total number of sells."
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the token."
                  },
                  {
                    "name": "symbol",
                    "type": "string",
                    "description": "Symbol of the token."
                  },
                  {
                    "name": "decimals",
                    "type": "string",
                    "description": "Decimals of the token."
                  },
                  {
                    "name": "logo",
                    "type": "string",
                    "description": "Logo URL of the token."
                  },
                  {
                    "name": "possible_spam",
                    "type": "boolean",
                    "description": "Indicates whether the token is possibly spam."
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTopProfitableWalletPerToken": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get top traders for a given ERC20 token",
      "description": "List the most profitable wallets that have traded a specific ERC20 token.",
      "method": "GET",
      "path": "/erc20/:address/top-gainers",
      "pathParams": [
        {
          "name": "address",
          "description": "The ERC20 token address.",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "days",
          "description": "Timeframe in days for which profitability is calculated, Options include 'all', '7', '30' default is 'all'.",
          "required": false,
          "type": "string"
        },
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "mainnet",
            "0x1",
            "matic",
            "0x89",
            "polygon",
            "bsc",
            "binance",
            "0x38",
            "fantom",
            "ftm",
            "0xfa",
            "arbitrum",
            "0xa4b1",
            "optimism",
            "0xa",
            "base",
            "0x2105",
            "linea",
            "0xe708",
            "0x7e4",
            "ronin"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response with top profitable wallets.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "name",
                "type": "string",
                "description": "The name of the token contract",
                "example": "Kylin Network"
              },
              {
                "name": "symbol",
                "type": "string",
                "description": "The symbol of the NFT contract",
                "example": "KYL"
              },
              {
                "name": "decimals",
                "type": "number",
                "description": "The number of decimals on the token",
                "example": 18
              },
              {
                "name": "logo",
                "type": "string",
                "description": "The logo of the token",
                "example": "https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"
              },
              {
                "name": "possible_spam",
                "type": "boolean",
                "description": "Indicates if a contract is possibly a spam contract",
                "example": "false"
              },
              {
                "name": "result",
                "type": "object",
                "description": "List of top profitable wallets per token.",
                "fields": [
                  {
                    "name": "avg_buy_price_usd",
                    "type": "string",
                    "description": "Average buy price in USD."
                  },
                  {
                    "name": "avg_cost_of_quantity_sold",
                    "type": "string",
                    "description": "Average cost of quantity sold."
                  },
                  {
                    "name": "avg_sell_price_usd",
                    "type": "string",
                    "description": "Average sell price in USD."
                  },
                  {
                    "name": "count_of_trades",
                    "type": "number",
                    "description": "Total number of trades."
                  },
                  {
                    "name": "realized_profit_percentage",
                    "type": "number",
                    "description": "Realized profit as a percentage."
                  },
                  {
                    "name": "realized_profit_usd",
                    "type": "string",
                    "description": "Realized profit in USD."
                  },
                  {
                    "name": "total_sold_usd",
                    "type": "string",
                    "description": "Total amount in USD for sold tokens."
                  },
                  {
                    "name": "total_tokens_bought",
                    "type": "string",
                    "description": "Total number of tokens bought."
                  },
                  {
                    "name": "total_tokens_sold",
                    "type": "string",
                    "description": "Total number of tokens sold."
                  },
                  {
                    "name": "total_usd_invested",
                    "type": "string",
                    "description": "Total amount of USD invested."
                  },
                  {
                    "name": "address",
                    "type": "string",
                    "description": "The wallet address."
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "searchTokens": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Search for tokens based on contract address, pair address, token name or token symbol.",
      "description": "Search for tokens using their contract address, pair address, name, or symbol. Cross-chain by default with support to filter by `chains`. Additional options to `sortBy` various metrics, such as market cap, liquidity or volume.",
      "method": "GET",
      "path": "/tokens/search",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chains",
          "description": "The chains to query",
          "required": false,
          "type": "string"
        },
        {
          "name": "query",
          "description": "The query to search",
          "required": false,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "isVerifiedContract",
          "description": "True to include only verified contracts",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "sortBy",
          "description": "Sort by volume1hDesc, volume24hDesc, liquidityDesc, marketCapDesc",
          "required": false,
          "example": "volume1hDesc",
          "type": "string"
        },
        {
          "name": "boostVerifiedContracts",
          "description": "True to boost verified contracts",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the search results"
        }
      ]
    },
    "searchEntities": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Search Entities, Organizations or Wallets",
      "description": "Find entities, organizations, addresses or wallets linked to blockchain addresses. Results are categorised into 3 arrays: entities, addresses, categories.",
      "method": "GET",
      "path": "/entities/search",
      "pathParams": [],
      "queryParams": [
        {
          "name": "query",
          "description": "The search query",
          "required": true,
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the search results.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "1"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "entities",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/entityModel"
                    }
                  },
                  {
                    "name": "addresses",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/addressModelWithEntity"
                    }
                  },
                  {
                    "name": "categories",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/basicModel"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getEntity": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Entity Details By Id",
      "description": "Retrieve details for a specific entity using its unique ID. Returns name, logo, description, external links and related addresses.",
      "method": "GET",
      "path": "/entities/:entityId",
      "pathParams": [
        {
          "name": "entityId",
          "description": "",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Returns the entity.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "addresses",
                "type": "object",
                "fields": [
                  {
                    "name": "additional_labels",
                    "type": "array",
                    "field": {
                      "type": "string",
                      "example": [
                        "Uniswap",
                        "Uniswap V3"
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getEntityCategories": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Entity Categories",
      "description": "List available categories for blockchain entities.",
      "method": "GET",
      "path": "/entities/categories",
      "pathParams": [],
      "queryParams": [
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the entity categories.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "1"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "total_entities",
                    "type": "number",
                    "description": "The total number of entities",
                    "example": 100
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getEntitiesByCategory": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get Entities By Category",
      "description": "Fetch entities belonging to a specific category. Each entity returns name, logo, description, external links, total addresses and more.",
      "method": "GET",
      "path": "/entities/categories/:categoryId",
      "pathParams": [
        {
          "name": "categoryId",
          "description": "The category Id",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the entities belonging to the category.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "1"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "total_addresses",
                    "type": "number",
                    "description": "The total number of addresses",
                    "example": 100
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getPairCandlesticks": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get OHLCV by pair address",
      "description": "Retrieve OHLCV (Open, High, Low, Close, Volume) candlestick data for a token pair.",
      "method": "GET",
      "path": "/pairs/:address/ohlcv",
      "pathParams": [
        {
          "name": "address",
          "description": "The pair address",
          "required": true,
          "example": "0xa43fe16908251ee70ef74718545e4fe6c5ccec9f",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "timeframe",
          "description": "The timeframe",
          "required": true,
          "example": "1h",
          "type": "string"
        },
        {
          "name": "currency",
          "description": "The currency",
          "required": true,
          "example": "usd",
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The starting date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "required": true,
          "example": "2025-01-01T10:00:00.000",
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The ending date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'toBlock' or 'toDate'\n* If 'toDate' and 'toBlock' are provided, 'toBlock' will be used.\n",
          "required": true,
          "example": "2025-01-02T10:00:00.000",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The number of results to return",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the OHLCV data.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "pairAddress",
                "type": "string",
                "description": "The pair address",
                "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640"
              },
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address",
                "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640"
              },
              {
                "name": "timeframe",
                "type": "string",
                "description": "The timeframe",
                "example": "30min"
              },
              {
                "name": "currency",
                "type": "string",
                "description": "The currency",
                "example": "usd"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "timestamp",
                    "type": "string"
                  },
                  {
                    "name": "open",
                    "type": "number"
                  },
                  {
                    "name": "high",
                    "type": "number"
                  },
                  {
                    "name": "low",
                    "type": "number"
                  },
                  {
                    "name": "close",
                    "type": "number"
                  },
                  {
                    "name": "volume",
                    "type": "number"
                  },
                  {
                    "name": "trades",
                    "type": "number"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getPairStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get stats by pair address",
      "description": "Access key statistics for a token pair, such as price, buyers, sellers, liquidity, volume and more.",
      "method": "GET",
      "path": "/pairs/:address/stats",
      "pathParams": [
        {
          "name": "address",
          "description": "The pair address",
          "required": true,
          "example": "0xa43fe16908251ee70ef74718545e4fe6c5ccec9f",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the pair stats.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address",
                "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640"
              },
              {
                "name": "tokenName",
                "type": "string",
                "description": "The token name",
                "example": "Wrapped Ether"
              },
              {
                "name": "tokenSymbol",
                "type": "string",
                "description": "The token symbol",
                "example": "WETH"
              },
              {
                "name": "tokenLogo",
                "type": "string",
                "description": "The token image",
                "example": "https://cdn.moralis.io/coins/images/2518/large/weth.png?1595348880"
              },
              {
                "name": "pairCreated",
                "type": "string",
                "description": "The time when the pair was created",
                "example": "2021-04-02T10:07:54.000Z"
              },
              {
                "name": "pairLabel",
                "type": "string",
                "description": "The pair label",
                "example": "WETH/PEPE"
              },
              {
                "name": "pairAddress",
                "type": "string",
                "description": "The pair address",
                "example": "0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640"
              },
              {
                "name": "exchange",
                "type": "string",
                "description": "The exchange name",
                "example": "Uniswap v2"
              },
              {
                "name": "exchangeAddress",
                "type": "string",
                "description": "The exchange address",
                "example": "0x101cc05f4a51c0319f570d5e146a8c625198e222"
              },
              {
                "name": "exchangeLogo",
                "type": "string",
                "description": "The exchange logo",
                "example": "uniswap.png"
              },
              {
                "name": "exchangeUrl",
                "type": "string",
                "description": "The exchange url",
                "example": "app.uniswap.com"
              },
              {
                "name": "currentUsdPrice",
                "type": "string",
                "description": "The current usd price",
                "example": "0.00000194"
              },
              {
                "name": "currentNativePrice",
                "type": "string",
                "description": "The current native price",
                "example": "0.0000000042"
              },
              {
                "name": "totalLiquidityUsd",
                "type": "string",
                "description": "The total liquidity in usd",
                "example": "43345522"
              },
              {
                "name": "pricePercentChange",
                "type": "object",
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ],
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true
                  }
                }
              },
              {
                "name": "liquidityPercentChange",
                "type": "object",
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ],
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true
                  }
                }
              },
              {
                "name": "buys",
                "type": "object",
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ],
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true
                  }
                }
              },
              {
                "name": "sells",
                "type": "object",
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ],
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true
                  }
                }
              },
              {
                "name": "totalVolume",
                "type": "object",
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ],
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true
                  }
                }
              },
              {
                "name": "buyVolume",
                "type": "object",
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ],
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true
                  }
                }
              },
              {
                "name": "sellVolume",
                "type": "object",
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ],
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true
                  }
                }
              },
              {
                "name": "buyers",
                "type": "object",
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ],
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true
                  }
                }
              },
              {
                "name": "sellers",
                "type": "object",
                "required": [
                  "5min",
                  "1h",
                  "4h",
                  "24h"
                ],
                "properties": {
                  "5min": {
                    "type": "number",
                    "nullable": true
                  },
                  "1h": {
                    "type": "number",
                    "nullable": true
                  },
                  "4h": {
                    "type": "number",
                    "nullable": true
                  },
                  "24h": {
                    "type": "number",
                    "nullable": true
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "getTokenPairs": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get token pairs by address",
      "description": "List supported trading pairs for a specific ERC20 token. Each pair returned includes price, liquidity, volume and more.",
      "method": "GET",
      "path": "/erc20/:token_address/pairs",
      "pathParams": [
        {
          "name": "token_address",
          "description": "The address of the token",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": true,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "limit",
          "description": "The number of results to return",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the supported pairs for the token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "pairs",
                "type": "object",
                "fields": [
                  {
                    "name": "exchange_address",
                    "type": "string"
                  },
                  {
                    "name": "exchange_name",
                    "type": "string"
                  },
                  {
                    "name": "exchange_logo",
                    "type": "string"
                  },
                  {
                    "name": "pair_label",
                    "type": "string"
                  },
                  {
                    "name": "pair_address",
                    "type": "string"
                  },
                  {
                    "name": "usd_price",
                    "type": "number"
                  },
                  {
                    "name": "usd_price_24hr",
                    "type": "number"
                  },
                  {
                    "name": "usd_price_24hr_percent_change",
                    "type": "number"
                  },
                  {
                    "name": "usd_price_24hr_usd_change",
                    "type": "number"
                  },
                  {
                    "name": "liquidity_usd",
                    "type": "number"
                  },
                  {
                    "name": "inactive_pair",
                    "type": "boolean",
                    "description": "Pair without 24h volume are set as inactive"
                  },
                  {
                    "name": "base_token",
                    "type": "string"
                  },
                  {
                    "name": "quote_token",
                    "type": "string"
                  },
                  {
                    "name": "volume_24h_native",
                    "type": "number"
                  },
                  {
                    "name": "volume_24h_usd",
                    "type": "number"
                  },
                  {
                    "name": "pair",
                    "type": "object",
                    "fields": [
                      {
                        "name": "token_address",
                        "type": "string",
                        "description": "The token address"
                      },
                      {
                        "name": "token_name",
                        "type": "string",
                        "description": "The token name"
                      },
                      {
                        "name": "token_symbol",
                        "type": "string",
                        "description": "The token symbol"
                      },
                      {
                        "name": "token_logo",
                        "type": "string",
                        "description": "The token logo"
                      },
                      {
                        "name": "token_decimals",
                        "type": "string",
                        "description": "The token decimals"
                      },
                      {
                        "name": "pair_token_type",
                        "type": "string"
                      },
                      {
                        "name": "liquidity_usd",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "50"
              },
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              }
            ]
          }
        }
      ]
    },
    "getAggregatedTokenPairStats": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get aggregated token pair statistics by address",
      "description": "Summarize statistics across all supported pairs for a token. We recommended to use `getTokenAnalytics` or `getMultipleTokenAnalytics` for more accurate results.",
      "method": "GET",
      "path": "/erc20/:token_address/pairs/stats",
      "pathParams": [
        {
          "name": "token_address",
          "description": "The address of the token",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": true,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the statistics for supported pairs of the token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total_liquidity_usd",
                "type": "string"
              },
              {
                "name": "total_active_pairs",
                "type": "string"
              },
              {
                "name": "total_active_dexes",
                "type": "string"
              }
            ]
          }
        }
      ]
    },
    "getNewTokensByExchange": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get new tokens by exchange",
      "description": "List newly added tokens on a specific exchange. Currently only supports tama.meme on Ronin.",
      "method": "GET",
      "path": "/erc20/exchange/:exchangeName/new",
      "pathParams": [
        {
          "name": "exchangeName",
          "description": "The name of the exchange",
          "required": true,
          "example": "tama.meme",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": true,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "limit",
          "description": "The maximum number of items to return",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor to use for pagination",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the new tokens for the specified exchange.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total",
                "type": "number",
                "description": "The total number of matches for this query",
                "example": 10
              },
              {
                "name": "page",
                "type": "number",
                "description": "The page of the current result",
                "example": 1
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to use for the next page",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "properties": {
                    "tokenAddress": {
                      "type": "string",
                      "description": "The address of the token",
                      "example": "0x6b175474e89094c44da98b954eedeac495271d0f"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "description": "The name of the token",
                      "example": "Test Token"
                    },
                    "symbol": {
                      "type": "string",
                      "nullable": true,
                      "description": "The symbol of the token",
                      "example": "TEST"
                    },
                    "logo": {
                      "type": "string",
                      "nullable": true,
                      "description": "The logo URL of the token",
                      "example": "https://example.com/logo.png"
                    },
                    "decimals": {
                      "type": "integer",
                      "nullable": true,
                      "description": "The number of decimals of the token",
                      "example": 18
                    },
                    "priceNative": {
                      "type": "string",
                      "nullable": true,
                      "description": "The price in the native currency",
                      "example": "0.5"
                    },
                    "priceUsd": {
                      "type": "string",
                      "nullable": true,
                      "description": "The price in USD",
                      "example": "2.0"
                    },
                    "liquidity": {
                      "type": "string",
                      "nullable": true,
                      "description": "The liquidity in USD",
                      "example": "500000"
                    },
                    "fullyDilutedValuation": {
                      "type": "string",
                      "nullable": true,
                      "description": "The fully diluted valuation in USD",
                      "example": "2000000"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The timestamp when the token was created",
                      "example": "2023-01-20T09:39:55.818Z"
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "getBondingTokensByExchange": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get bonding tokens by exchange",
      "description": "Identify tokens in the bonding phase on a specific exchange. Currently only supports tama.meme on Ronin.",
      "method": "GET",
      "path": "/erc20/exchange/:exchangeName/bonding",
      "pathParams": [
        {
          "name": "exchangeName",
          "description": "The name of the exchange",
          "required": true,
          "example": "tama.meme",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": true,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "limit",
          "description": "The maximum number of items to return",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor to use for pagination",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the bonding tokens for the specified exchange.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total",
                "type": "number",
                "description": "The total number of matches for this query",
                "example": 10
              },
              {
                "name": "page",
                "type": "number",
                "description": "The page of the current result",
                "example": 1
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to use for the next page",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "properties": {
                    "tokenAddress": {
                      "type": "string",
                      "description": "The address of the token",
                      "example": "0x6b175474e89094c44da98b954eedeac495271d0f"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "description": "The name of the token",
                      "example": "Test Token"
                    },
                    "symbol": {
                      "type": "string",
                      "nullable": true,
                      "description": "The symbol of the token",
                      "example": "TEST"
                    },
                    "logo": {
                      "type": "string",
                      "nullable": true,
                      "description": "The logo URL of the token",
                      "example": "https://example.com/logo.png"
                    },
                    "decimals": {
                      "type": "integer",
                      "nullable": true,
                      "description": "The number of decimals of the token",
                      "example": 18
                    },
                    "priceNative": {
                      "type": "string",
                      "nullable": true,
                      "description": "The price in the native currency",
                      "example": "0.5"
                    },
                    "priceUsd": {
                      "type": "string",
                      "nullable": true,
                      "description": "The price in USD",
                      "example": "2.0"
                    },
                    "liquidity": {
                      "type": "string",
                      "nullable": true,
                      "description": "The liquidity in USD",
                      "example": "500000"
                    },
                    "fullyDilutedValuation": {
                      "type": "string",
                      "nullable": true,
                      "description": "The fully diluted valuation in USD",
                      "example": "2000000"
                    },
                    "bondingCurveProgress": {
                      "type": "number",
                      "description": "The bonding curve progress as a percentage",
                      "example": 50
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "getGraduatedTokensByExchange": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get graduated tokens by exchange",
      "description": "List tokens that have completed bonding on a specific exchange. Currently only supports tama.meme on Ronin.",
      "method": "GET",
      "path": "/erc20/exchange/:exchangeName/graduated",
      "pathParams": [
        {
          "name": "exchangeName",
          "description": "The name of the exchange",
          "required": true,
          "example": "tama.meme",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": true,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "limit",
          "description": "The maximum number of items to return",
          "required": false,
          "type": "number"
        },
        {
          "name": "cursor",
          "description": "The cursor to use for pagination",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the graduated tokens for the specified exchange.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "total",
                "type": "number",
                "description": "The total number of matches for this query",
                "example": 10
              },
              {
                "name": "page",
                "type": "number",
                "description": "The page of the current result",
                "example": 1
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": 100
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to use for the next page",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
              },
              {
                "name": "result",
                "type": "array",
                "field": {
                  "type": "object",
                  "properties": {
                    "tokenAddress": {
                      "type": "string",
                      "description": "The address of the token",
                      "example": "0x6b175474e89094c44da98b954eedeac495271d0f"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "description": "The name of the token",
                      "example": "Test Token"
                    },
                    "symbol": {
                      "type": "string",
                      "nullable": true,
                      "description": "The symbol of the token",
                      "example": "TEST"
                    },
                    "logo": {
                      "type": "string",
                      "nullable": true,
                      "description": "The logo URL of the token",
                      "example": "https://example.com/logo.png"
                    },
                    "decimals": {
                      "type": "integer",
                      "nullable": true,
                      "description": "The number of decimals of the token",
                      "example": 18
                    },
                    "priceNative": {
                      "type": "string",
                      "nullable": true,
                      "description": "The price in the native currency",
                      "example": "0.5"
                    },
                    "priceUsd": {
                      "type": "string",
                      "nullable": true,
                      "description": "The price in USD",
                      "example": "2.0"
                    },
                    "liquidity": {
                      "type": "string",
                      "nullable": true,
                      "description": "The liquidity in USD",
                      "example": "500000"
                    },
                    "fullyDilutedValuation": {
                      "type": "string",
                      "nullable": true,
                      "description": "The fully diluted valuation in USD",
                      "example": "2000000"
                    },
                    "graduatedAt": {
                      "type": "string",
                      "description": "The timestamp when the token graduated in ISO format",
                      "example": "2023-01-15T12:30:45.000Z"
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "getTokenBondingStatus": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get the token bonding status",
      "description": "Check the bonding status of a token on an exchange. Currently only supports tama.meme on Ronin.",
      "method": "GET",
      "path": "/erc20/:tokenAddress/bondingStatus",
      "pathParams": [
        {
          "name": "tokenAddress",
          "description": "The address of the token",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": true,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns the bonding status of the token.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "tokenAddress",
                "type": "string",
                "example": "0x6b175474e89094c44da98b954eedeac495271d0f"
              },
              {
                "name": "exchangeName",
                "type": "string",
                "example": "tama.meme"
              },
              {
                "name": "bondingProgress",
                "type": "number",
                "example": 99.99
              },
              {
                "name": "graduatedAt",
                "type": "string",
                "example": "2022-01-20T09:39:55.818Z"
              }
            ]
          }
        }
      ]
    },
    "getSwapsByWalletAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get swap transactions by wallet address",
      "description": "List all swap transactions (buy/sell) for a specific wallet. Optionally filter by `tokenAddress` for specific token swaps.",
      "method": "GET",
      "path": "/wallets/:address/swaps",
      "pathParams": [
        {
          "name": "address",
          "description": "The wallet address token-transactions are to be retrieved for.",
          "required": true,
          "example": "0xcB1C1FdE09f811B294172696404e88E658659905",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "tokenAddress",
          "description": "The token address to get transaction for (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "fromBlock",
          "description": "The minimum block number from which to get the token transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "toBlock",
          "description": "The block number to get the token transactions from",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The start date from which to get the token transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The end date from which to get the token transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "transactionTypes",
          "description": "Array of transaction types. Allowed values are 'buy', 'sell'.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns swap transactions by wallet address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "page_size",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transactionHash",
                    "type": "string",
                    "example": "0x2bfcba4715774420936669cd0ff2241d70e9abecab76c9db813602015b3134ad"
                  },
                  {
                    "name": "transactionIndex",
                    "type": "number",
                    "example": 1
                  },
                  {
                    "name": "transactionType",
                    "type": "string",
                    "example": "buy"
                  },
                  {
                    "name": "blockTimestamp",
                    "type": "string",
                    "example": "2022-02-22T00:00:00Z"
                  },
                  {
                    "name": "blockNumber",
                    "type": "number",
                    "example": 21093423
                  },
                  {
                    "name": "subCategory",
                    "type": "string",
                    "example": "accumulation"
                  },
                  {
                    "name": "walletAddress",
                    "type": "string",
                    "example": "0x2bfcba4715774420936669cd0ff2241d70e9abec"
                  },
                  {
                    "name": "walletAddressLabel",
                    "type": "string",
                    "example": "Murad Wallet"
                  },
                  {
                    "name": "entity",
                    "type": "string",
                    "example": "Murad"
                  },
                  {
                    "name": "entityLogo",
                    "type": "string",
                    "example": "https://entities-logos.s3.us-east-1.amazonaws.com/murad.png"
                  },
                  {
                    "name": "pairAddress",
                    "type": "string",
                    "example": "0x36a46dff597c5a444bbc521d26787f57867d2214"
                  },
                  {
                    "name": "pairLabel",
                    "type": "string",
                    "example": "BRETT/WETH"
                  },
                  {
                    "name": "exchangeAddress",
                    "type": "string",
                    "example": "0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f"
                  },
                  {
                    "name": "exchangeName",
                    "type": "string",
                    "example": "Uniswap v2"
                  },
                  {
                    "name": "exchangeLogo",
                    "type": "string",
                    "example": "https://entities-logos.s3.us-east-1.amazonaws.com/uniswap.png"
                  },
                  {
                    "name": "bought",
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "The address of the token",
                        "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token",
                        "example": "BRETT"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the token",
                        "example": "BRETT"
                      },
                      "logo": {
                        "type": "string",
                        "description": "The URL of the token's logo",
                        "example": "https://cdn.moralis.io/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                      },
                      "amount": {
                        "type": "string",
                        "description": "The amount of the token",
                        "example": "14811.98"
                      },
                      "usdPrice": {
                        "type": "number",
                        "description": "The amount of the token",
                        "example": 0.078634
                      },
                      "usdAmount": {
                        "type": "number",
                        "description": "The amount of the token",
                        "example": 1155.33
                      }
                    },
                    "required": [
                      "address",
                      "name",
                      "symbol",
                      "logo",
                      "amount",
                      "usdPrice",
                      "usdAmount"
                    ]
                  },
                  {
                    "name": "sold",
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "The address of the token",
                        "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token",
                        "example": "BRETT"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the token",
                        "example": "BRETT"
                      },
                      "logo": {
                        "type": "string",
                        "description": "The URL of the token's logo",
                        "example": "https://cdn.moralis.io/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                      },
                      "amount": {
                        "type": "string",
                        "description": "The amount of the token",
                        "example": "14811.98"
                      },
                      "usdPrice": {
                        "type": "number",
                        "description": "The amount of the token",
                        "example": 0.078634
                      },
                      "usdAmount": {
                        "type": "number",
                        "description": "The amount of the token",
                        "example": 1155.33
                      }
                    },
                    "required": [
                      "address",
                      "name",
                      "symbol",
                      "logo",
                      "amount",
                      "usdPrice",
                      "usdAmount"
                    ]
                  },
                  {
                    "name": "baseQuotePrice",
                    "type": "string",
                    "example": "0.00003376480687"
                  },
                  {
                    "name": "totalValueUsd",
                    "type": "number",
                    "example": 1165
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getSwapsByPairAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get swap transactions by pair address",
      "description": "Fetch swap transactions (buy, sell, add/remove liquidity) for a specific token pair.",
      "method": "GET",
      "path": "/pairs/:address/swaps",
      "pathParams": [
        {
          "name": "address",
          "description": "The pair address token-transactions are to be retrieved for.",
          "required": true,
          "example": "0xa43fe16908251ee70ef74718545e4fe6c5ccec9f",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "cursor",
          "description": "The cursor returned in the previous response (used for getting the next page).",
          "type": "string"
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        },
        {
          "name": "fromBlock",
          "description": "The minimum block number from which to get the token transactions\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "required": false,
          "type": "number"
        },
        {
          "name": "toBlock",
          "description": "The block number to get the token transactions from",
          "required": false,
          "type": "string"
        },
        {
          "name": "fromDate",
          "description": "The start date from which to get the token transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'fromBlock' or 'fromDate'\n* If 'fromDate' and 'fromBlock' are provided, 'fromBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "toDate",
          "description": "The end date from which to get the token transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'toBlock' or 'toDate'\n* If 'toDate' and 'toBlock' are provided, 'toBlock' will be used.\n",
          "required": false,
          "type": "string"
        },
        {
          "name": "order",
          "description": "The order of the result, in ascending (ASC) or descending (DESC)",
          "required": false,
          "example": "DESC",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        {
          "name": "transactionTypes",
          "description": "Array of transaction types. Allowed values are 'buy', 'sell', 'addLiquidity', 'removeLiquidity'.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns swap transactions by pair address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "page",
                "type": "number",
                "description": "The current page of the result",
                "example": "2"
              },
              {
                "name": "pageSize",
                "type": "number",
                "description": "The number of results per page",
                "example": "100"
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "The cursor to get to the next page"
              },
              {
                "name": "exchangeAddress",
                "type": "string",
                "example": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
              },
              {
                "name": "exchangeName",
                "type": "string",
                "example": "Uniswap v2"
              },
              {
                "name": "exchangeLogo",
                "type": "string",
                "example": "https://entities-logos.s3.us-east-1.amazonaws.com/uniswap.png"
              },
              {
                "name": "pairLabel",
                "type": "string",
                "example": "BRETT/WETH"
              },
              {
                "name": "pairAddress",
                "type": "string",
                "example": "0x36a46dff597c5a444bbc521d26787f57867d2214"
              },
              {
                "name": "baseToken",
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "The address of the token",
                    "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the token",
                    "example": "BRETT"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the token",
                    "example": "BRETT"
                  },
                  "logo": {
                    "type": "string",
                    "description": "The URL of the token's logo",
                    "example": "https://cdn.moralis.io/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                  },
                  "amount": {
                    "type": "string",
                    "description": "The amount of the token",
                    "example": "14811.98"
                  },
                  "usdPrice": {
                    "type": "number",
                    "description": "The amount of the token",
                    "example": 0.078634
                  },
                  "usdAmount": {
                    "type": "number",
                    "description": "The amount of the token",
                    "example": 1155.33
                  }
                },
                "required": [
                  "address",
                  "name",
                  "symbol",
                  "logo",
                  "amount",
                  "usdPrice",
                  "usdAmount"
                ]
              },
              {
                "name": "quoteToken",
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "The address of the token",
                    "example": "0x003dde3494f30d861d063232c6a8c04394b686ff"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the token",
                    "example": "BRETT"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the token",
                    "example": "BRETT"
                  },
                  "logo": {
                    "type": "string",
                    "description": "The URL of the token's logo",
                    "example": "https://cdn.moralis.io/tokens/0x0000000000085d4780b73119b644ae5ecd22b376.png"
                  },
                  "amount": {
                    "type": "string",
                    "description": "The amount of the token",
                    "example": "14811.98"
                  },
                  "usdPrice": {
                    "type": "number",
                    "description": "The amount of the token",
                    "example": 0.078634
                  },
                  "usdAmount": {
                    "type": "number",
                    "description": "The amount of the token",
                    "example": 1155.33
                  }
                },
                "required": [
                  "address",
                  "name",
                  "symbol",
                  "logo",
                  "amount",
                  "usdPrice",
                  "usdAmount"
                ]
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "transactionHash",
                    "type": "string",
                    "example": "0x2bfcba4715774420936669cd0ff2241d70e9abecab76c9db813602015b3134ad"
                  },
                  {
                    "name": "transactionIndex",
                    "type": "number",
                    "example": 1
                  },
                  {
                    "name": "transactionType",
                    "type": "string",
                    "example": "buy"
                  },
                  {
                    "name": "blockTimestamp",
                    "type": "string",
                    "example": "2022-02-22T00:00:00Z"
                  },
                  {
                    "name": "blockNumber",
                    "type": "number",
                    "example": 21093423
                  },
                  {
                    "name": "subCategory",
                    "type": "string",
                    "example": "accumulation"
                  },
                  {
                    "name": "walletAddress",
                    "type": "string",
                    "example": "0x2bfcba4715774420936669cd0ff2241d70e9abec"
                  },
                  {
                    "name": "baseTokenAmount",
                    "type": "string",
                    "example": "1481.00"
                  },
                  {
                    "name": "quoteTokenAmount",
                    "type": "string",
                    "example": "0.634"
                  },
                  {
                    "name": "baseTokenPriceUsd",
                    "type": "number",
                    "example": 0.0734634
                  },
                  {
                    "name": "quoteTokenPriceUsd",
                    "type": "number",
                    "example": 23330
                  },
                  {
                    "name": "baseQuotePrice",
                    "type": "string",
                    "example": "0.00003376480687"
                  },
                  {
                    "name": "totalValueUsd",
                    "type": "number",
                    "example": 1165
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getSnipersByPairAddress": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get snipers by pair address",
      "description": "Identify sniper wallets that bought a token within a specified timeframe (`blocksAfterCreation`). Each wallet returned includes detailed information about how much was bought, sold as well as PnL stats and more.",
      "method": "GET",
      "path": "/pairs/:address/snipers",
      "pathParams": [
        {
          "name": "address",
          "description": "The pair address token-transactions are to be retrieved for.",
          "required": true,
          "example": "0xa3c2076eb97d573cc8842f1db1ecdf7b6f77ba27",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false,
          "example": "eth",
          "type": "string",
          "enum": [
            "eth",
            "0x1",
            "sepolia",
            "0xaa36a7",
            "polygon",
            "0x89",
            "bsc",
            "0x38",
            "bsc testnet",
            "0x61",
            "avalanche",
            "0xa86a",
            "fantom",
            "0xfa",
            "cronos",
            "0x19",
            "arbitrum",
            "0xa4b1",
            "chiliz",
            "0x15b38",
            "chiliz testnet",
            "0x15b32",
            "gnosis",
            "0x64",
            "gnosis testnet",
            "0x27d8",
            "base",
            "0x2105",
            "base sepolia",
            "0x14a34",
            "optimism",
            "0xa",
            "holesky",
            "0x4268",
            "polygon amoy",
            "0x13882",
            "linea",
            "0xe708",
            "moonbeam",
            "0x504",
            "moonriver",
            "0x505",
            "moonbase",
            "0x507",
            "linea sepolia",
            "0xe705",
            "flow",
            "0x2eb",
            "flow-testnet",
            "0x221",
            "ronin",
            "0x7e4",
            "ronin-testnet",
            "0x7e5",
            "lisk",
            "0x46f",
            "lisk-sepolia",
            "0x106a",
            "pulse",
            "0x171"
          ]
        },
        {
          "name": "blocksAfterCreation",
          "description": "Number of blocks after the creation\n",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Returns snipers by pair address.",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "transactionHash",
                "type": "string",
                "example": "0x2bfcba4715774420936669cd0ff2241d70e9abecab76c9db813602015b3134ad"
              },
              {
                "name": "blockTimestamp",
                "type": "string",
                "example": "2022-02-22T00:00:00Z"
              },
              {
                "name": "blockNumber",
                "type": "number",
                "example": 21093423
              },
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "walletAddress",
                    "type": "string",
                    "example": "0x2bfcba4715774420936669cd0ff2241d70e9abec"
                  },
                  {
                    "name": "totalTokensSniped",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "totalSnipedUsd",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "totalSnipedTransactions",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "totalTokensSold",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "totalSoldUsd",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "totalSellTransactions",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "currentBalance",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "currentBalanceUsdValue",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "realizedProfitPercentage",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "realizedProfitUsd",
                    "type": "number",
                    "example": 0
                  },
                  {
                    "name": "snipedTransactions",
                    "type": "object",
                    "fields": [
                      {
                        "name": "transactionHash",
                        "type": "string",
                        "example": "0x2bfcba4715774420936669cd0ff2241d70e9abec"
                      },
                      {
                        "name": "blocksAfterCreation",
                        "type": "number",
                        "example": 0
                      },
                      {
                        "name": "transactionTimestamp",
                        "type": "number",
                        "example": 0
                      }
                    ]
                  },
                  {
                    "name": "sellTransactions",
                    "type": "object",
                    "fields": [
                      {
                        "name": "transactionHash",
                        "type": "string",
                        "example": "0x2bfcba4715774420936669cd0ff2241d70e9abec"
                      },
                      {
                        "name": "blocksAfterCreation",
                        "type": "number",
                        "example": 0
                      },
                      {
                        "name": "transactionTimestamp",
                        "type": "number",
                        "example": 0
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getVolumeStatsByChain": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get trading stats by chain",
      "description": "Retrieve volume, active wallets and transaction stats for a blockchain over various time periods. Returns data for all chains in a single request.",
      "method": "GET",
      "path": "/volume/chains",
      "pathParams": [],
      "queryParams": [],
      "responses": [
        {
          "status": "200",
          "description": "Successful response",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "chains",
                "type": "object",
                "fields": [
                  {
                    "name": "chainId",
                    "type": "string",
                    "example": "0x1"
                  },
                  {
                    "name": "totalVolume",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "activeWallets",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalTransactions",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getVolumeStatsByCategory": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get trading stats by categories",
      "description": "Access volume, buyers, sellers and transaction stats for a blockchain, grouped by category. Filter by `chain`.",
      "method": "GET",
      "path": "/volume/categories",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "categories",
                "type": "object",
                "fields": [
                  {
                    "name": "categoryId",
                    "type": "string",
                    "example": "0x1"
                  },
                  {
                    "name": "totalBuyVolume",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalSellVolume",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalBuyers",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalSellers",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalBuys",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalSells",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "uniqueWallets",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTimeSeriesVolume": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Retrieve timeseries trading stats by chain",
      "description": "Fetch timeseries volume, liquidity and FDV for a specific blockchain.",
      "method": "GET",
      "path": "/volume/timeseries",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false
        },
        {
          "name": "timeframe",
          "description": "The timeframe to query",
          "required": true,
          "example": "1d",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "timeseries",
                "type": "object",
                "fields": [
                  {
                    "name": "timestamp",
                    "type": "string",
                    "example": "2022-02-22T00:00:00Z"
                  },
                  {
                    "name": "volume",
                    "type": "number",
                    "example": 4565
                  },
                  {
                    "name": "liquidityUsd",
                    "type": "number",
                    "example": 4565
                  },
                  {
                    "name": "fullyDilutedValuation",
                    "type": "number",
                    "example": 4565
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTimeSeriesVolumeByCategory": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Retrieve timeseries trading stats by category",
      "description": "Fetch timeseries buy volume, sell volume, liquidity and FDV for a specific category. Optionally filter by `chain`.",
      "method": "GET",
      "path": "/volume/timeseries/:categoryId",
      "pathParams": [
        {
          "name": "categoryId",
          "description": "The category id",
          "required": true,
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false
        },
        {
          "name": "timeframe",
          "description": "The timeframe to query",
          "required": true,
          "example": "1d",
          "type": "string"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "timeseries",
                "type": "object",
                "fields": [
                  {
                    "name": "timestamp",
                    "type": "string",
                    "example": "2022-02-22T00:00:00Z"
                  },
                  {
                    "name": "buyVolume",
                    "type": "number",
                    "example": 4565
                  },
                  {
                    "name": "sellVolume",
                    "type": "number",
                    "example": 4565
                  },
                  {
                    "name": "liquidityUsd",
                    "type": "number",
                    "example": 4565
                  },
                  {
                    "name": "fullyDilutedValuation",
                    "type": "number",
                    "example": 4565
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTimeSeriesTokenAnalytics": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Retrieve timeseries trading stats by token addresses",
      "description": "Fetch timeseries buy volume, sell volume, liquidity and FDV for multiple tokens. Accepts an array of up to 200 `tokens`, each requiring `chain` and `tokenAddress`.",
      "method": "POST",
      "path": "/tokens/analytics/timeseries",
      "pathParams": [],
      "queryParams": [
        {
          "name": "timeframe",
          "description": "The timeframe to query",
          "required": true,
          "example": "1d",
          "type": "string"
        }
      ],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "tokens",
            "type": "object",
            "description": "The tokens to be fetched",
            "example": [
              {
                "chain": "0x1",
                "tokenAddress": "0xdac17f958d2ee523a2206206994597c13d831ec7"
              },
              {
                "chain": "solana",
                "tokenAddress": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
              }
            ],
            "fields": [
              {
                "name": "chain",
                "type": "string",
                "description": "The chain to query",
                "example": "eth",
                "default": "eth",
                "enum": [
                  "eth",
                  "0x1",
                  "sepolia",
                  "0xaa36a7",
                  "polygon",
                  "0x89",
                  "bsc",
                  "0x38",
                  "bsc testnet",
                  "0x61",
                  "avalanche",
                  "0xa86a",
                  "fantom",
                  "0xfa",
                  "cronos",
                  "0x19",
                  "arbitrum",
                  "0xa4b1",
                  "chiliz",
                  "0x15b38",
                  "chiliz testnet",
                  "0x15b32",
                  "gnosis",
                  "0x64",
                  "gnosis testnet",
                  "0x27d8",
                  "base",
                  "0x2105",
                  "base sepolia",
                  "0x14a34",
                  "optimism",
                  "0xa",
                  "holesky",
                  "0x4268",
                  "polygon amoy",
                  "0x13882",
                  "linea",
                  "0xe708",
                  "moonbeam",
                  "0x504",
                  "moonriver",
                  "0x505",
                  "moonbase",
                  "0x507",
                  "linea sepolia",
                  "0xe705",
                  "flow",
                  "0x2eb",
                  "flow-testnet",
                  "0x221",
                  "ronin",
                  "0x7e4",
                  "ronin-testnet",
                  "0x7e5",
                  "lisk",
                  "0x46f",
                  "lisk-sepolia",
                  "0x106a",
                  "pulse",
                  "0x171"
                ]
              },
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address",
                "example": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Successful response",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "result",
                "type": "object",
                "fields": [
                  {
                    "name": "chainId",
                    "type": "string",
                    "example": "0x1"
                  },
                  {
                    "name": "tokenAddress",
                    "type": "string",
                    "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
                  },
                  {
                    "name": "timeseries",
                    "type": "object",
                    "fields": [
                      {
                        "name": "timestamp",
                        "type": "string",
                        "example": "2022-02-22T00:00:00Z"
                      },
                      {
                        "name": "buyVolume",
                        "type": "number",
                        "example": 4565
                      },
                      {
                        "name": "sellVolume",
                        "type": "number",
                        "example": 4565
                      },
                      {
                        "name": "liquidityUsd",
                        "type": "number",
                        "example": 4565
                      },
                      {
                        "name": "fullyDilutedValuation",
                        "type": "number",
                        "example": 4565
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "getTrendingTokensV2": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get trending tokens",
      "description": "List top tokens trending based on trading activity, volume, liquidity and more. By default this returns cross-chain results, including Solana. Optionally filter by `chain` for single chain results.",
      "method": "GET",
      "path": "/tokens/trending",
      "pathParams": [],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false
        },
        {
          "name": "limit",
          "description": "The desired page size of the result.",
          "required": false,
          "type": "number"
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response"
        }
      ]
    },
    "getTokenAnalytics": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get token analytics by token address",
      "description": "Retrieve detailed trading analytics for a specific token, including buy volume, sell volume, buyers, sellers, transactions, liquidity and FDV trends over time.",
      "method": "GET",
      "path": "/tokens/:tokenAddress/analytics",
      "pathParams": [
        {
          "name": "tokenAddress",
          "description": "The token address to query",
          "required": true,
          "example": "0x6982508145454ce325ddbe47a25d4ec3d2311933",
          "type": "string"
        }
      ],
      "queryParams": [
        {
          "name": "chain",
          "description": "The chain to query",
          "required": false
        }
      ],
      "responses": [
        {
          "status": "200",
          "description": "Successful response",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "categoryId",
                "type": "string",
                "example": "0x1"
              },
              {
                "name": "totalBuyVolume",
                "type": "object",
                "properties": {
                  "5m": {
                    "type": "number",
                    "format": "double",
                    "example": 6516719.425429553
                  },
                  "1h": {
                    "type": "number",
                    "format": "double",
                    "example": 137489621.30780438
                  },
                  "6h": {
                    "type": "number",
                    "format": "double",
                    "example": 585436101.0503464
                  },
                  "24h": {
                    "type": "number",
                    "format": "double",
                    "example": 2668170156.0409784
                  }
                }
              },
              {
                "name": "totalSellVolume",
                "type": "object",
                "properties": {
                  "5m": {
                    "type": "number",
                    "format": "double",
                    "example": 6516719.425429553
                  },
                  "1h": {
                    "type": "number",
                    "format": "double",
                    "example": 137489621.30780438
                  },
                  "6h": {
                    "type": "number",
                    "format": "double",
                    "example": 585436101.0503464
                  },
                  "24h": {
                    "type": "number",
                    "format": "double",
                    "example": 2668170156.0409784
                  }
                }
              },
              {
                "name": "totalBuyers",
                "type": "object",
                "properties": {
                  "5m": {
                    "type": "number",
                    "format": "double",
                    "example": 6516719.425429553
                  },
                  "1h": {
                    "type": "number",
                    "format": "double",
                    "example": 137489621.30780438
                  },
                  "6h": {
                    "type": "number",
                    "format": "double",
                    "example": 585436101.0503464
                  },
                  "24h": {
                    "type": "number",
                    "format": "double",
                    "example": 2668170156.0409784
                  }
                }
              },
              {
                "name": "totalSellers",
                "type": "object",
                "properties": {
                  "5m": {
                    "type": "number",
                    "format": "double",
                    "example": 6516719.425429553
                  },
                  "1h": {
                    "type": "number",
                    "format": "double",
                    "example": 137489621.30780438
                  },
                  "6h": {
                    "type": "number",
                    "format": "double",
                    "example": 585436101.0503464
                  },
                  "24h": {
                    "type": "number",
                    "format": "double",
                    "example": 2668170156.0409784
                  }
                }
              },
              {
                "name": "totalBuys",
                "type": "object",
                "properties": {
                  "5m": {
                    "type": "number",
                    "format": "double",
                    "example": 6516719.425429553
                  },
                  "1h": {
                    "type": "number",
                    "format": "double",
                    "example": 137489621.30780438
                  },
                  "6h": {
                    "type": "number",
                    "format": "double",
                    "example": 585436101.0503464
                  },
                  "24h": {
                    "type": "number",
                    "format": "double",
                    "example": 2668170156.0409784
                  }
                }
              },
              {
                "name": "totalSells",
                "type": "object",
                "properties": {
                  "5m": {
                    "type": "number",
                    "format": "double",
                    "example": 6516719.425429553
                  },
                  "1h": {
                    "type": "number",
                    "format": "double",
                    "example": 137489621.30780438
                  },
                  "6h": {
                    "type": "number",
                    "format": "double",
                    "example": 585436101.0503464
                  },
                  "24h": {
                    "type": "number",
                    "format": "double",
                    "example": 2668170156.0409784
                  }
                }
              },
              {
                "name": "uniqueWallets",
                "type": "object",
                "properties": {
                  "5m": {
                    "type": "number",
                    "format": "double",
                    "example": 6516719.425429553
                  },
                  "1h": {
                    "type": "number",
                    "format": "double",
                    "example": 137489621.30780438
                  },
                  "6h": {
                    "type": "number",
                    "format": "double",
                    "example": 585436101.0503464
                  },
                  "24h": {
                    "type": "number",
                    "format": "double",
                    "example": 2668170156.0409784
                  }
                }
              },
              {
                "name": "pricePercentChange",
                "type": "object",
                "properties": {
                  "5m": {
                    "type": "number",
                    "format": "double",
                    "example": 6516719.425429553
                  },
                  "1h": {
                    "type": "number",
                    "format": "double",
                    "example": 137489621.30780438
                  },
                  "6h": {
                    "type": "number",
                    "format": "double",
                    "example": 585436101.0503464
                  },
                  "24h": {
                    "type": "number",
                    "format": "double",
                    "example": 2668170156.0409784
                  }
                }
              },
              {
                "name": "usdPrice",
                "type": "string",
                "example": "530"
              },
              {
                "name": "totalLiquidity",
                "type": "string",
                "example": "530"
              },
              {
                "name": "totalFullyDilutedValuation",
                "type": "string",
                "example": "530"
              }
            ]
          }
        }
      ]
    },
    "getMultipleTokenAnalytics": {
      "apiHost": "https://deep-index.moralis.io/api/v2.2",
      "summary": "Get token analytics for a list of token addresses",
      "description": "Fetch analytics for multiple tokens, including buy volume, sell volume, buyers, sellers, transactions, liquidity and FDV trends over time. Accepts an array of up to 200 `tokens`, each requiring `chain` and `tokenAddress`.",
      "method": "POST",
      "path": "/tokens/analytics",
      "pathParams": [],
      "queryParams": [],
      "bodyParam": {
        "required": true,
        "description": "Body",
        "type": "object",
        "fields": [
          {
            "name": "tokens",
            "type": "object",
            "description": "The tokens to be fetched",
            "example": [
              {
                "chain": "0x1",
                "tokenAddress": "0xdac17f958d2ee523a2206206994597c13d831ec7"
              },
              {
                "chain": "solana",
                "tokenAddress": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
              }
            ],
            "fields": [
              {
                "name": "chain",
                "type": "string",
                "description": "The chain to query",
                "example": "eth",
                "default": "eth",
                "enum": [
                  "eth",
                  "0x1",
                  "sepolia",
                  "0xaa36a7",
                  "polygon",
                  "0x89",
                  "bsc",
                  "0x38",
                  "bsc testnet",
                  "0x61",
                  "avalanche",
                  "0xa86a",
                  "fantom",
                  "0xfa",
                  "cronos",
                  "0x19",
                  "arbitrum",
                  "0xa4b1",
                  "chiliz",
                  "0x15b38",
                  "chiliz testnet",
                  "0x15b32",
                  "gnosis",
                  "0x64",
                  "gnosis testnet",
                  "0x27d8",
                  "base",
                  "0x2105",
                  "base sepolia",
                  "0x14a34",
                  "optimism",
                  "0xa",
                  "holesky",
                  "0x4268",
                  "polygon amoy",
                  "0x13882",
                  "linea",
                  "0xe708",
                  "moonbeam",
                  "0x504",
                  "moonriver",
                  "0x505",
                  "moonbase",
                  "0x507",
                  "linea sepolia",
                  "0xe705",
                  "flow",
                  "0x2eb",
                  "flow-testnet",
                  "0x221",
                  "ronin",
                  "0x7e4",
                  "ronin-testnet",
                  "0x7e5",
                  "lisk",
                  "0x46f",
                  "lisk-sepolia",
                  "0x106a",
                  "pulse",
                  "0x171"
                ]
              },
              {
                "name": "tokenAddress",
                "type": "string",
                "description": "The token address",
                "example": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0"
              }
            ]
          }
        ]
      },
      "responses": [
        {
          "status": "200",
          "description": "Successful response",
          "body": {
            "type": "object",
            "fields": [
              {
                "name": "categories",
                "type": "object",
                "fields": [
                  {
                    "name": "categoryId",
                    "type": "string",
                    "example": "0x1"
                  },
                  {
                    "name": "totalBuyVolume",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalSellVolume",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalBuyers",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalSellers",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalBuys",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "totalSells",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "uniqueWallets",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "pricePercentChange",
                    "type": "object",
                    "properties": {
                      "5m": {
                        "type": "number",
                        "format": "double",
                        "example": 6516719.425429553
                      },
                      "1h": {
                        "type": "number",
                        "format": "double",
                        "example": 137489621.30780438
                      },
                      "6h": {
                        "type": "number",
                        "format": "double",
                        "example": 585436101.0503464
                      },
                      "24h": {
                        "type": "number",
                        "format": "double",
                        "example": 2668170156.0409784
                      }
                    }
                  },
                  {
                    "name": "usdPrice",
                    "type": "string",
                    "example": "530"
                  },
                  {
                    "name": "totalLiquidity",
                    "type": "string",
                    "example": "530"
                  },
                  {
                    "name": "totalFullyDilutedValuation",
                    "type": "string",
                    "example": "530"
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  }
}